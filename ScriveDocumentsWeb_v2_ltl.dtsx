<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="1/16/2017 3:52:36 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="GRÁNA"
  DTS:CreatorName="MIRACLE\einar"
  DTS:DTSID="{387CC5BD-B9EE-48E8-B81B-1681A7444B72}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="14.0.3002.101"
  DTS:LocaleID="1039"
  DTS:ObjectName="ScriveDocumentsWeb_v2_ltl"
  DTS:PackageType="5"
  DTS:VersionBuild="309"
  DTS:VersionGUID="{E9D9EDC6-DF22-4C84-93ED-8A6447DB429C}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[LocalHost.flotaskjal]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{EB8067AE-17DE-4C61-BD1C-165EB89382F4}"
      DTS:ObjectName="LocalHost.flotaskjal">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=.;Initial Catalog=flotaskjal;Provider=SQLNCLI11;Integrated Security=SSPI;Auto Translate=False;Application Name=SSIS-Package-{EB8067AE-17DE-4C61-BD1C-165EB89382F4}LocalHost.flotaskjal;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{0C8BD61D-0B7D-419C-903D-4D506A760B3C}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="fullLoad">
      <DTS:VariableValue
        DTS:DataType="3">1</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{EB0DB012-AA7E-485E-A7E2-25B3D98A4A52}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="getMaxNorows">
      <DTS:VariableValue
        DTS:DataType="3">100</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{1E709699-4BD8-4138-B83F-F126F211DA49}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="getNoRows">
      <DTS:VariableValue
        DTS:DataType="3">200</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{7E130ACE-1E76-41AA-BC59-620F6C0C9CC1}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="MaxDocID">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{E512F577-199F-47B8-9C72-C822AF112686}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="temp">
      <DTS:VariableValue
        DTS:DataType="8">Langtímasamningur: einar - 9222115557403763556</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\exec ET popDimRentalAgreement"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="exec ETL.popDimRentalAgreement  "
      DTS:Disabled="True"
      DTS:DTSID="{02A7E502-8462-48C4-A263-8238F9E95AEF}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="exec ET popDimRentalAgreement"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="2">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{EB8067AE-17DE-4C61-BD1C-165EB89382F4}"
          SQLTask:SqlStatementSource="exec ETL.popDimRentalAgreement  " xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Getcontracts"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{C26DC2BF-F504-426E-ACD7-3B2951C25241}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:FailPackageOnFailure="True"
      DTS:FailParentOnFailure="True"
      DTS:LocaleID="-1"
      DTS:MaxErrorCount="1000"
      DTS:ObjectName="Getcontracts"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server v10; (C) 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables>
        <DTS:Variable
          DTS:CreationName=""
          DTS:DTSID="{BDE0210F-7BC1-4FD3-B758-C1AE8055B602}"
          DTS:IncludeInDebugDump="6789"
          DTS:Namespace="User"
          DTS:ObjectName="rows">
          <DTS:VariableValue
            DTS:DataType="3">100</DTS:VariableValue>
        </DTS:Variable>
      </DTS:Variables>
      <DTS:ObjectData>
        <pipeline
          BLOBTempStoragePath=""
          bufferTempStoragePath=""
          version="1">
          <components>
            <component
              refId="Package\Getcontracts\get Scripe contracts from web (rest)"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;11"
              description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
              name="get Scripe contracts from web (rest)"
              validateExternalMetadata="False"
              version="11">
              <properties>
                <property
                  dataType="System.String"
                  description="Stores the source code of the component"
                  isArray="true"
                  name="SourceCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="33">
                    <arrayElement
                      dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public ContractsBuffer ContractsBuffer;

    public virtual void FinishOutputs()
    {
    }

    private void MarkOutputsFinished()
    {

        if (null != ContractsBuffer)
        {
            ContractsBuffer.SetEndOfRowset();
            ContractsBuffer = null;
        }

    }

    public override void PrimeOutput(int Outputs, int[] OutputIDs, PipelineBuffer[] Buffers, OutputNameMap OutputMap)
    {
       for(int Idx = 0; Idx < Outputs; Idx++)
       {
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"Contracts"))
            {
                ContractsBuffer = new ContractsBuffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
        }

        CreateNewOutputRows();

        FinishOutputs();
        MarkOutputsFinished();

    }

    public virtual void CreateNewOutputRows()
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public IDTSConnectionManager100 Connection
    {
        get
        {
            return ParentComponent.ComponentMetaData.RuntimeConnectionCollection.GetRuntimeConnectionByName(@"Connection").ConnectionManager;
        }
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public Int32 fullLoad
    {
        get
        {
            return (Int32)(ParentComponent.ReadOnlyVariables["fullLoad"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public Int32 getMaxNorows
    {
        get
        {
            return (Int32)(ParentComponent.ReadOnlyVariables["getMaxNorows"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public Int32 getNoRows
    {
        get
        {
            return (Int32)(ParentComponent.ReadOnlyVariables["getNoRows"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String MaxDocID
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["MaxDocID"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using System.Net;
using System.IO;
using System.Collections.Generic;
using System.Web.Script.Serialization;

#endregion
using Newtonsoft.Json;

[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{

    // Some examples:

    public int GetNumberOfRows = 10;
    IDTSComponentMetaData100 compMetadataGobal;
     bool fail = false;
    string allColumns = "";
    public override void PreExecute()
    {
        base.PreExecute();

        /*
          Add your code here for preprocessing or remove if not needed
        */
    }

    public override void PostExecute()
    {
        base.PostExecute();
        /*
          Add your code here for postprocessing or remove if not needed
          You can set read/write variables here, for example:
          Variables.MyIntVar = 100
        */
    }

    // --
    public override void CreateNewOutputRows()
    {
        try
        {
            //Contract ctrct;
            ScriveDocuments outPutDocs;
            //            -- int iDocsOffset = 0;
            int iDocsOffset = 0; // 130000;  // start from 120000 

            int iMaxDocs = 200;
            int iDocsRead = 200;
            int iDocNo = 0;
            int iDocNoLoop = 0;
            int iDocLop = 0;

            bool done = false;
            int iFullLoad = 1;
            int iGetTotalMax = 100;
            Question q;
            ulong uMaxDocID = 0;
            ulong uCurrentMaxDocID = 0;
            

            uMaxDocID = (ulong)Convert.ToUInt64(Variables.MaxDocID, 10);
            iMaxDocs = Variables.getNoRows; // ("User::FileName").Value.ToString();            
            iGetTotalMax = Variables.getMaxNorows;
            compMetadataGobal = this.ComponentMetaData;

            iFullLoad = Variables.fullLoad;
            // Read an SSIS package parameter and sets its value in an SSIS variable            
            //--
            iDocNo = iDocsOffset; // 

            while (done == false) // (((iDocNo != iDocsRead || done ) && iFullLoad == 1) || (((iFullLoad == 0) && iGetTotalMax > iDocNoLoop) || done))
            {
                outPutDocs = getWebServiceResult(iDocsOffset, iMaxDocs, out iDocsRead);
                //compMetadataGobal.FireError(1, " Pfoffset : " + iDocsOffset.ToString() + "  iMaxDocs: " + iMaxDocs.ToString() + "  IdocsRead :" + iDocsRead.ToString() + "  CurrentMaxDocID " + uCurrentMaxDocID.ToString(), "", "", 0, out fail);                
                if (iDocsRead < (iMaxDocs))
                    done = true;
                // Read an SSIS package parameter and sets its value in an SSIS variable

                iDocLop = 0;
                foreach (var d in outPutDocs.documents)
                {
                    iDocNo++; // add 1
                    iDocLop++;
                    iDocNoLoop++;

                    //
                    ContractsBuffer.AddRow();
                    //Console.WriteLine("Document  ID = {0}, Name={1}", d.id, d.title);
                    //ctrct = new Contract();
                    //ctrct.id = d.id;
                    ContractsBuffer.ID  = (ulong)Convert.ToInt64(d.id);
                    uCurrentMaxDocID    = (ulong)Convert.ToInt64(d.id);
                    //ctrct.title = d.title;

                    ContractsBuffer.Title = d.title;
                    ContractsBuffer.ctime = Trunc(Convert.ToString(d.ctime), 50);
                    ContractsBuffer.mtime = Trunc(Convert.ToString(d.mtime), 50);
                    ContractsBuffer.status = Trunc(Convert.ToString(d.status), 50);
                    // ContractsBuffer.documentxml = d;
                    ContractsBuffer.notes = "";
                    allColumns = "ID=" + d.id; // geyma alla dalka

                    //  We get docs in descending order , til we reach the MaxContractID c number we have in 
                    // the Scirve table.
                    if (uMaxDocID == (ulong)Convert.ToInt64(d.id))
                    {
                        done = true;

                    }
                    foreach (var par in d.parties)
                    {
                        if (par.is_signatory == true)
                        {
                            if (par.consent_module != null )
                            {
                                //                                ContractsBuffer.consentspecialofferquestion = "bíngó" ; 
                                if (par.consent_module.title == "Special offers")
                                {//          "title": "Special offers",
                                    foreach (var qst in par.consent_module.questions)
                                    {
                                        if (qst.ToString() != null)
                                        {
                                            ContractsBuffer.consentspecialofferquestion = qst.title;
                                            ContractsBuffer.consentspecialofferreply = qst.response.ToString();
                                        }
                                    }
                                }
                                else
                                {
                                    foreach (var qst in par.consent_module.questions)
                                    {
                                        if (qst.title != null)
                                        {
                                            ContractsBuffer.conseentotherquestion = qst.title;
                                            ContractsBuffer.consentotherreply = qst.response.ToString();
                                        }

                                    }
                                }
                           
                        }
                        foreach (var sig in par.fields)
                            {
                                if (!String.IsNullOrEmpty (sig.name)) {
                                    allColumns = allColumns + sig.name + "=" + sig.value +";" ;
                                 }
                                if (sig.type == "name" && sig.order == 1)
                                {
                                    ContractsBuffer.FirstName = sig.value;
                                    // myStr.Substring(0, THRESHOLD) 
                                }
                                if ((sig.type == "name") && sig.order == 2)
                                {
                                    ContractsBuffer.LastName = sig.value;
                                }
                                if (sig.type == "email") { ContractsBuffer.email = Trunc(sig.value, 50); }
                                if (sig.name == "Name"  &&  sig.name == "name")
                                    { ContractsBuffer.FullName = Trunc(sig.value, 50); }
                                if (sig.name == "RA") { ContractsBuffer.RentalAgreement = Trunc(sig.value, 50); }
                                if (sig.name == "reservationnumber") { ContractsBuffer.ReservationNumber = Trunc(sig.value, 50); }
                                if (sig.name == "startlocation") { ContractsBuffer.startlocation = Trunc(sig.value, 50); }
                                if (sig.name == "returnlocation") { ContractsBuffer.returnlocation = Trunc(sig.value, 50); }
                                if (sig.name == "drivinglicense"
                                    || sig.name == "Driver license"
                                    ) { ContractsBuffer.drivinglicense = Trunc(sig.value, 50); }
                                if (sig.name == "registration") { ContractsBuffer.registration = Trunc(sig.value, 50); }
                                if (sig.name == "Name") { ContractsBuffer.FullName = Trunc(sig.value, 50); }

                               
                                // -- fokk
                                if (sig.name == "optionalServicesNotes") { ContractsBuffer.ltoptionalservicenotes= Trunc(sig.value, 2000); }
                                if (sig.name == "notes") { ContractsBuffer.notes = Trunc(sig.value, 2000); }                                
                                if (sig.name == "kmIn")
                                    { ContractsBuffer.inKm= Trunc(sig.value, 50); }

                                if (sig.name == "vehicleType")
                                    { ContractsBuffer.vehicleType =  Trunc(sig.value, 50); }
                                //
                                if (sig.name == "Tengiliður") { ContractsBuffer.lttengiliður = Trunc(sig.value, 50); }
                                //!String.IsNullOrEmpty(sig.name))
                                if (!String.IsNullOrEmpty(sig.name) && sig.name.Length >= 9)
                                {
                                    if (sig.name.Substring(0, 8) == "Bílaskipt" &&
                                            sig.name.Substring(sig.name.Length - 2, 2) == "Já")
                                    { ContractsBuffer.ltbilaskiptija = Trunc(sig.value, 50); }
                                    if (sig.name.Substring(0, 8) == "Bílaskipt" &&
                                           sig.name.Substring(sig.name.Length - 3, 3) == "Nei")
                                    { ContractsBuffer.ltbilaskiptinei = Trunc(sig.value, 50); }

                                    if (sig.name.Substring(0, 8) == "Nagladekk" &&
                                           sig.name.Substring(sig.name.Length - 2, 2) == "Já")
                                    { ContractsBuffer.ltnagladekkja = Trunc(sig.value, 50); }
                                    if (sig.name.Substring(0, 8) == "Nagladekk" &&
                                           sig.name.Substring(sig.name.Length - 3, 3) == "Nei")
                                    { ContractsBuffer.ltnagladekknei = Trunc(sig.value, 50); }                                    
                                }
                                if (sig.name == "Regno") { ContractsBuffer.registration = Trunc(sig.value, 50); }
                                
                                if (sig.name == "Árgerð") { ContractsBuffer.ltbillargerd = Trunc(sig.value, 50); }
                                if (sig.name == "Tegund") { ContractsBuffer.ltbilltegund = Trunc(sig.value, 50); }
                                if (sig.name == "Leiguflokkur") { ContractsBuffer.ltbillleiguflokkur = Trunc(sig.value, 50); }
                                if (sig.name == "Samningsnumer") { ContractsBuffer.ltlangtimasamningsnumer = Trunc(sig.value, 50); }
                                if (sig.name == "Undirbúningur samings") { ContractsBuffer.ltundirbúningursamnings = Trunc(sig.value, 50); }
                                if (sig.name == "Langtímaleiga") { ContractsBuffer.ltalmc1Langtimaleiga=Trunc(sig.value,50); }

                                if (sig.name == "Vetrarleiga") { ContractsBuffer.ltalmc1Vetrarleiga = Trunc(sig.value, 50); }
                                if (sig.name == "Framlenging") { ContractsBuffer.ltalmc1Framlenging = Trunc(sig.value, 50); }
                                if (sig.name == "Skipt á bíl") { ContractsBuffer.ltalmc1Skipti = Trunc(sig.value, 50); }
                                if (sig.name == "Eldra samningsnr.") { ContractsBuffer.lteldrasamningsnr = Trunc(sig.value, 50); }
                                if (sig.name == "Heimili") { ContractsBuffer.ltheimili = Trunc(sig.value, 50); }

                                if (sig.name == "Farsími") { ContractsBuffer.ltfarsími = Trunc(sig.value, 50); }
                                if (sig.name == "Vinnusími") { ContractsBuffer.ltvinnusimi = Trunc(sig.value, 50); }
                                if (sig.name == "address") { ContractsBuffer.address= Trunc(sig.value, 2000); }

                                if (sig.name == "Kennitala") { ContractsBuffer.ltkennitala = Trunc(sig.value, 50); }
                                if (sig.name == "Staður") { ContractsBuffer.ltstaður = Trunc(sig.value, 50); }
                                if (sig.name == "Afh. dagsetn.") { ContractsBuffer.ltbillafhdags= Trunc(sig.value, 50); }
                                if (sig.name == "Lokadagsetning") { ContractsBuffer.ltbilllokdags = Trunc(sig.value, 50); }
                                if (sig.name == "Næsta þjónustuskoðun") { ContractsBuffer.ltbillnextservicekm= Trunc(sig.value, 50); }
                                if (sig.name == "Leiguverð á mánuði") { ContractsBuffer.ltskilmverdprman = Trunc(sig.value, 50); }
                                if (sig.name == "Verð pr km umfram innif akstur") { ContractsBuffer.ltskilmverdprkmumfr = Trunc(sig.value, 50); }
                                if (sig.name == "Fyrirframgreidd leiga") { ContractsBuffer.ltfyrirframgeiddleiga = Trunc(sig.value, 50); }
                                if (sig.name == "Eigin áhætta vegna tjóns") { ContractsBuffer.lteigináhætta = Trunc(sig.value, 50); }
                                if (sig.name == "Tryggingar á mánuði") { ContractsBuffer.ltskilmtryggprman = Trunc(sig.value, 50); }
                                if (sig.name == "Samtals verð á mánuði") { ContractsBuffer.ltsamtalsverðmán = Trunc(sig.value, 50); }
                                if (sig.name == "Innifalinn akstur allt að") { ContractsBuffer.ltskilminnifkmtb = Trunc(sig.value, 50); }
                                if (sig.name == "kílómetrar á") { ContractsBuffer.ltskilmverdprkmumfr = Trunc(sig.value, 50); }
                                if (sig.name == "CreditCard") { ContractsBuffer.ltcreditcard = Trunc(sig.value, 50); }
                                if (sig.name == "Invoice") { ContractsBuffer.ltinvoice = Trunc(sig.value, 50); }
                                if (sig.name == "Nagladekk 10.000 kr. Já") { ContractsBuffer.ltbilloptnagladekk = Trunc(sig.value, 50); }                                
                            }
                        }
                    }
                    //Console.WriteLine(ctrct.ToString());                    
                    ContractsBuffer.overflow = allColumns;
                }
                // iDocsOffset = iDocsRead;                
                iDocsOffset = iDocNo;
                if (iDocLop < iMaxDocs)
                    done = true;
            }
        }
        catch (Exception e)
        {
            int xiMaxDocs = 200;
            fail = true;
            failComponent(e.Message +" ; All col umns -> " + allColumns );
                // Makes a package fail (or intercept in Event Handler)                
            xiMaxDocs = xiMaxDocs / 0;
        }

    }


    public string Trunc(string myStr, int THRESHOLD)
    {
        if (myStr.Length > THRESHOLD)
            return myStr.Substring(0, THRESHOLD);
        return myStr;
    }
    private ScriveDocuments getWebServiceResult(int ipOffset, int ipMaxDocs, out int ipDocsRead)
    {
        //    int iLoop =0;
        //bool fail = false;
        String st = @"oauth_signature_method = ""PLAINTEXT"",oauth_consumer_key = ""2978cd5ce798603d_3019"",oauth_token = ""3ac7a5c5b050501d_6475"",oauth_signature = ""b0bcb0133bc3f689&84d0789982116174""";
        String sort = @"[{""sort_by"":""mtime"",""order"":""descending""}]";
        //GET                    /api/v2/documents/list?offset=3000&max=2000&sorting=%5B%5D&_=1484866229639 HTTP/1.1
        //GET https://scrive.com/api/v2/documents/list?offset=0&max=2&sorting=%5B%5D&filter=%5B%5D&_=1485166864837 HTTP/1.1

        //GET https://scrive.com/api/v2/documents/list?offset=3000&max=2000
        //        GET /api/v2/documents/list?offset=3000&max=2000&sorting=%5B%5D&_=1484866229639 HTTP/1.1
        //String stt = @"""PLAINTEXT"",oauth_consumer_key = ""2978cd5ce798603d_3019"",oauth_token = ""3ac7a5c5b050501d_6475"",oauth_signature = ""b0bcb0133bc3f689&84d0789982116174""";
        //""authorization: oauth_signature_method = "PLAINTEXT",oauth_consumer_key = "2978cd5ce798603d_3019",oauth_token = "3ac7a5c5b050501d_6475",oauth_signature = "b0bcb0133bc3f689&84d0789982116174"

        Uri wUriAdress = null;
        //GET https://scrive.com/api/v2/documents/list?offset=3000&max=2000
        //wUriAdress = new Uri("https://scrive.com/api/v2/documents/list?max=" + Convert.ToString(ipMaxDocs));
        //wUriAdress = new Uri("https://scrive.com/api/v2/documents/list?offset=" + Convert.ToString(ipOffset) + "&max=" + Convert.ToString(ipMaxDocs) + "&sorting=%5B%5D&filter=%5B%5D");
        wUriAdress = new Uri("https://scrive.com/api/v2/documents/list?offset=" + Convert.ToString(ipOffset) + "&max=" + Convert.ToString(ipMaxDocs) + "&sorting=" + sort + "&filter=%5B%5D");
        //        
        //compMetadataGobal.FireError(1, "Web string : " + wUriAdress + " : "  , "", "", 0, out fail);                

        // Create the web request
        HttpWebRequest request = WebRequest.Create(wUriAdress) as HttpWebRequest;
        // request.ContentType = "";
        // Accept: "application/json, application/xml, text/json, text/x-json, text/javascript, text/xml"

        request.Method = "GET";
        //request.Headers.Add("authorization", st);

        request.Headers.Add("Authorization", st);
        request.PreAuthenticate = true;
        request.AllowWriteStreamBuffering = true;        
        request.Timeout = 190000;


        HttpWebResponse httpWResp = request.GetResponse() as HttpWebResponse;
       
        ScriveDocuments restResults = null;


        try
        {
            if (httpWResp.StatusCode == HttpStatusCode.OK)
            {
                Stream responseStream = httpWResp.GetResponseStream();
                string jsonString = null;

                using (StreamReader reader = new StreamReader(responseStream))

                { //   reader.                    
                    
                    jsonString = reader.ReadToEnd();
                    reader.Close();
                    reader.Dispose();
                }

                //            MessageBox.Show("Eftir reader: ", jsonString.ToString());
                JsonSerializer nsr = new JsonSerializer();
                
             //     Movie movie2 = (Movie)serializer.Deserialize(file, typeof(Movie));
                JavaScriptSerializer sr = new JavaScriptSerializer();                                   
                //sr.RegisterConverters(new JavaScriptConverter[] { new NullPropertiesConverter() });                
                sr.MaxJsonLength = 500000000;
                //nsr.
                //restResults = nsr.Deserialize<ScriveDocuments>(jsonString);
                //string ignored = JsonConvert.SerializeObject(movie,   Formatting.Indented, new JsonSerializerSettings { NullValueHandling = NullValueHandling.Ignore });

                restResults = JsonConvert.DeserializeObject<ScriveDocuments>(jsonString, new JsonSerializerSettings { NullValueHandling = NullValueHandling.Ignore });
                    //new JsonSerializerSettings { NullValueHandling = NullValueHandling.Ignore }));

                // restResults = sr.Deserialize<ScriveDocuments>(jsonString);
                compMetadataGobal = this.ComponentMetaData;
                ipDocsRead = restResults.total_matching;
                //      compMetadataGobal.FireError(1, "Number of documents!" + Convert.ToInt32(restResults.total_matching), "", "", 0, out fail);        
            }

            else
            {
                failComponent(httpWResp.StatusCode.ToString());

            }
        }
        catch (Exception e)
        {
            failComponent(e.ToString());
        }
        ipDocsRead = restResults.total_matching;
        return restResults;
    }

    private void failComponent(string errorMsg)
    {
        IDTSComponentMetaData100 compMetadata = this.ComponentMetaData;
        // compMetadata.FireError(55000, null, errorMsg, null, 1,);                
    }

    private class NullPropertiesConverter : JavaScriptConverter
    {
        public override object Deserialize(IDictionary<string, object> dictionary, Type type, JavaScriptSerializer serializer)
        {
            throw new NotImplementedException();
        }

        public override IDictionary<string, object> Serialize(object obj, JavaScriptSerializer serializer)
        {
            var jsonExample = new Dictionary<string, object>();
            foreach (var prop in obj.GetType().GetProperties())
            {
                //this object is nullable 
                var nullableobj = prop.PropertyType.IsGenericType && prop.PropertyType.GetGenericTypeDefinition() == typeof(Nullable<>);
                //check if decorated with ScriptIgnore attribute
                bool ignoreProp = prop.IsDefined(typeof(ScriptIgnoreAttribute), true);

                var value = prop.GetValue(obj, System.Reflection.BindingFlags.Public, null, null, null);
                int i;
                //Object is not nullable and value=0 , it is a default value for numeric types 
                if (!(nullableobj == false && value != null && (int.TryParse(value.ToString(), out i) ? i : 1) == 0) && value != null && !ignoreProp)
                    jsonExample.Add(prop.Name, value);
                //else jsonExample.Add(prop.Name, "fasle");
            }

            return jsonExample;
        }

        public override IEnumerable<Type> SupportedTypes
        {
            get { return GetType().Assembly.GetTypes(); }
        }
    }

    
}



public class Description
{
    public string title { get; set; }
    public string text { get; set; }
}
public class Consent
{
    public string title { get; set; }
   // public IList<object> questions { get; set; }
    public IList<Question> questions { get; set; }

}
public class Question
{
    public int id { get; set; }
    public string title { get; set; }
    public string positive_option { get; set; }
    public string negative_option { get; set;
   }
    public Boolean response { get; set; }
    //public o detailed_desription { get; set; }
    public Description detailed_desription { get; set; }

}
public class Field
{
    public string type { get; set; }
    public int order { get; set; }
    public string value { get; set; }
    public string name { get; set; }
}

public class Party
{
    public string id { get; set; }
    public string user_id { get; set; }
    public bool is_author { get; set; }
    public bool is_signatory { get; set; }
    //public string status { get; set; }
    public IList<Field> fields { get; set; }
    public string sign_order { get; set; }
    //public object consent_module { get; set; }
    //    public DateTime sign_time { get; set; }
    //                    sign_time
    public object csv { get; set; }
    public Consent consent_module { get; set; }

}

//"consent_module": {
//          "title": "Special offers",
//          "questions": [
//            {
//              "id": 153534,
//              "title": "Would you like to receive special offers during your stay?",
//              "positive_option": "Yes, please send this to my email address provided.",
//              "negative_option": "No, I do not want any emails related to special offers.",
//              "response": false,
//              "detailed_description": {
//                "title": "More information",
//                "text": "Your consent to receive emails only relates to special offers from us or our specifically chosen partners.  You email address will not be used for any other purpose.  In certain cases we might share your email address along with your name to a third party who handles mass email transactions on our behalf, this information is only stored for the purpose of sending you an email and is then deleted.  Your information is never shared with other third parties.  We use all reasonable safeguards to prevent unauthorized third parties to gain access to your data, including but not limited to Secure Socket Layer (SSL) encryption and your data is stored in Iceland or in other EU countries.  More information can be found in our privacy policy available on our website."
//              }
//            }
//          ]
//        },


//"id": 153526,
//                "title": "Would you like to receive special offers during your stay?",
//                "positive_option": "Yes, please send this to my email address provided.",
//                "negative_option": "No, I do not want any emails related to special offers.",
//                "response": false,
//                "detailed_description": {
//                  "title": "More information",
//                  "text": "Your consent to receive emails only relates to special offers from us or our specifically chosen partners.  You email address will not be used for any other purpose.  In certain cases we might share your email address along with your name to a third party who handles mass email transactions on our behalf, this information is only stored for the purpose of sending you an email and is then deleted.  Your information is never shared with other third parties.  We use all reasonable safeguards to prevent unauthorized third parties to gain access to your data, including but not limited to Secure Socket Layer (SSL) encryption and your data is stored in Iceland or in other EU countries.  More information can be found in our privacy policy available on our website."
//                }
//              }
//            ]


public class Document
{
    public string id { get; set; }
    public string title { get; set; }
    public IList<Party> parties { get; set; }
    public DateTime ctime { get; set; }
    public DateTime mtime { get; set; }
    public string status { get; set; }
    public string lang { get; set; }
    public string timezone { get; set; }
}

public class ScriveDocuments
{
    public int total_matching { get; set; }
    public List<Document> documents { get; set; }
}

//public class Contract
//{
//    public string id { get; set; }
//    public string title { get; set; }
//    public DateTime ctime { get; set; }
//    public DateTime mtime { get; set; }
//    public string status { get; set; }
//    public string firstName { get; set; }
//    public string lastName { get; set; }
//    public string email { get; set; }
//    public string fullName { get; set; }
//    public string reservationNumber { get; set; }
//    public string RA { get; set; }
//    public string startLocation { get; set; }
//    public string returnLocation { get; set; }
//    public string drivinglicense { get; set; }
//    public string registration { get; set; }
//    // type=name as FirstName 
//    // type=name as LastName 
//    // type=email as email                                                                
//    // sig.name = Name -> sig.Value > FullName 
//    // sig.name = RA -> sig.value  -> reservationNumber 
//    // sig.name = startlocation -> Startlocation 
//    // sig.name = returnlocation -> Returnlocation 
//    // sig.name = drivinglicense -> FullName 
//    // sig.name = registration -> FullName 

//}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class ContractsBuffer: ScriptBuffer

{
    public ContractsBuffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public UInt64 ID
    {
        set
        {
            this[0] = value;
        }
    }
    public bool ID_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Title
    {
        set
        {
            this[1] = value;
        }
    }
    public bool Title_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String FirstName
    {
        set
        {
            this[2] = value;
        }
    }
    public bool FirstName_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String LastName
    {
        set
        {
            this[3] = value;
        }
    }
    public bool LastName_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String email
    {
        set
        {
            this[4] = value;
        }
    }
    public bool email_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(4);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String FullName
    {
        set
        {
            this[5] = value;
        }
    }
    public bool FullName_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(5);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String RentalAgreement
    {
        set
        {
            this[6] = value;
        }
    }
    public bool RentalAgreement_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(6);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String startlocation
    {
        set
        {
            this[7] = value;
        }
    }
    public bool startlocation_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(7);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String returnlocation
    {
        set
        {
            this[8] = value;
        }
    }
    public bool returnlocation_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(8);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String drivinglicense
    {
        set
        {
            this[9] = value;
        }
    }
    public bool drivinglicense_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(9);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String registration
    {
        set
        {
            this[10] = value;
        }
    }
    public bool registration_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(10);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String ctime
    {
        set
        {
            this[11] = value;
        }
    }
    public bool ctime_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(11);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String mtime
    {
        set
        {
            this[12] = value;
        }
    }
    public bool mtime_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(12);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String ReservationNumber
    {
        set
        {
            this[13] = value;
        }
    }
    public bool ReservationNumber_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(13);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String notes
    {
        set
        {
            this[14] = value;
        }
    }
    public bool notes_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(14);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String ltalmcontracttype
    {
        set
        {
            this[15] = value;
        }
    }
    public bool ltalmcontracttype_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(15);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String ltalmc1Langtimaleiga
    {
        set
        {
            this[16] = value;
        }
    }
    public bool ltalmc1Langtimaleiga_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(16);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String ltalmc1Vetrarleiga
    {
        set
        {
            this[17] = value;
        }
    }
    public bool ltalmc1Vetrarleiga_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(17);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String ltalmc1Framlenging
    {
        set
        {
            this[18] = value;
        }
    }
    public bool ltalmc1Framlenging_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(18);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String ltalmc1Skipti
    {
        set
        {
            this[19] = value;
        }
    }
    public bool ltalmc1Skipti_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(19);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String ltbillargerd
    {
        set
        {
            this[20] = value;
        }
    }
    public bool ltbillargerd_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(20);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String ltbilltegund
    {
        set
        {
            this[21] = value;
        }
    }
    public bool ltbilltegund_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(21);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String ltbillleiguflokkur
    {
        set
        {
            this[22] = value;
        }
    }
    public bool ltbillleiguflokkur_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(22);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String ltbilllokdags
    {
        set
        {
            this[23] = value;
        }
    }
    public bool ltbilllokdags_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(23);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String ltbillafhdags
    {
        set
        {
            this[24] = value;
        }
    }
    public bool ltbillafhdags_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(24);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String ltbillnextservicekm
    {
        set
        {
            this[25] = value;
        }
    }
    public bool ltbillnextservicekm_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(25);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String ltheimili
    {
        set
        {
            this[26] = value;
        }
    }
    public bool ltheimili_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(26);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String ltstaður
    {
        set
        {
            this[27] = value;
        }
    }
    public bool ltstaður_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(27);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String ltheimasími
    {
        set
        {
            this[28] = value;
        }
    }
    public bool ltheimasími_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(28);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String ltfarsími
    {
        set
        {
            this[29] = value;
        }
    }
    public bool ltfarsími_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(29);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String ltbilloptnagladekk
    {
        set
        {
            this[30] = value;
        }
    }
    public bool ltbilloptnagladekk_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(30);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String ltlangtimasamningsnumer
    {
        set
        {
            this[31] = value;
        }
    }
    public bool ltlangtimasamningsnumer_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(31);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String ltskilmverdprman
    {
        set
        {
            this[32] = value;
        }
    }
    public bool ltskilmverdprman_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(32);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String ltskilmtryggprman
    {
        set
        {
            this[33] = value;
        }
    }
    public bool ltskilmtryggprman_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(33);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String ltskilmverdprkmumfr
    {
        set
        {
            this[34] = value;
        }
    }
    public bool ltskilmverdprkmumfr_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(34);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String ltskilmtryggingafé
    {
        set
        {
            this[35] = value;
        }
    }
    public bool ltskilmtryggingafé_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(35);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String ltskilminnifkm
    {
        set
        {
            this[36] = value;
        }
    }
    public bool ltskilminnifkm_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(36);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String ltskilminnifkmtb
    {
        set
        {
            this[37] = value;
        }
    }
    public bool ltskilminnifkmtb_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(37);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String ltinvoice
    {
        set
        {
            this[38] = value;
        }
    }
    public bool ltinvoice_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(38);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String ltcreditcard
    {
        set
        {
            this[39] = value;
        }
    }
    public bool ltcreditcard_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(39);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String ltkennitala
    {
        set
        {
            this[40] = value;
        }
    }
    public bool ltkennitala_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(40);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String ltextnote
    {
        set
        {
            this[41] = value;
        }
    }
    public bool ltextnote_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(41);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String lttengiliður
    {
        set
        {
            this[42] = value;
        }
    }
    public bool lttengiliður_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(42);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String ltsamtalsverðmán
    {
        set
        {
            this[43] = value;
        }
    }
    public bool ltsamtalsverðmán_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(43);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String lteldrasamningsnr
    {
        set
        {
            this[44] = value;
        }
    }
    public bool lteldrasamningsnr_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(44);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String ltfyrirframgeiddleiga
    {
        set
        {
            this[45] = value;
        }
    }
    public bool ltfyrirframgeiddleiga_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(45);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String lteigináhætta
    {
        set
        {
            this[46] = value;
        }
    }
    public bool lteigináhætta_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(46);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String ltnagladekkja
    {
        set
        {
            this[47] = value;
        }
    }
    public bool ltnagladekkja_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(47);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String ltnagladekknei
    {
        set
        {
            this[48] = value;
        }
    }
    public bool ltnagladekknei_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(48);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String ltbilaskiptija
    {
        set
        {
            this[49] = value;
        }
    }
    public bool ltbilaskiptija_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(49);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String ltbilaskiptinei
    {
        set
        {
            this[50] = value;
        }
    }
    public bool ltbilaskiptinei_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(50);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String ltundirbúningursamnings
    {
        set
        {
            this[51] = value;
        }
    }
    public bool ltundirbúningursamnings_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(51);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String address
    {
        set
        {
            this[52] = value;
        }
    }
    public bool address_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(52);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String ltoptionalservicenotes
    {
        set
        {
            this[53] = value;
        }
    }
    public bool ltoptionalservicenotes_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(53);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String inKm
    {
        set
        {
            this[54] = value;
        }
    }
    public bool inKm_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(54);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String ltvinnusimi
    {
        set
        {
            this[55] = value;
        }
    }
    public bool ltvinnusimi_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(55);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String vehicleType
    {
        set
        {
            this[56] = value;
        }
    }
    public bool vehicleType_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(56);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String xmlText
    {
        set
        {
            this[57] = value;
        }
    }
    public bool xmlText_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(57);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String overflow
    {
        set
        {
            this[58] = value;
        }
    }
    public bool overflow_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(58);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String status
    {
        set
        {
            this[59] = value;
        }
    }
    public bool status_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(59);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String consentspecialofferquestion
    {
        set
        {
            this[60] = value;
        }
    }
    public bool consentspecialofferquestion_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(60);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String consentspecialofferreply
    {
        set
        {
            this[61] = value;
        }
    }
    public bool consentspecialofferreply_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(61);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String consentotherreply
    {
        set
        {
            this[62] = value;
        }
    }
    public bool consentotherreply_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(62);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String conseentotherquestion
    {
        set
        {
            this[63] = value;
        }
    }
    public bool conseentotherquestion_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(63);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public BlobColumn documentxml
    {
        get
        {
            return (BlobColumn)Buffer[BufferColumnIndexes[64]];
        }
    }
    public bool documentxml_IsNull
    {
        get
        {
            return IsNull(64);
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_7cf74871f74d432e92f3fab9cd84e2ec.Properties.Settings.get_Default():SC_7cf74871f74d432e92f3fab9cd84e2ec.Properties.Sett" +
    "ings")]

namespace SC_7cf74871f74d432e92f3fab9cd84e2ec.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_7cf74871f74d432e92f3fab9cd84e2ec.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_7cf74871f74d432e92f3fab9cd84e2ec.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_7cf74871f74d432e92f3fab9cd84e2ec.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_7cf74871f74d432e92f3fab9cd84e2ec.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_7cf74871f74d432e92f3fab9cd84e2ec.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Project]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>SC_7cf74871f74d432e92f3fab9cd84e2ec</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>SC_7cf74871f74d432e92f3fab9cd84e2ec</msb:DisplayName>
    <msb:ProjectId>{777DB998-850E-497D-85FE-4E2FB9BF2DD5}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="SC_7cf74871f74d432e92f3fab9cd84e2ec.csproj" />
    <msb:File Include="packages.config" />
    <msb:File Include="main.cs" />
    <msb:File Include="BufferWrapper.cs" />
    <msb:File Include="ComponentWrapper.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:Breakpoint Include="c3c36b95d0a541dfa5e275eb9a617b18">
      <msb:FileName>main.cs</msb:FileName>
      <msb:ColumnNumber>17</msb:ColumnNumber>
      <msb:Enabled>True</msb:Enabled>
      <msb:LineNumber>342</msb:LineNumber>
      <msb:Condition>
      </msb:Condition>
      <msb:ConditionType>1</msb:ConditionType>
      <msb:Language>C#</msb:Language>
      <msb:HitCountType>1</msb:HitCountType>
      <msb:HitCountTarget>1</msb:HitCountTarget>
    </msb:Breakpoint>
  </msb:ItemGroup>
</c:Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_7cf74871f74d432e92f3fab9cd84e2ec")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_7cf74871f74d432e92f3fab9cd84e2ec")]
[assembly: AssemblyCopyright("Copyright @  2018")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_7cf74871f74d432e92f3fab9cd84e2ec.csproj]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{D228AFC0-7A64-41F5-8D45-587D986041AF}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_7cf74871f74d432e92f3fab9cd84e2ec</RootNamespace>
    <AssemblyName>SC_7cf74871f74d432e92f3fab9cd84e2ec</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="Newtonsoft.Json, Version=12.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed, processorArchitecture=MSIL">
      <HintPath>C:\Users\einar.miracle\AppData\Local\Temp\3\Vsta\SSIS_SC140\VstaeeozMvuee0KnNzk0rw84bQ\packages\Newtonsoft.Json.12.0.2\lib\net45\Newtonsoft.Json.dll</HintPath>
      <Private>True</Private>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Web.Extensions" />
    <Reference Include="System.Web.Extensions.Design" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
      <DesignTime>True</DesignTime>
    </Compile>
    <None Include="packages.config" />
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
      <DesignTimeSharedInput>True</DesignTimeSharedInput>
    </Compile>
  </ItemGroup>
  <ItemGroup>
    <WCFMetadata Include="Connected Services\" />
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC140</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[packages.config]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<packages>
  <package id="Newtonsoft.Json" version="12.0.2" targetFramework="net45" />
</packages>]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Stores the binary representation of the component"
                  isArray="true"
                  name="BinaryCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="2">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_7cf74871f74d432e92f3fab9cd84e2ec.dll]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[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
cf///wYqRgIoXgAACm9ZAAAKb2kAAAoqHgIoagAACipCU0pCAQABAAAAAAAMAAAAdjQuMC4zMDMx
OQAAAAAFAGwAAABAJAAAI34AAKwkAADsHQAAI1N0cmluZ3MAAAAAmEIAAHQJAAAjVVMADEwAABAA
AAAjR1VJRAAAABxMAACwBAAAI0Jsb2IAAAAAAAAAAgAAAVcVogkJCwAAAPoBMwAWAAABAAAATgAA
ABAAAAAsAAAA6wAAALUAAABqAAAAcAAAAAQAAAANAAAAqwAAAMwAAAAJAAAAAQAAAAgAAAABAAAA
AQAAAAEAAAAAADAMAQAAAAAABgCRCbYYBgAlCrYYBgDHCIMYDwAqGQAABgD0CBkUBgB0CRkUBgBV
CRkUBgAMChkUBgCxCRkUBgDKCRkUBgAhCRkUBgA8CfIKCgDlCRMHDgABAEcXBgDQACQCPwAkGAAA
BgDBACQCBgDDFBITEgAECJcbBgBcFi8BEgD1BZcbFgCIF/kTBgCQGxITBgDdACQCBgCEBxITFgCr
F/kTBgDeACQCBgDaFRkUBgCzACQCBgCPCLYYBgDPACQCBgDiBhITCgDMFhMHGgCtFhMHCgDnFRMH
GgCOExMHCgAjHBMHHgBmAB8XBgCqCIMYBgDdFtYYBgDDFeQTEgBsCAsMEgDbCAsMEgDZB88TBgBo
HBITBgAsCxITBgBQExITBgAVGJAaBgAQBhITEgDICxITEgB0HJcbEgBwHJcbEgBfFJcbEgArFH8C
EgAICJcbBgD5Ei8BBgBpFi8BIgCcF5wVIgBYGpwVIgDgCpwVIgBkHJwVBgDtABITBgCzFBITDgAq
AEcXDgBNAEcXHgB/AB8XHgAaAB8XlwDzHAAAHgCQAB8XBgDXABITBgAcBhITBgBLHRkUBgCbFBIT
BgCoABITFgALCfkTBgDPFRkUBgAuGhkUBgB0FhkUAAAAAPwAAAAAAAEAAQABABAAgxMAACwAAQAB
AAEAEADNFAAAXQAFAAgAAQAQAD8cAABdAAcADQABABAAWRUAAF0ACQASAAEAEAB6BQAAXQAPAB8A
AQAQAM4dAABdABMAKAABABAA7hsAAF0AGwA5AAEAEADrGgAAXQAjAEoAAQAQALwWAACFACUATwAB
ABAABRwAAJUAJQDVAAEAEACjGgAAXQAoANoAAQAQAJoZAABdACkA3AAAABAA3RhRGV0AKgDhAAAB
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
AQBxCgAAAQBxCgAAAQBxCgAAAQBxCgAAAQBxCgAAAQBxCgAAAQBxCgAAAQBxCgAAAQBxCgAAAQBx
CgAAAQBxCgAAAQBxCgAAAQBxCgAAAQBxCgAAAQBxCgAAAQBxCgAAAQBxCgAAAQBxCgAAAQBxCgAA
AQBxCgAAAQBxCgAAAQBxCgAAAQBxCgAAAQBxCgAAAQBxCgAAAQBxCgAAAQBxCgAAAQDSFgAAAgDl
GQAAAwD1FQAAAQBxCgAAAQBxCgAAAQBxCgAAAQBxCgAAAQBxCgAAAQBxCgAAAQBxCgAAAQBxCgAA
AQBxCgAAAQBxCgAAAQBxCgAAAQBxCgAAAQBxCgAAAQBxCgAAAQBxCgAAAQBxCgAAAQBxCgAAAQBx
CgAAAQBxCgAAAQBxCgAAAQBxCgAAAQBxCgAAAQBxCgAAAQBxCgAAAQBxCgAAAQBxCgAAAQBxCgAA
AQBxCgAAAQBxCgAAAQBxCgAAAQBxCgAAAQBxCgAAAQBxCgAAAQBxCgAAAQBxCgAAAQBxCgAAAQBx
CgAAAQBxCgAAAQBxCgAAAQBxCgAAAQBxCgAAAQBxCgAAAQBxCgAAAQBxCgAAAQBxCgAAAQBxCgAA
AQBxCgAAAQBxCgAAAQBxCgAAAQBxCgAAAQBxCgAAAQBxCgAAAQBxCgAAAQBxCgAAAQBxCgAAAQBx
CgAAAQBxCgAAAQBxCgAAAQBxCgAAAQBxCgAAAQBxCgAAAQBxCgAAAQBxCgAAAQBxCgAAAQBxCgAA
AQBxCgAAAQBxCgAAAQBxCgAAAQBxCgAAAQBxCgAAAQBxCgAAAQBxCgAAAQBxCgAAAQBxCgAAAQBx
CgAAAQBxCgAAAQBxCgAAAQBxCgAAAQBxCgAAAQBxCgAAAQBxCgAAAQBxCgAAAQBxCgAAAQBxCgAA
AQBxCgAAAQBxCgAAAQBxCgAAAQBxCgAAAQBxCgAAAQBxCgAAAQBxCgAAAQBxCgAAAQBxCgAAAQBx
CgAAAQBxCgAAAQBxCgAAAQBxCgAAAQBxCgAAAQBxCgAAAQBxCgAAAQBxCgAAAQBxCgAAAQBxCgAA
AQBxCgAAAQBxCgAAAQBxCgAAAQBxCgAAAQBxCgAAAQBxCgAAAQBxCgAAAQBxCgAAAQBxCgAAAQBx
CgAAAQBxCgAAAQBxCgAAAQBxCgAAAQBxCgAAAQBxCgAAAQBxCgAAAQBxCgAAAQBxCgAAAQBxCgAA
AQBxCgAAAQBxCgAAAQBxCgAAAQBxCgAAAQBxCgAAAQBxCgAAAQAdGwAAAgB5GAAAAwDXGgAABAD1
FQAAAQApHAAAAQApHAAAAQBxCgAAAQCHHQAAAgCsBwAAAwDAFwAAAQDeCwAAAgDAFwkALxgBABEA
LxgGABkALxgKACkALxgQADEALxgQADkALxgQAEEALxgQAEkALxgQAFEALxgQAFkALxgQAGEALxgQ
AGkALxgGAPEALxgGADkBLxgGAFkBLxgVACkBQwoGACkBTgoGAGkB6wBMACkBuAFSAAwAIRheABQA
MxxuAGkB9ABzAGkBKgt4AGkBKgt/AHEBfhuEABwAIRiRACQAMxxuAHEBtB2hACwAIRiRADQAMxxu
ALkAKgu1AHkBKgu1AIEBuBy5AIkBQAgGADwAIRiRAEQAMxxuAHEBwB3LAHEBfhvQAHEBRgvWAHEB
MwvaABQAuBy5AJEABAa1AHEBfhvgAGkBKgv3AJEBLxgQAJkBZQj8AJkBmwUQAJkByxoFAbEBXQIL
AZkBUQgRAaEBDAsRAZkBoBwBAJkBFAgWAZkA5gUcAbkB7hIhAaEALxgnAckBgAW1AMkBOggGAMkB
QAgGANEBLxgGANEALxgGANEAUQsBANkBLxgGANkB3AouAekBhRs1AbkALxgGAAkBLxhEAQkBCRNQ
AQkBzRIBAPkBLxgQAAkB0hZWAQkB5RlbAREBABNfAQkBxhJkAQkBMx0GAAkBqxsGAAkBrhu5ACkB
LxgGACkBGQFtASkB+Rl1AXEAPxR7AQECtQaBAQkC7RaIASkBjhmOARECABOUASkBDh2bARkC3xyh
AckALgaoAckARx2wAUEBLxi2AWEBLxgGAEkCLxgGAEwALxgGALkAcAfXAckAgBncAeEAeAfXAckA
Tge5AMkAghTXAckAtB3iAWECdQLqAeEAWgrxATECSAgBAmEChAa1AEwAXQIIAkECtxkQArEALxgG
AC4ACwDqAy4AEwDzAy4AGwASBC4AIwAbBC4AKwBEBC4AMwBEBC4AOwBEBC4AQwAbBC4ASwBKBC4A
UwBEBC4AWwBhBEMAYwCrBKEAawCrBMEAawCrBOEAawCrBAABawCrBAEBawCrBCABawCrBCEBawCr
BEABawCrBEEBawCrBGABawCrBGEBawCrBIEBawCrBKABawCrBKEBawCrBMABawCrBMEBawCrBMMB
cwCrBOABawCrBOEBawCrBAACawCrBAECawCrBCECawCrBEACawCrBEECawCrBGACawCrBGECawCr
BIACawCrBIECawCrBKACawCrBKECawCrBMACawCrBMECawCrBOACawCrBOECawCrBAADawCrBAED
awCrBCADawCrBCEDawCrBEADawCrBEEDawCrBGADawCrBGEDawCrBIADawCrBIEDawCrBKADawCr
BKEDawCrBMEDawCrBOADawCrBOEDawCrBAAEawCrBAEEawCrBCAEawCrBCEEawCrBEAEawCrBEEE
awCrBGAEawCrBGEEawCrBIAEawCrBIEEawCrBKAEawCrBMAEawCrBAAFawCrBCAFawCrBEAFawCr
BGAFawCrBIAFawCrBIEFawCrBKAFawCrBMAFawCrBOAFawCrBAAGawCrBCAGawCrBEAGawCrBGAG
awCrBIAGawCrBKAGawCrBMAGawCrBOAGawCrBCAHawCrBEAHawCrBGAHawCrBIAHawCrBKAHawCr
BMAHawCrBOAHawCrBAAIawCrBCAIawCrBEAIawCrBGAIawCrBIAIawCrBKAIawCrBMAIawCrBOAI
awCrBAAJawCrBEAJawCrBGAJawCrBIAJawCrBKAJawCrBAkVewASBCkVewASBBwA5wBpAb4BAwAB
AAQAAwAFAAUABgALAAcADwAIABcACQAfAAoAIQAMAKMADQCkAA4AqAAPAKoAEACrAAAAWAZ8AwAA
Hh18AwAAWAZ8AwAAwRqAAwAAwQKJAwAAWAZ8AwAASRV8AwAAIRV8AwAAMQiNAwAA9RSRAwAArAd8
AwAApxaJAwAAcQp8AwAA3QZ8AwAAwQJ8AwAArgJ8AwAACxiNAwAApx2NAwAArxiWAwAAjhZ8AwAA
Lx2fAwAAdQajAwAAwQJ8AwAAWAZ8AwAASRmoAwAA+QaxAwAADQexAwAANBt8AwAAmgp8AwAARQd8
AwAAzQqJAwAADRu3AwAAIgHAAwAAXAyNAwAARAZ8AwAApw2NAwAAqwZ8AwAA4A2NAwAAngZ8AwAA
zA2NAwAAKgx8AwAAXg+NAwAAkQZ8AwAAuA2NAwAA3ht8AwAALxKNAwAAsBN8AwAAIhCNAwAAnRN8
AwAACBCNAwAA9Qd8AwAASw6NAwAAwhN8AwAAOxCNAwAA+QZ8AwAA9Q2NAwAADQd8AwAABg6NAwAA
ShZ8AwAAuRCNAwAA3xl8AwAAoxGNAwAAnwd8AwAALg6NAwAAPQF8AwAAagyNAwAAcAF8AwAAqwyN
AwAAowp8AwAAeg6NAwAA0At8AwAAJw+NAwAAuwV8AwAAeg2NAwAAjgV8AwAASg2NAwAARhh8AwAA
NRGNAwAAIBp8AwAAzRGNAwAADhp8AwAAtBGNAwAAHRN8AwAAlg+NAwAAjgt8AwAAzQ6NAwAAXRh8
AwAAUxGNAwAArAt8AwAA+Q6NAwAAvQt8AwAAEQ+NAwAA5gt8AwAAQA+NAwAABxd8AwAA1hCNAwAA
XBN8AwAAzw+NAwAAcRN8AwAA6w+NAwAAzxd8AwAA+RCNAwAA2B18AwAAshKNAwAANRN8AwAAtQ+N
AwAA7wF8AwAALg2NAwAAzAV8AwAAkg2NAwAAqgV8AwAAYg2NAwAArAF8AwAA/AyNAwAAhQh8AwAA
ZQ6NAwAAaxh8AwAAaBGNAwAAsBV8AwAAmxCNAwAA5xd8AwAAGBGNAwAAVgF8AwAAigyNAwAA0gF8
AwAAEw2NAwAAmgF8AwAA4wyNAwAAewt8AwAAsw6NAwAAhwF8AwAAyQyNAwAAZwt8AwAAmA6NAwAA
Pxp8AwAA5hGNAwAA4xp8AwAAChKNAwAAzhl8AwAAkhGNAwAA6RJ8AwAAhg+NAwAAnAt8AwAA4g6N
AwAAZAd8AwAAFw6NAwAAxRx8AwAAShKNAwAAPh18AwAAXRKNAwAANBt8AwAAHRKNAwAAZhV8AwAA
UxCNAwAAWB18AwAAcRKNAwAAdR18AwAAlRKNAwAAhhV8AwAAehCNAwAA2RLEAwAAbw+NAwAAdxTK
AwAAVAKJAwAAcRuJAwAATxuJAwAAEAF8AwAA3RbQAwAA0QfWAwAAvhvcAwAAqBnhAwIACAADAAEA
CQADAAIACgAFAAEACwAFAAIADQAHAAEADgAHAAIADwAJAAEAEAAJAAIAEgALAAEAEwALAAIAFAAN
AAEAFQANAAIAFgAPAAEAFwAPAAIAGAARAAEAGQARAAIAGgATAAEAGwATAAIAHAAVAAEAHQAVAAIA
HwAXAAEAIAAXAAIAIQAZAAEAIgAZAAIAIwAbAAEAJAAbAAIAJQAdAAEAJgAdAAIAKAAfAAEAKQAf
AAIAKgAhAAEAKwAhAAIALAAjAAEALQAjAAIALgAlAAEALwAlAAIAMAAnAAEAMQAnAAIAMgApAAEA
MwApAAIANAArAAEANQArAAIANgAtAAEANwAtAAIAOQAvAAEAOgAvAAIAOwAxAAEAPAAxAAIAPQAz
AAEAPgAzAAIAPwA1AAEAQAA1AAIAQQA3AAEAQgA3AAIAQwA5AAEARAA5AAIARQA7AAEARgA7AAIA
RwA9AAEASAA9AAIASgA/AAEASwA/AAIATABBAAEATQBBAAEAUABDAAEAUQBFAAEAUgBHAAEAUwBJ
AAEAVABLAAEAVQBNAAEAVgBPAAEAVwBRAAEAWABTAAEAWQBVAAEAWgBXAAEAWwBZAAEAXABbAAEA
XQBdAAEAXgBfAAEAXwBhAAEAYABjAAEAYQBlAAEAYgBnAAEAYwBpAAEAZABrAAEAZQBtAAEAZgBv
AAEAZwBxAAEAaABzAAEAaQB1AAEAagB3AAEAawB5AAEAbAB7AAEAbQB9AAEAbgB/AAEAbwCBAAEA
cACDAAEAcQCFAAEAcgCHAAEAcwCJAAEAdACLAAEAdQCNAAEAdgCPAAEAdwCRAAEAeACTAAEAeQCV
AAEAegCXAAEAewCZAAEAfACbAAEAfQCdAAEAfgCfAAEAfwChAAEAgACjAAEAgQClAAEAggCnAAEA
gwCpAAEAhACrAAEAhQCtAAEAhgCvAAEAhwCxAAEAiACzAAEAiQC1AAEAigC3AAEAiwC5AAEAjAC7
AAEAjQC9AAEAjgC/AAEAjwDBAAEAkADDAAEAkQDFAAEAkgDHAAEAkwDJAAEAlADLAAEAlQDNAAEA
lgDPAAEAlwDRAAEAmADTAAEAmQDVAAEAmgDXAAEAmwDZAAEAnADbAAEAnQDdAAEAngDfAAEAnwDh
AAEAoADjAAEAoQDlAAEAogDnAAEAowDpAAEApADrAAEApQDtAAEApgDvAAEApwDxAAEAqADzAAEA
qQD1AAEAqgD3AAEAqwD5AAEArAD7AAEArQD9AAEArgD/AAEArwABAQEAsAADAQEAsQAFAQEAsgAH
AQEAswAJAQEAtAALAQEAtQANAQEAtgAPAQEAtwARAQEAuAATAQEAuQAVAQEAugAXAQEAuwAZAQEA
vAAbAQEAvQAdAQEAvgAfAQEAvwAhAQEAwAAjAQEAwQAlAQEAwgAnAQEAwwApAQEAxAArAQEAxQAt
AQEAxgAvAQEAxwAxAQEAyAAzAQEAyQA1AQEAygA3AQEAywA5AQEAzAA7AQEAzQA9AQEAzgA/AQEA
zwBBAQIA0ABDAQIA0QBFAQIA2wBHAQIA3QBJAQIA3gBLAQIA3wBNAQIA4ABPAQIA4gBRAQIA4wBT
AQEA5ABTAQIA5QBVAQIA6gBXAVcAZwCKAJoApwCuAL0AxADQAQSAAAABAAAAAAAAAAAAAAAAAAAC
AAAEAAAAAAAAAAAAAAAWAuIBAAAAAA4AAAAAAAAAAAAAAB8CRxwAAAAADgAAAAAAAAAAAAAAHwIi
FgAAAAAEAAAAAAAAAAAAAAAWAhITAAAAAAQAAAAAAAAAAAAAACgCehoAAAAADgAAAAAAAAAAAAAA
HwJ/HAAAAAAOAAAAAAAAAAAAAAAfAv8VAAAAAAwAAAAAAAAAAAAAADECnBUAAAAAAAAAAAEAAADn
GAAAEAACAIMAPwEAAAAAAElEVFNDb21wb25lbnRNZXRhRGF0YTEwMABJRFRTVmFyaWFibGUxMDAA
SURUU1J1bnRpbWVDb25uZWN0aW9uQ29sbGVjdGlvbjEwMABJRFRTUnVudGltZUNvbm5lY3Rpb24x
MDAASURUU0Nvbm5lY3Rpb25NYW5hZ2VyMTAwAElEVFNWYXJpYWJsZXMxMDAASURUU0V2YWx1YXRv
ckNvbnRleHQxMDAATnVsbGFibGVgMQBJRW51bWVyYWJsZWAxAElFbnVtZXJhdG9yYDEASUxpc3Rg
MQBJbnQzMgBJRGljdGlvbmFyeWAyAFRvVUludDY0AFRvSW50NjQAPE1vZHVsZT4Ac2V0X0lEAGdl
dF9NYXhEb2NJRABHZXRPdXRwdXRJRABUSFJFU0hPTEQAU3lzdGVtLklPAHNldF9sdGFsbWMxTGFu
Z3RpbWFsZWlnYQBzZXRfbHRmeXJpcmZyYW1nZWlkZGxlaWdhAHNldF9sdGFsbWMxVmV0cmFybGVp
Z2EAc2V0X2x0YmlsYXNraXB0aWphAHNldF9sdG5hZ2xhZGVra2phAHNldF9sdGtlbm5pdGFsYQBn
ZXRfQ29tcG9uZW50TWV0YURhdGEAc2V0X2x0ZWlnaW7DoWjDpnR0YQBtc2NvcmxpYgBzZXRfbHRz
a2lsbWlubmlma210YgBTQ183Y2Y3NDg3MWY3NGQ0MzJlOTJmM2ZhYjljZDg0ZTJlYwBTeXN0ZW0u
Q29sbGVjdGlvbnMuR2VuZXJpYwBUcnVuYwBpcERvY3NSZWFkAGdldF9mdWxsTG9hZABBZGQATWFy
a091dHB1dHNGaW5pc2hlZABJc0RlZmluZWQAU3lzdGVtLkNvbGxlY3Rpb25zLlNwZWNpYWxpemVk
AGdldF91c2VyX2lkAHNldF91c2VyX2lkAGdldF9pZABzZXRfaWQAPGlkPmtfX0JhY2tpbmdGaWVs
ZAA8dXNlcl9pZD5rX19CYWNraW5nRmllbGQAPHRpdGxlPmtfX0JhY2tpbmdGaWVsZAA8Y29uc2Vu
dF9tb2R1bGU+a19fQmFja2luZ0ZpZWxkADxuYW1lPmtfX0JhY2tpbmdGaWVsZAA8Y3RpbWU+a19f
QmFja2luZ0ZpZWxkADxtdGltZT5rX19CYWNraW5nRmllbGQAPHRpbWV6b25lPmtfX0JhY2tpbmdG
aWVsZAA8dHlwZT5rX19CYWNraW5nRmllbGQAPHJlc3BvbnNlPmtfX0JhY2tpbmdGaWVsZAA8dmFs
dWU+a19fQmFja2luZ0ZpZWxkADxsYW5nPmtfX0JhY2tpbmdGaWVsZAA8dG90YWxfbWF0Y2hpbmc+
a19fQmFja2luZ0ZpZWxkADxkZXRhaWxlZF9kZXNyaXB0aW9uPmtfX0JhY2tpbmdGaWVsZAA8bmVn
YXRpdmVfb3B0aW9uPmtfX0JhY2tpbmdGaWVsZAA8cG9zaXRpdmVfb3B0aW9uPmtfX0JhY2tpbmdG
aWVsZAA8b3JkZXI+a19fQmFja2luZ0ZpZWxkADxzaWduX29yZGVyPmtfX0JhY2tpbmdGaWVsZAA8
aXNfYXV0aG9yPmtfX0JhY2tpbmdGaWVsZAA8ZmllbGRzPmtfX0JhY2tpbmdGaWVsZAA8cGFydGll
cz5rX19CYWNraW5nRmllbGQAPHF1ZXN0aW9ucz5rX19CYWNraW5nRmllbGQAPGRvY3VtZW50cz5r
X19CYWNraW5nRmllbGQAPHN0YXR1cz5rX19CYWNraW5nRmllbGQAPHRleHQ+a19fQmFja2luZ0Zp
ZWxkADxjc3Y+a19fQmFja2luZ0ZpZWxkADxpc19zaWduYXRvcnk+a19fQmFja2luZ0ZpZWxkAFJl
YWRUb0VuZABzZXRfbHRiaWxsdGVndW5kAHNldF9NZXRob2QAc2V0X2x0Y3JlZGl0Y2FyZABzZXRf
bHRiaWxsYXJnZXJkAHNldF9sdGludm9pY2UAZGVmYXVsdEluc3RhbmNlAGdldF9TdGF0dXNDb2Rl
AEh0dHBTdGF0dXNDb2RlAGdldF9NZXNzYWdlAElEaXNwb3NhYmxlAFJ1bnRpbWVUeXBlSGFuZGxl
AEdldFR5cGVGcm9tSGFuZGxlAHNldF9UaXRsZQBnZXRfdGl0bGUAc2V0X3RpdGxlAGdldF9jb25z
ZW50X21vZHVsZQBzZXRfY29uc2VudF9tb2R1bGUAZ2V0X05hbWUAc2V0X0Z1bGxOYW1lAHNldF9M
YXN0TmFtZQBzZXRfRmlyc3ROYW1lAEdldFJ1bnRpbWVDb25uZWN0aW9uQnlOYW1lAGdldF9uYW1l
AHNldF9uYW1lAERhdGVUaW1lAGdldF9jdGltZQBzZXRfY3RpbWUAZ2V0X210aW1lAHNldF9tdGlt
ZQBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5QaXBlbGluZQBnZXRfdGltZXpvbmUAc2V0X3RpbWV6
b25lAGdldF9Jc0dlbmVyaWNUeXBlAHNldF92ZWhpY2xlVHlwZQBHZXRUeXBlAGdldF9Qcm9wZXJ0
eVR5cGUAZ2V0X3R5cGUAc2V0X3R5cGUAc2V0X2x0YWxtY29udHJhY3R0eXBlAGdldF9DdWx0dXJl
AHNldF9DdWx0dXJlAHJlc291cmNlQ3VsdHVyZQBBcHBsaWNhdGlvblNldHRpbmdzQmFzZQBzZXRf
ZHJpdmluZ2xpY2Vuc2UASHR0cFdlYlJlc3BvbnNlAEdldFJlc3BvbnNlAGdldF9yZXNwb25zZQBz
ZXRfcmVzcG9uc2UAQ2xvc2UARGlzcG9zZQBUcnlQYXJzZQBzZXRfUHJlQXV0aGVudGljYXRlAENy
ZWF0ZQBFZGl0b3JCcm93c2FibGVTdGF0ZQBzZXRfbHRleHRub3RlAENvbXBpbGVyR2VuZXJhdGVk
QXR0cmlidXRlAERlYnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1dGUARGVidWdnYWJsZUF0dHJpYnV0
ZQBFZGl0b3JCcm93c2FibGVBdHRyaWJ1dGUAQXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBTY3JpcHRJ
Z25vcmVBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1dGUAVGFyZ2V0RnJhbWV3b3Jr
QXR0cmlidXRlAEFzc2VtYmx5Q29uZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0
aW9uQXR0cmlidXRlAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1dGUAQXNzZW1ibHlQcm9k
dWN0QXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0cmlidXRlAFNTSVNTY3JpcHRDb21wb25l
bnRFbnRyeVBvaW50QXR0cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBSdW50aW1lQ29t
cGF0aWJpbGl0eUF0dHJpYnV0ZQBQcmVFeGVjdXRlAFBvc3RFeGVjdXRlAEdldFZhbHVlAGdldF92
YWx1ZQBzZXRfdmFsdWUAU2VyaWFsaXplAERlc2VyaWFsaXplAGdldF9sYW5nAHNldF9sYW5nAHNl
dF9sdGFsbWMxRnJhbWxlbmdpbmcAZ2V0X3RvdGFsX21hdGNoaW5nAHNldF90b3RhbF9tYXRjaGlu
ZwBzZXRfTnVsbFZhbHVlSGFuZGxpbmcAU3lzdGVtLlJ1bnRpbWUuVmVyc2lvbmluZwBzZXRfQWxs
b3dXcml0ZVN0cmVhbUJ1ZmZlcmluZwBUb1N0cmluZwBTdWJzdHJpbmcAZXJyb3JNc2cAZ2V0X0xl
bmd0aABzZXRfTWF4SnNvbkxlbmd0aABzZXRfbHRiaWxhc2tpcHRpbmVpAHNldF9sdG5hZ2xhZGVr
a25laQBzZXRfbHRoZWltaWxpAHNldF9sdHZpbm51c2ltaQBzZXRfbHRoZWltYXPDrW1pAHNldF9s
dGZhcnPDrW1pAFVyaQBzZXRfbHRhbG1jMVNraXB0aQBvYmoAc2V0X2x0YmlsbG9wdG5hZ2xhZGVr
awBjb21wTWV0YWRhdGFHb2JhbABTeXN0ZW0uQ29tcG9uZW50TW9kZWwAZmFpbABzZXRfZW1haWwA
U0NfN2NmNzQ4NzFmNzRkNDMyZTkyZjNmYWI5Y2Q4NGUyZWMuZGxsAHNldF9JRF9Jc051bGwAc2V0
X2x0YWxtYzFMYW5ndGltYWxlaWdhX0lzTnVsbABzZXRfbHRmeXJpcmZyYW1nZWlkZGxlaWdhX0lz
TnVsbABzZXRfbHRhbG1jMVZldHJhcmxlaWdhX0lzTnVsbABzZXRfbHRiaWxhc2tpcHRpamFfSXNO
dWxsAHNldF9sdG5hZ2xhZGVra2phX0lzTnVsbABzZXRfbHRrZW5uaXRhbGFfSXNOdWxsAHNldF9s
dGVpZ2luw6Fow6Z0dGFfSXNOdWxsAHNldF9sdHNraWxtaW5uaWZrbXRiX0lzTnVsbABzZXRfbHRi
aWxsdGVndW5kX0lzTnVsbABzZXRfbHRjcmVkaXRjYXJkX0lzTnVsbABzZXRfbHRiaWxsYXJnZXJk
X0lzTnVsbABzZXRfbHRpbnZvaWNlX0lzTnVsbABzZXRfVGl0bGVfSXNOdWxsAHNldF9GdWxsTmFt
ZV9Jc051bGwAc2V0X0xhc3ROYW1lX0lzTnVsbABzZXRfRmlyc3ROYW1lX0lzTnVsbABzZXRfY3Rp
bWVfSXNOdWxsAHNldF9tdGltZV9Jc051bGwAc2V0X3ZlaGljbGVUeXBlX0lzTnVsbABzZXRfbHRh
bG1jb250cmFjdHR5cGVfSXNOdWxsAHNldF9kcml2aW5nbGljZW5zZV9Jc051bGwAc2V0X2x0ZXh0
bm90ZV9Jc051bGwAc2V0X2x0YWxtYzFGcmFtbGVuZ2luZ19Jc051bGwAc2V0X2x0YmlsYXNraXB0
aW5laV9Jc051bGwAc2V0X2x0bmFnbGFkZWtrbmVpX0lzTnVsbABzZXRfbHRoZWltaWxpX0lzTnVs
bABzZXRfbHR2aW5udXNpbWlfSXNOdWxsAHNldF9sdGhlaW1hc8OtbWlfSXNOdWxsAHNldF9sdGZh
cnPDrW1pX0lzTnVsbABzZXRfbHRhbG1jMVNraXB0aV9Jc051bGwAc2V0X2x0YmlsbG9wdG5hZ2xh
ZGVra19Jc051bGwAc2V0X2VtYWlsX0lzTnVsbABnZXRfZG9jdW1lbnR4bWxfSXNOdWxsAHNldF9p
bkttX0lzTnVsbABzZXRfbHRiaWxsbmV4dHNlcnZpY2VrbV9Jc051bGwAc2V0X2x0c2tpbG1pbm5p
ZmttX0lzTnVsbABzZXRfbHRza2lsbXZlcmRwcm1hbl9Jc051bGwAc2V0X2x0c2tpbG10cnlnZ3By
bWFuX0lzTnVsbABzZXRfcmV0dXJubG9jYXRpb25fSXNOdWxsAHNldF9zdGFydGxvY2F0aW9uX0lz
TnVsbABzZXRfcmVnaXN0cmF0aW9uX0lzTnVsbABzZXRfY29uc2VudHNwZWNpYWxvZmZlcnF1ZXN0
aW9uX0lzTnVsbABzZXRfY29uc2VlbnRvdGhlcnF1ZXN0aW9uX0lzTnVsbABzZXRfbHRzYW10YWxz
dmVyw7Btw6FuX0lzTnVsbABzZXRfUmVzZXJ2YXRpb25OdW1iZXJfSXNOdWxsAHNldF9sdGxhbmd0
aW1hc2FtbmluZ3NudW1lcl9Jc051bGwAc2V0X2x0c2tpbG12ZXJkcHJrbXVtZnJfSXNOdWxsAHNl
dF9sdGVsZHJhc2FtbmluZ3Nucl9Jc051bGwAc2V0X2x0YmlsbGxlaWd1Zmxva2t1cl9Jc051bGwA
c2V0X2x0c3Rhw7B1cl9Jc051bGwAc2V0X2x0dGVuZ2lsacOwdXJfSXNOdWxsAHNldF9ub3Rlc19J
c051bGwAc2V0X2x0b3B0aW9uYWxzZXJ2aWNlbm90ZXNfSXNOdWxsAHNldF9sdGJpbGxhZmhkYWdz
X0lzTnVsbABzZXRfbHRiaWxsbG9rZGFnc19Jc051bGwAc2V0X2x0dW5kaXJiw7puaW5ndXJzYW1u
aW5nc19Jc051bGwAc2V0X2FkZHJlc3NfSXNOdWxsAHNldF9zdGF0dXNfSXNOdWxsAHNldF9SZW50
YWxBZ3JlZW1lbnRfSXNOdWxsAHNldF94bWxUZXh0X0lzTnVsbABzZXRfb3ZlcmZsb3dfSXNOdWxs
AHNldF9jb25zZW50c3BlY2lhbG9mZmVycmVwbHlfSXNOdWxsAHNldF9jb25zZW50b3RoZXJyZXBs
eV9Jc051bGwAc2V0X2x0c2tpbG10cnlnZ2luZ2Fmw6lfSXNOdWxsAFNldE51bGwAZ2V0X2RvY3Vt
ZW50eG1sAHNldF9pbkttAEdldFJlc3BvbnNlU3RyZWFtAGdldF9JdGVtAHNldF9JdGVtAFN5c3Rl
bQBzZXRfbHRiaWxsbmV4dHNlcnZpY2VrbQBzZXRfbHRza2lsbWlubmlma20AcmVzb3VyY2VNYW4A
Qm9vbGVhbgBzZXRfbHRza2lsbXZlcmRwcm1hbgBzZXRfbHRza2lsbXRyeWdncHJtYW4AU2NyaXB0
TWFpbgBCbG9iQ29sdW1uAHNldF9yZXR1cm5sb2NhdGlvbgBzZXRfc3RhcnRsb2NhdGlvbgBzZXRf
cmVnaXN0cmF0aW9uAFN5c3RlbS5Db25maWd1cmF0aW9uAFN5c3RlbS5HbG9iYWxpemF0aW9uAFN5
c3RlbS5XZWIuU2NyaXB0LlNlcmlhbGl6YXRpb24AU3lzdGVtLlJlZmxlY3Rpb24ATmFtZVZhbHVl
Q29sbGVjdGlvbgBnZXRfUnVudGltZUNvbm5lY3Rpb25Db2xsZWN0aW9uAFdlYkhlYWRlckNvbGxl
Y3Rpb24AZ2V0X0Nvbm5lY3Rpb24AR2V0R2VuZXJpY1R5cGVEZWZpbml0aW9uAE5vdEltcGxlbWVu
dGVkRXhjZXB0aW9uAEludmFsaWRPcGVyYXRpb25FeGNlcHRpb24ARGVzY3JpcHRpb24AZ2V0X2Rl
dGFpbGVkX2Rlc3JpcHRpb24Ac2V0X2RldGFpbGVkX2Rlc3JpcHRpb24AZ2V0X25lZ2F0aXZlX29w
dGlvbgBzZXRfbmVnYXRpdmVfb3B0aW9uAGdldF9wb3NpdGl2ZV9vcHRpb24Ac2V0X3Bvc2l0aXZl
X29wdGlvbgBRdWVzdGlvbgBzZXRfY29uc2VudHNwZWNpYWxvZmZlcnF1ZXN0aW9uAHNldF9jb25z
ZWVudG90aGVycXVlc3Rpb24ATmV3dG9uc29mdC5Kc29uAHNldF9sdHNhbXRhbHN2ZXLDsG3DoW4A
Q3VsdHVyZUluZm8ATWVtYmVySW5mbwBQcm9wZXJ0eUluZm8AT3V0cHV0TmFtZU1hcABPdXRwdXRN
YXAATWljcm9zb2Z0LlNxbFNlcnZlci5EVFNSdW50aW1lV3JhcABNaWNyb3NvZnQuU3FsU2VydmVy
LkRUU1BpcGVsaW5lV3JhcABzZXRfUmVzZXJ2YXRpb25OdW1iZXIAU3RyZWFtUmVhZGVyAFRleHRS
ZWFkZXIAQmluZGVyAGdldF9zaWduX29yZGVyAHNldF9zaWduX29yZGVyAGdldF9vcmRlcgBzZXRf
b3JkZXIAUGlwZWxpbmVCdWZmZXIAQ29udHJhY3RzQnVmZmVyAFNjcmlwdEJ1ZmZlcgBnZXRfUmVz
b3VyY2VNYW5hZ2VyAGdldF9Db25uZWN0aW9uTWFuYWdlcgBzZXRfbHRsYW5ndGltYXNhbW5pbmdz
bnVtZXIATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUnVudGltZS5XcmFwcGVyAE1pY3Jvc29mdC5T
cWxTZXJ2ZXIuRHRzLlBpcGVsaW5lLldyYXBwZXIATnVsbFByb3BlcnRpZXNDb252ZXJ0ZXIASmF2
YVNjcmlwdENvbnZlcnRlcgBKc29uU2VyaWFsaXplcgBKYXZhU2NyaXB0U2VyaWFsaXplcgBzZXJp
YWxpemVyAHNldF9sdHNraWxtdmVyZHBya211bWZyAHNldF9sdGVsZHJhc2FtbmluZ3NucgBnZXRf
aXNfYXV0aG9yAHNldF9pc19hdXRob3IASUVudW1lcmF0b3IAR2V0RW51bWVyYXRvcgAuY3RvcgAu
Y2N0b3IAbXlTdHIAc2V0X2x0YmlsbGxlaWd1Zmxva2t1cgBzZXRfbHRzdGHDsHVyAHNldF9sdHRl
bmdpbGnDsHVyAE91dHB1dElEcwBTeXN0ZW0uRGlhZ25vc3RpY3MAaXBNYXhEb2NzAGdldF9maWVs
ZHMAc2V0X2ZpZWxkcwBTeXN0ZW0uUnVudGltZS5Db21waWxlclNlcnZpY2VzAFN5c3RlbS5SZXNv
dXJjZXMAU0NfN2NmNzQ4NzFmNzRkNDMyZTkyZjNmYWI5Y2Q4NGUyZWMuUHJvcGVydGllcy5SZXNv
dXJjZXMucmVzb3VyY2VzAERlYnVnZ2luZ01vZGVzAGdldF9wYXJ0aWVzAHNldF9wYXJ0aWVzAFND
XzdjZjc0ODcxZjc0ZDQzMmU5MmYzZmFiOWNkODRlMmVjLlByb3BlcnRpZXMAR2V0UHJvcGVydGll
cwBnZXRfUmVhZE9ubHlWYXJpYWJsZXMAZ2V0X1N1cHBvcnRlZFR5cGVzAEdldFR5cGVzAHNldF9u
b3RlcwBzZXRfbHRvcHRpb25hbHNlcnZpY2Vub3RlcwBCdWZmZXJDb2x1bW5JbmRleGVzAEdldENv
bHVtbkluZGV4ZXMAc2V0X2x0YmlsbGFmaGRhZ3MAc2V0X2x0YmlsbGxva2RhZ3MAQmluZGluZ0Zs
YWdzAHNldF9sdHVuZGlyYsO6bmluZ3Vyc2FtbmluZ3MASnNvblNlcmlhbGl6ZXJTZXR0aW5ncwBh
bGxDb2x1bW5zAFN5c3RlbS5XZWIuRXh0ZW5zaW9ucwBTeXN0ZW0uQ29sbGVjdGlvbnMAQ29ubmVj
dGlvbnMAZ2V0X3F1ZXN0aW9ucwBzZXRfcXVlc3Rpb25zAGdldF9IZWFkZXJzAEJ1ZmZlcnMAc2V0
X2FkZHJlc3MAU2NyaXZlRG9jdW1lbnRzAGdldF9kb2N1bWVudHMAc2V0X2RvY3VtZW50cwBGaW5p
c2hPdXRwdXRzAGdldF9zdGF0dXMAc2V0X3N0YXR1cwBHZXROdW1iZXJPZlJvd3MAZ2V0X2dldE5v
Um93cwBDcmVhdGVOZXdPdXRwdXRSb3dzAGdldF9nZXRNYXhOb3Jvd3MAQ29uY2F0AERlc2VyaWFs
aXplT2JqZWN0AFN5c3RlbS5OZXQAaXBPZmZzZXQAU2V0RW5kT2ZSb3dzZXQAZ2V0X0RlZmF1bHQA
Z2V0V2ViU2VydmljZVJlc3VsdABzZXRfUmVudGFsQWdyZWVtZW50AERvY3VtZW50AGZhaWxDb21w
b25lbnQAVXNlckNvbXBvbmVudABQYXJlbnRDb21wb25lbnQAU2NyaXB0Q29tcG9uZW50AGdldF9D
dXJyZW50AENvbnNlbnQATWljcm9zb2Z0LlNxbFNlcnZlci5UeFNjcmlwdABKc29uQ29udmVydABI
dHRwV2ViUmVxdWVzdABNaWNyb3NvZnQuU3FsU2VydmVyLlBpcGVsaW5lSG9zdABzZXRfVGltZW91
dABQcmltZU91dHB1dABNb3ZlTmV4dABzZXRfeG1sVGV4dABnZXRfdGV4dABzZXRfdGV4dABHZXRW
YWx1ZVdpdGhDb250ZXh0AFNjcmlwdENvbXBvbmVudEV2YWxDb250ZXh0AGdldF9FdmFsdWF0b3JD
b250ZXh0AGdldF9jc3YAc2V0X2NzdgBBZGRSb3cAc2V0X292ZXJmbG93AGdldF9Bc3NlbWJseQBz
ZXRfY29uc2VudHNwZWNpYWxvZmZlcnJlcGx5AHNldF9jb25zZW50b3RoZXJyZXBseQBkaWN0aW9u
YXJ5AGdldF9pc19zaWduYXRvcnkAc2V0X2lzX3NpZ25hdG9yeQBvcF9FcXVhbGl0eQBJc051bGxP
ckVtcHR5AFBhcnR5AHNldF9sdHNraWxtdHJ5Z2dpbmdhZsOpAAABAAdJAEQAPQAAHVMAcABlAGMA
aQBhAGwAIABvAGYAZgBlAHIAcwAAAz0AAAM7AAAJbgBhAG0AZQAAC2UAbQBhAGkAbAAACU4AYQBt
AGUAAAVSAEEAACNyAGUAcwBlAHIAdgBhAHQAaQBvAG4AbgB1AG0AYgBlAHIAABtzAHQAYQByAHQA
bABvAGMAYQB0AGkAbwBuAAAdcgBlAHQAdQByAG4AbABvAGMAYQB0AGkAbwBuAAAdZAByAGkAdgBp
AG4AZwBsAGkAYwBlAG4AcwBlAAAdRAByAGkAdgBlAHIAIABsAGkAYwBlAG4AcwBlAAAZcgBlAGcA
aQBzAHQAcgBhAHQAaQBvAG4AACtvAHAAdABpAG8AbgBhAGwAUwBlAHIAdgBpAGMAZQBzAE4AbwB0
AGUAcwAAC24AbwB0AGUAcwAACWsAbQBJAG4AABd2AGUAaABpAGMAbABlAFQAeQBwAGUAABVUAGUA
bgBnAGkAbABpAPAAdQByAAETQgDtAGwAYQBzAGsAaQBwAHQAAQVKAOEAAQdOAGUAaQAAE04AYQBn
AGwAYQBkAGUAawBrAAALUgBlAGcAbgBvAAANwQByAGcAZQByAPAAAQ1UAGUAZwB1AG4AZAAAGUwA
ZQBpAGcAdQBmAGwAbwBrAGsAdQByAAAbUwBhAG0AbgBpAG4AZwBzAG4AdQBtAGUAcgAAK1UAbgBk
AGkAcgBiAPoAbgBpAG4AZwB1AHIAIABzAGEAbQBpAG4AZwBzAAEbTABhAG4AZwB0AO0AbQBhAGwA
ZQBpAGcAYQABF1YAZQB0AHIAYQByAGwAZQBpAGcAYQAAF0YAcgBhAG0AbABlAG4AZwBpAG4AZwAA
F1MAawBpAHAAdAAgAOEAIABiAO0AbAABI0UAbABkAHIAYQAgAHMAYQBtAG4AaQBuAGcAcwBuAHIA
LgAAD0gAZQBpAG0AaQBsAGkAAA9GAGEAcgBzAO0AbQBpAAETVgBpAG4AbgB1AHMA7QBtAGkAAQ9h
AGQAZAByAGUAcwBzAAATSwBlAG4AbgBpAHQAYQBsAGEAAA1TAHQAYQDwAHUAcgABG0EAZgBoAC4A
IABkAGEAZwBzAGUAdABuAC4AAB1MAG8AawBhAGQAYQBnAHMAZQB0AG4AaQBuAGcAAClOAOYAcwB0
AGEAIAD+AGoA8wBuAHUAcwB0AHUAcwBrAG8A8AB1AG4AASVMAGUAaQBnAHUAdgBlAHIA8AAgAOEA
IABtAOEAbgB1APAAaQABPVYAZQByAPAAIABwAHIAIABrAG0AIAB1AG0AZgByAGEAbQAgAGkAbgBu
AGkAZgAgAGEAawBzAHQAdQByAAErRgB5AHIAaQByAGYAcgBhAG0AZwByAGUAaQBkAGQAIABsAGUA
aQBnAGEAADFFAGkAZwBpAG4AIADhAGgA5gB0AHQAYQAgAHYAZQBnAG4AYQAgAHQAagDzAG4AcwAB
J1QAcgB5AGcAZwBpAG4AZwBhAHIAIADhACAAbQDhAG4AdQDwAGkAAStTAGEAbQB0AGEAbABzACAA
dgBlAHIA8AAgAOEAIABtAOEAbgB1APAAaQABM0kAbgBuAGkAZgBhAGwAaQBuAG4AIABhAGsAcwB0
AHUAcgAgAGEAbABsAHQAIABhAPAAARlrAO0AbADzAG0AZQB0AHIAYQByACAA4QABFUMAcgBlAGQA
aQB0AEMAYQByAGQAAA9JAG4AdgBvAGkAYwBlAAAvTgBhAGcAbABhAGQAZQBrAGsAIAAxADAALgAw
ADAAMAAgAGsAcgAuACAASgDhAAEnIAA7ACAAQQBsAGwAIABjAG8AbAAgAHUAbQBuAHMAIAAtAD4A
IAABgVtvAGEAdQB0AGgAXwBzAGkAZwBuAGEAdAB1AHIAZQBfAG0AZQB0AGgAbwBkACAAPQAgACIA
UABMAEEASQBOAFQARQBYAFQAIgAsAG8AYQB1AHQAaABfAGMAbwBuAHMAdQBtAGUAcgBfAGsAZQB5
ACAAPQAgACIAMgA5ADcAOABjAGQANQBjAGUANwA5ADgANgAwADMAZABfADMAMAAxADkAIgAsAG8A
YQB1AHQAaABfAHQAbwBrAGUAbgAgAD0AIAAiADMAYQBjADcAYQA1AGMANQBiADAANQAwADUAMAAx
AGQAXwA2ADQANwA1ACIALABvAGEAdQB0AGgAXwBzAGkAZwBuAGEAdAB1AHIAZQAgAD0AIAAiAGIA
MABiAGMAYgAwADEAMwAzAGIAYwAzAGYANgA4ADkAJgA4ADQAZAAwADcAOAA5ADkAOAAyADEAMQA2
ADEANwA0ACIAAFVbAHsAIgBzAG8AcgB0AF8AYgB5ACIAOgAiAG0AdABpAG0AZQAiACwAIgBvAHIA
ZABlAHIAIgA6ACIAZABlAHMAYwBlAG4AZABpAG4AZwAiAH0AXQAAYWgAdAB0AHAAcwA6AC8ALwBz
AGMAcgBpAHYAZQAuAGMAbwBtAC8AYQBwAGkALwB2ADIALwBkAG8AYwB1AG0AZQBuAHQAcwAvAGwA
aQBzAHQAPwBvAGYAZgBzAGUAdAA9AAALJgBtAGEAeAA9AAATJgBzAG8AcgB0AGkAbgBnAD0AAB0m
AGYAaQBsAHQAZQByAD0AJQA1AEIAJQA1AEQAAAdHAEUAVAAAG0EAdQB0AGgAbwByAGkAegBhAHQA
aQBvAG4AAICbSQBzAE4AdQBsAGwAIABwAHIAbwBwAGUAcgB0AHkAIABjAGEAbgBuAG8AdAAgAGIA
ZQAgAHMAZQB0ACAAdABvACAARgBhAGwAcwBlAC4AIABBAHMAcwBpAGcAbgAgAGEAIAB2AGEAbAB1
AGUAIAB0AG8AIAB0AGgAZQAgAGMAbwBsAHUAbQBuACAAaQBuAHMAdABlAGEAZAAuAAATQwBvAG4A
dAByAGEAYwB0AHMAABVDAG8AbgBuAGUAYwB0AGkAbwBuAAARZgB1AGwAbABMAG8AYQBkAAAZZwBl
AHQATQBhAHgATgBvAHIAbwB3AHMAABNnAGUAdABOAG8AUgBvAHcAcwAAEU0AYQB4AEQAbwBjAEkA
RAAAcVMAQwBfADcAYwBmADcANAA4ADcAMQBmADcANABkADQAMwAyAGUAOQAyAGYAMwBmAGEAYgA5
AGMAZAA4ADQAZQAyAGUAYwAuAFAAcgBvAHAAZQByAHQAaQBlAHMALgBSAGUAcwBvAHUAcgBjAGUA
cwAAAAAAbHgC8ivc1ECu64nK5KmR1AAEIAEBCAMgAAEFIAEBEREEIAEBDgYgAQERgKkvBxMICAgI
CAgCCxURQQESIBIgFRJFARIcEhwVEkUBEhQSFAISFBUSRQESGBIYEkkFAAILDggEIAASOQYVEj0B
EiAIIAAVEUEBEwAGFRFBARIgBCAAEwAEAAEKDgYAAQ4RgIEEAAEODgUAAg4ODgYVEnUBEhwIIAAV
EkUBEwAGFRJFARIcBQACAg4OBhUSdQESFAYVEkUBEhQDIAAOAyAAAgYVEnUBEhgGFRJFARIYBAAB
Ag4FAAEOHQ4DIAAIBSACDggIBgADDg4ODg8HCA4OEk0SJA4SURFVEkkEAAEOCAgAARKAzRKAyQUg
ABKA1QUgAgEODgQgAQECBSAAEoDdBCAAEVUFIAASgOEGIAEBEoDhBiABARGA8QkQAQIeAA4SgO0E
CgESJAsgAwESgIkdCBKAjQUgAgEIHAQGEoCJAwYdCAQgARwIBCABAggDBwEIBwACCBKAjQ4FIAEd
CAgFIAASgQEGIAESgQUOBSAAEoCZBSAAEoEJBiABEoENHAUAABKBEQYgARwSgRUHAAESZRGBHQUg
ABKBIQcgAgEOEoEhEQcHFRJtAg4cHRJxCBJxAhwIBhUSbQIOHAQgABJlBSAAHRJxBwACAhJlEmUG
IAICEmUCDyAFHBwRgTUSgTkdHBKApQYAAgIOEAgHIAIBEwATAQUgAB0SZQi3elxWGTTgiQiJhF3N
gIDMkQgxvzhWrTZONQgwrU/msqau7QIGCAMGEjkCBgICBg4HBhUSfQESFAMGEgwHBhUSfQESGAIG
HAMGEhAHBhUSfQESHAQGEYCBBwYVEj0BEiADBhIwAwYSNAMGEigEBhKAlQQGEoChBAYSgKUDBhI8
BSACDg4ICCADEiQICBAICCAAFRJ9ARIUCSABARUSfQESFAQgABIMBSABARIMCCAAFRJ9ARIYCSAB
ARUSfQESGAMgABwEIAEBHAQgABIQBSABARIQCCAAFRJ9ARIcCSABARUSfQESHAUgABGAgQYgAQER
gIEIIAAVEj0BEiAJIAEBFRI9ARIgBCABAQsFIAASgJENIAQBCB0IHRKAiRKAjQYgAQESgJUFAAAS
gKEFAAASgKUGAAEBEoClBAAAEjwDAAABDSADHBUSYQIOHBJlEmkLIAIVEmECDhwcEmkIIAAVEnUB
EmUDKAAOCCgAFRJ9ARIUAygACAMoAAIEKAASDAgoABUSfQESGAMoABwEKAASEAgoABUSfQESHAUo
ABGAgQgoABUSPQESIAMoAAsFKAASgJEFKAASgJkFCAASgKEFCAASgKUECAASPAgoABUSdQESZQgB
AAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEIAQACAAAAAAAoAQAjU0NfN2Nm
NzQ4NzFmNzRkNDMyZTkyZjNmYWI5Y2Q4NGUyZWMAAAUBAAAAABYBABFDb3B5cmlnaHQgQCAgMjAx
OAAASQEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC41AQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFt
ZRIuTkVUIEZyYW1ld29yayA0LjUEAQAAALQAAADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNl
cy5SZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0
cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVu
dGltZVJlc291cmNlU2V0AgAAAAAAAAAAAAAAUEFEUEFEULQAAADcjwAAAAAAAAAAAAD2jwAAACAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAA6I8AAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRs
bAAAAAAA/yUAIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAEAEAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAA
AAAAAAEAAAAAAEgAAABYoAAA7AMAAAAAAAAAAAAA7AM0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBf
AEkATgBGAE8AAAAAAL0E7/4AAAEAAAABAAAAAAAAAAEAAAAAAD8AAAAAAAAABAAAAAIAAAAAAAAA
AAAAAAAAAABEAAAAAQBWAGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBs
AGEAdABpAG8AbgAAAAAAAACwBEwDAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAACgD
AAABADAAMAAwADAAMAA0AGIAMAAAABoAAQABAEMAbwBtAG0AZQBuAHQAcwAAAAAAAAAiAAEAAQBD
AG8AbQBwAGEAbgB5AE4AYQBtAGUAAAAAAAAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAA
dABpAG8AbgAAAAAAUwBDAF8ANwBjAGYANwA0ADgANwAxAGYANwA0AGQANAAzADIAZQA5ADIAZgAz
AGYAYQBiADkAYwBkADgANABlADIAZQBjAAAAMAAIAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAA
AAAxAC4AMAAuADAALgAwAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABTAEMAXwA3
AGMAZgA3ADQAOAA3ADEAZgA3ADQAZAA0ADMAMgBlADkAMgBmADMAZgBhAGIAOQBjAGQAOAA0AGUA
MgBlAGMALgBkAGwAbAAAAEgAEgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBw
AHkAcgBpAGcAaAB0ACAAQAAgACAAMgAwADEAOAAAACoAAQABAEwAZQBnAGEAbABUAHIAYQBkAGUA
bQBhAHIAawBzAAAAAAAAAAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBhAG0AZQAA
AFMAQwBfADcAYwBmADcANAA4ADcAMQBmADcANABkADQAMwAyAGUAOQAyAGYAMwBmAGEAYgA5AGMA
ZAA4ADQAZQAyAGUAYwAuAGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEAbQBlAAAAAABT
AEMAXwA3AGMAZgA3ADQAOAA3ADEAZgA3ADQAZAA0ADMAMgBlADkAMgBmADMAZgBhAGIAOQBjAGQA
OAA0AGUAMgBlAGMAAAA0AAgAAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAxAC4AMAAu
ADAALgAwAAAAOAAIAAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4A
MAAuADAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAkAAA
DAAAAAgwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                  name="VSTAProjectName"
                  typeConverter="NOTBROWSABLE">SC_7cf74871f74d432e92f3fab9cd84e2ec</property>
                <property
                  dataType="System.String"
                  description="Specifies the programming language used by the script."
                  name="ScriptLanguage"
                  typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read-only variables."
                  name="ReadOnlyVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg">User::fullLoad,User::getMaxNorows,User::getNoRows,User::MaxDocID</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read/write variables."
                  name="ReadWriteVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="List of breakpoints present on the script."
                  isArray="true"
                  name="BreakpointCollection"
                  typeConverter="NOTBROWSABLE">
                  <arrayElements
                    arrayElementCount="1">
                    <arrayElement
                      dataType="System.String">&lt;SOAP-ENV:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"&gt;
&lt;SOAP-ENV:Body&gt;
&lt;a1:ScriptBreakpointInfo id="ref-1" xmlns:a1="http://schemas.microsoft.com/clr/nsassem/Microsoft.SqlServer.VSTAHosting/Microsoft.SqlServer.VSTAScriptingLib%2C%20Version%3D14.0.0.0%2C%20Culture%3Dneutral%2C%20PublicKeyToken%3D89845dcd8080cc91"&gt;
&lt;Enabled&gt;true&lt;/Enabled&gt;
&lt;File id="ref-3"&gt;main.cs&lt;/File&gt;
&lt;FileLine&gt;342&lt;/FileLine&gt;
&lt;FileColumn&gt;17&lt;/FileColumn&gt;
&lt;/a1:ScriptBreakpointInfo&gt;
&lt;/SOAP-ENV:Body&gt;
&lt;/SOAP-ENV:Envelope&gt;
</arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataChecksum140"
                  typeConverter="NOTBROWSABLE">5A</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Getcontracts\get Scripe contracts from web (rest).Connections[Connection]"
                  connectionManagerID="Package.ConnectionManagers[LocalHost.flotaskjal]"
                  connectionManagerRefId="Package.ConnectionManagers[LocalHost.flotaskjal]"
                  name="Connection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Getcontracts\get Scripe contracts from web (rest).Outputs[Contracts]"
                  hasSideEffects="true"
                  name="Contracts">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Getcontracts\get Scripe contracts from web (rest).Outputs[Contracts].Columns[ID]"
                      dataType="ui8"
                      lineageId="Package\Getcontracts\get Scripe contracts from web (rest).Outputs[Contracts].Columns[ID]"
                      name="ID" />
                    <outputColumn
                      refId="Package\Getcontracts\get Scripe contracts from web (rest).Outputs[Contracts].Columns[Title]"
                      codePage="1252"
                      dataType="str"
                      length="100"
                      lineageId="Package\Getcontracts\get Scripe contracts from web (rest).Outputs[Contracts].Columns[Title]"
                      name="Title" />
                    <outputColumn
                      refId="Package\Getcontracts\get Scripe contracts from web (rest).Outputs[Contracts].Columns[FirstName]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Getcontracts\get Scripe contracts from web (rest).Outputs[Contracts].Columns[FirstName]"
                      name="FirstName" />
                    <outputColumn
                      refId="Package\Getcontracts\get Scripe contracts from web (rest).Outputs[Contracts].Columns[LastName]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Getcontracts\get Scripe contracts from web (rest).Outputs[Contracts].Columns[LastName]"
                      name="LastName" />
                    <outputColumn
                      refId="Package\Getcontracts\get Scripe contracts from web (rest).Outputs[Contracts].Columns[email]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Getcontracts\get Scripe contracts from web (rest).Outputs[Contracts].Columns[email]"
                      name="email" />
                    <outputColumn
                      refId="Package\Getcontracts\get Scripe contracts from web (rest).Outputs[Contracts].Columns[FullName]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Getcontracts\get Scripe contracts from web (rest).Outputs[Contracts].Columns[FullName]"
                      name="FullName" />
                    <outputColumn
                      refId="Package\Getcontracts\get Scripe contracts from web (rest).Outputs[Contracts].Columns[RentalAgreement]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Getcontracts\get Scripe contracts from web (rest).Outputs[Contracts].Columns[RentalAgreement]"
                      name="RentalAgreement" />
                    <outputColumn
                      refId="Package\Getcontracts\get Scripe contracts from web (rest).Outputs[Contracts].Columns[startlocation]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Getcontracts\get Scripe contracts from web (rest).Outputs[Contracts].Columns[startlocation]"
                      name="startlocation" />
                    <outputColumn
                      refId="Package\Getcontracts\get Scripe contracts from web (rest).Outputs[Contracts].Columns[returnlocation]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Getcontracts\get Scripe contracts from web (rest).Outputs[Contracts].Columns[returnlocation]"
                      name="returnlocation" />
                    <outputColumn
                      refId="Package\Getcontracts\get Scripe contracts from web (rest).Outputs[Contracts].Columns[drivinglicense]"
                      codePage="1252"
                      dataType="str"
                      length="100"
                      lineageId="Package\Getcontracts\get Scripe contracts from web (rest).Outputs[Contracts].Columns[drivinglicense]"
                      name="drivinglicense" />
                    <outputColumn
                      refId="Package\Getcontracts\get Scripe contracts from web (rest).Outputs[Contracts].Columns[registration]"
                      codePage="1252"
                      dataType="str"
                      length="100"
                      lineageId="Package\Getcontracts\get Scripe contracts from web (rest).Outputs[Contracts].Columns[registration]"
                      name="registration" />
                    <outputColumn
                      refId="Package\Getcontracts\get Scripe contracts from web (rest).Outputs[Contracts].Columns[ctime]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Getcontracts\get Scripe contracts from web (rest).Outputs[Contracts].Columns[ctime]"
                      name="ctime" />
                    <outputColumn
                      refId="Package\Getcontracts\get Scripe contracts from web (rest).Outputs[Contracts].Columns[mtime]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Getcontracts\get Scripe contracts from web (rest).Outputs[Contracts].Columns[mtime]"
                      name="mtime" />
                    <outputColumn
                      refId="Package\Getcontracts\get Scripe contracts from web (rest).Outputs[Contracts].Columns[ReservationNumber]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Getcontracts\get Scripe contracts from web (rest).Outputs[Contracts].Columns[ReservationNumber]"
                      name="ReservationNumber" />
                    <outputColumn
                      refId="Package\Getcontracts\get Scripe contracts from web (rest).Outputs[Contracts].Columns[notes]"
                      codePage="1252"
                      dataType="str"
                      length="2000"
                      lineageId="Package\Getcontracts\get Scripe contracts from web (rest).Outputs[Contracts].Columns[notes]"
                      name="notes" />
                    <outputColumn
                      refId="Package\Getcontracts\get Scripe contracts from web (rest).Outputs[Contracts].Columns[lt_alm_contract_type]"
                      codePage="1252"
                      dataType="str"
                      description="Long term contract types"
                      length="100"
                      lineageId="Package\Getcontracts\get Scripe contracts from web (rest).Outputs[Contracts].Columns[lt_alm_contract_type]"
                      name="lt_alm_contract_type" />
                    <outputColumn
                      refId="Package\Getcontracts\get Scripe contracts from web (rest).Outputs[Contracts].Columns[lt_alm_c1Langtimaleiga]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Getcontracts\get Scripe contracts from web (rest).Outputs[Contracts].Columns[lt_alm_c1Langtimaleiga]"
                      name="lt_alm_c1Langtimaleiga" />
                    <outputColumn
                      refId="Package\Getcontracts\get Scripe contracts from web (rest).Outputs[Contracts].Columns[lt_alm_c1Vetrarleiga]"
                      codePage="1252"
                      dataType="str"
                      description="lt_alm_c1Langtimaleiga"
                      length="50"
                      lineageId="Package\Getcontracts\get Scripe contracts from web (rest).Outputs[Contracts].Columns[lt_alm_c1Vetrarleiga]"
                      name="lt_alm_c1Vetrarleiga" />
                    <outputColumn
                      refId="Package\Getcontracts\get Scripe contracts from web (rest).Outputs[Contracts].Columns[lt_alm_c1Framlenging]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Getcontracts\get Scripe contracts from web (rest).Outputs[Contracts].Columns[lt_alm_c1Framlenging]"
                      name="lt_alm_c1Framlenging" />
                    <outputColumn
                      refId="Package\Getcontracts\get Scripe contracts from web (rest).Outputs[Contracts].Columns[lt_alm_c1Skipti]"
                      codePage="1252"
                      dataType="str"
                      description="Checkbox skipti á bíl"
                      length="50"
                      lineageId="Package\Getcontracts\get Scripe contracts from web (rest).Outputs[Contracts].Columns[lt_alm_c1Skipti]"
                      name="lt_alm_c1Skipti" />
                    <outputColumn
                      refId="Package\Getcontracts\get Scripe contracts from web (rest).Outputs[Contracts].Columns[lt_bill_argerd]"
                      codePage="1252"
                      dataType="str"
                      length="4"
                      lineageId="Package\Getcontracts\get Scripe contracts from web (rest).Outputs[Contracts].Columns[lt_bill_argerd]"
                      name="lt_bill_argerd" />
                    <outputColumn
                      refId="Package\Getcontracts\get Scripe contracts from web (rest).Outputs[Contracts].Columns[lt_bill_tegund]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Getcontracts\get Scripe contracts from web (rest).Outputs[Contracts].Columns[lt_bill_tegund]"
                      name="lt_bill_tegund" />
                    <outputColumn
                      refId="Package\Getcontracts\get Scripe contracts from web (rest).Outputs[Contracts].Columns[lt_bill_leiguflokkur]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Getcontracts\get Scripe contracts from web (rest).Outputs[Contracts].Columns[lt_bill_leiguflokkur]"
                      name="lt_bill_leiguflokkur" />
                    <outputColumn
                      refId="Package\Getcontracts\get Scripe contracts from web (rest).Outputs[Contracts].Columns[lt_bill_lok_dags]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Getcontracts\get Scripe contracts from web (rest).Outputs[Contracts].Columns[lt_bill_lok_dags]"
                      name="lt_bill_lok_dags" />
                    <outputColumn
                      refId="Package\Getcontracts\get Scripe contracts from web (rest).Outputs[Contracts].Columns[lt_bill_afh_dags]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Getcontracts\get Scripe contracts from web (rest).Outputs[Contracts].Columns[lt_bill_afh_dags]"
                      name="lt_bill_afh_dags" />
                    <outputColumn
                      refId="Package\Getcontracts\get Scripe contracts from web (rest).Outputs[Contracts].Columns[lt_bill_next_service_km]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Getcontracts\get Scripe contracts from web (rest).Outputs[Contracts].Columns[lt_bill_next_service_km]"
                      name="lt_bill_next_service_km" />
                    <outputColumn
                      refId="Package\Getcontracts\get Scripe contracts from web (rest).Outputs[Contracts].Columns[lt_heimili]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Getcontracts\get Scripe contracts from web (rest).Outputs[Contracts].Columns[lt_heimili]"
                      name="lt_heimili" />
                    <outputColumn
                      refId="Package\Getcontracts\get Scripe contracts from web (rest).Outputs[Contracts].Columns[lt_staður]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Getcontracts\get Scripe contracts from web (rest).Outputs[Contracts].Columns[lt_staður]"
                      name="lt_staður" />
                    <outputColumn
                      refId="Package\Getcontracts\get Scripe contracts from web (rest).Outputs[Contracts].Columns[lt_heimasími]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Getcontracts\get Scripe contracts from web (rest).Outputs[Contracts].Columns[lt_heimasími]"
                      name="lt_heimasími" />
                    <outputColumn
                      refId="Package\Getcontracts\get Scripe contracts from web (rest).Outputs[Contracts].Columns[lt_farsími]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Getcontracts\get Scripe contracts from web (rest).Outputs[Contracts].Columns[lt_farsími]"
                      name="lt_farsími" />
                    <outputColumn
                      refId="Package\Getcontracts\get Scripe contracts from web (rest).Outputs[Contracts].Columns[lt_bill_opt_nagladekk]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Getcontracts\get Scripe contracts from web (rest).Outputs[Contracts].Columns[lt_bill_opt_nagladekk]"
                      name="lt_bill_opt_nagladekk" />
                    <outputColumn
                      refId="Package\Getcontracts\get Scripe contracts from web (rest).Outputs[Contracts].Columns[lt_langtimasamningsnumer]"
                      codePage="1252"
                      dataType="str"
                      length="100"
                      lineageId="Package\Getcontracts\get Scripe contracts from web (rest).Outputs[Contracts].Columns[lt_langtimasamningsnumer]"
                      name="lt_langtimasamningsnumer" />
                    <outputColumn
                      refId="Package\Getcontracts\get Scripe contracts from web (rest).Outputs[Contracts].Columns[lt_skilm_verd_pr_man]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Getcontracts\get Scripe contracts from web (rest).Outputs[Contracts].Columns[lt_skilm_verd_pr_man]"
                      name="lt_skilm_verd_pr_man" />
                    <outputColumn
                      refId="Package\Getcontracts\get Scripe contracts from web (rest).Outputs[Contracts].Columns[lt_skilm_trygg_pr_man]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Getcontracts\get Scripe contracts from web (rest).Outputs[Contracts].Columns[lt_skilm_trygg_pr_man]"
                      name="lt_skilm_trygg_pr_man" />
                    <outputColumn
                      refId="Package\Getcontracts\get Scripe contracts from web (rest).Outputs[Contracts].Columns[lt_skilm_verd_pr_km_umfr]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Getcontracts\get Scripe contracts from web (rest).Outputs[Contracts].Columns[lt_skilm_verd_pr_km_umfr]"
                      name="lt_skilm_verd_pr_km_umfr" />
                    <outputColumn
                      refId="Package\Getcontracts\get Scripe contracts from web (rest).Outputs[Contracts].Columns[lt_skilm_tryggingafé]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Getcontracts\get Scripe contracts from web (rest).Outputs[Contracts].Columns[lt_skilm_tryggingafé]"
                      name="lt_skilm_tryggingafé" />
                    <outputColumn
                      refId="Package\Getcontracts\get Scripe contracts from web (rest).Outputs[Contracts].Columns[lt_skilm_innif_km]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Getcontracts\get Scripe contracts from web (rest).Outputs[Contracts].Columns[lt_skilm_innif_km]"
                      name="lt_skilm_innif_km" />
                    <outputColumn
                      refId="Package\Getcontracts\get Scripe contracts from web (rest).Outputs[Contracts].Columns[lt_skilm_innif_km_tb]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Getcontracts\get Scripe contracts from web (rest).Outputs[Contracts].Columns[lt_skilm_innif_km_tb]"
                      name="lt_skilm_innif_km_tb" />
                    <outputColumn
                      refId="Package\Getcontracts\get Scripe contracts from web (rest).Outputs[Contracts].Columns[lt_invoice]"
                      codePage="1252"
                      dataType="str"
                      length="200"
                      lineageId="Package\Getcontracts\get Scripe contracts from web (rest).Outputs[Contracts].Columns[lt_invoice]"
                      name="lt_invoice" />
                    <outputColumn
                      refId="Package\Getcontracts\get Scripe contracts from web (rest).Outputs[Contracts].Columns[lt_creditcard]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Getcontracts\get Scripe contracts from web (rest).Outputs[Contracts].Columns[lt_creditcard]"
                      name="lt_creditcard" />
                    <outputColumn
                      refId="Package\Getcontracts\get Scripe contracts from web (rest).Outputs[Contracts].Columns[lt_kennitala]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Getcontracts\get Scripe contracts from web (rest).Outputs[Contracts].Columns[lt_kennitala]"
                      name="lt_kennitala" />
                    <outputColumn
                      refId="Package\Getcontracts\get Scripe contracts from web (rest).Outputs[Contracts].Columns[lt_ext_note]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Getcontracts\get Scripe contracts from web (rest).Outputs[Contracts].Columns[lt_ext_note]"
                      name="lt_ext_note" />
                    <outputColumn
                      refId="Package\Getcontracts\get Scripe contracts from web (rest).Outputs[Contracts].Columns[lt_tengiliður]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Getcontracts\get Scripe contracts from web (rest).Outputs[Contracts].Columns[lt_tengiliður]"
                      name="lt_tengiliður" />
                    <outputColumn
                      refId="Package\Getcontracts\get Scripe contracts from web (rest).Outputs[Contracts].Columns[lt_samtals_verðmán]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Getcontracts\get Scripe contracts from web (rest).Outputs[Contracts].Columns[lt_samtals_verðmán]"
                      name="lt_samtals_verðmán" />
                    <outputColumn
                      refId="Package\Getcontracts\get Scripe contracts from web (rest).Outputs[Contracts].Columns[lt_eldra_samningsnr]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Getcontracts\get Scripe contracts from web (rest).Outputs[Contracts].Columns[lt_eldra_samningsnr]"
                      name="lt_eldra_samningsnr" />
                    <outputColumn
                      refId="Package\Getcontracts\get Scripe contracts from web (rest).Outputs[Contracts].Columns[lt_fyrirframgeidd_leiga]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Getcontracts\get Scripe contracts from web (rest).Outputs[Contracts].Columns[lt_fyrirframgeidd_leiga]"
                      name="lt_fyrirframgeidd_leiga" />
                    <outputColumn
                      refId="Package\Getcontracts\get Scripe contracts from web (rest).Outputs[Contracts].Columns[lt_eigin_áhætta]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Getcontracts\get Scripe contracts from web (rest).Outputs[Contracts].Columns[lt_eigin_áhætta]"
                      name="lt_eigin_áhætta" />
                    <outputColumn
                      refId="Package\Getcontracts\get Scripe contracts from web (rest).Outputs[Contracts].Columns[lt_nagladekkja]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Getcontracts\get Scripe contracts from web (rest).Outputs[Contracts].Columns[lt_nagladekkja]"
                      name="lt_nagladekkja" />
                    <outputColumn
                      refId="Package\Getcontracts\get Scripe contracts from web (rest).Outputs[Contracts].Columns[lt_nagladekknei]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Getcontracts\get Scripe contracts from web (rest).Outputs[Contracts].Columns[lt_nagladekknei]"
                      name="lt_nagladekknei" />
                    <outputColumn
                      refId="Package\Getcontracts\get Scripe contracts from web (rest).Outputs[Contracts].Columns[lt_bilaskiptija]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Getcontracts\get Scripe contracts from web (rest).Outputs[Contracts].Columns[lt_bilaskiptija]"
                      name="lt_bilaskiptija" />
                    <outputColumn
                      refId="Package\Getcontracts\get Scripe contracts from web (rest).Outputs[Contracts].Columns[lt_bilaskiptinei]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Getcontracts\get Scripe contracts from web (rest).Outputs[Contracts].Columns[lt_bilaskiptinei]"
                      name="lt_bilaskiptinei" />
                    <outputColumn
                      refId="Package\Getcontracts\get Scripe contracts from web (rest).Outputs[Contracts].Columns[lt_undirbúningursamnings]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Getcontracts\get Scripe contracts from web (rest).Outputs[Contracts].Columns[lt_undirbúningursamnings]"
                      name="lt_undirbúningursamnings" />
                    <outputColumn
                      refId="Package\Getcontracts\get Scripe contracts from web (rest).Outputs[Contracts].Columns[address]"
                      codePage="1252"
                      dataType="str"
                      length="2000"
                      lineageId="Package\Getcontracts\get Scripe contracts from web (rest).Outputs[Contracts].Columns[address]"
                      name="address" />
                    <outputColumn
                      refId="Package\Getcontracts\get Scripe contracts from web (rest).Outputs[Contracts].Columns[lt_optionalservicenotes]"
                      codePage="1252"
                      dataType="str"
                      length="2000"
                      lineageId="Package\Getcontracts\get Scripe contracts from web (rest).Outputs[Contracts].Columns[lt_optionalservicenotes]"
                      name="lt_optionalservicenotes" />
                    <outputColumn
                      refId="Package\Getcontracts\get Scripe contracts from web (rest).Outputs[Contracts].Columns[inKm]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Getcontracts\get Scripe contracts from web (rest).Outputs[Contracts].Columns[inKm]"
                      name="inKm" />
                    <outputColumn
                      refId="Package\Getcontracts\get Scripe contracts from web (rest).Outputs[Contracts].Columns[lt_vinnusimi]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Getcontracts\get Scripe contracts from web (rest).Outputs[Contracts].Columns[lt_vinnusimi]"
                      name="lt_vinnusimi" />
                    <outputColumn
                      refId="Package\Getcontracts\get Scripe contracts from web (rest).Outputs[Contracts].Columns[vehicleType]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Getcontracts\get Scripe contracts from web (rest).Outputs[Contracts].Columns[vehicleType]"
                      name="vehicleType" />
                    <outputColumn
                      refId="Package\Getcontracts\get Scripe contracts from web (rest).Outputs[Contracts].Columns[xmlText]"
                      codePage="1252"
                      dataType="str"
                      length="6000"
                      lineageId="Package\Getcontracts\get Scripe contracts from web (rest).Outputs[Contracts].Columns[xmlText]"
                      name="xmlText" />
                    <outputColumn
                      refId="Package\Getcontracts\get Scripe contracts from web (rest).Outputs[Contracts].Columns[overflow]"
                      codePage="1252"
                      dataType="str"
                      length="6000"
                      lineageId="Package\Getcontracts\get Scripe contracts from web (rest).Outputs[Contracts].Columns[overflow]"
                      name="overflow" />
                    <outputColumn
                      refId="Package\Getcontracts\get Scripe contracts from web (rest).Outputs[Contracts].Columns[status]"
                      codePage="1252"
                      dataType="str"
                      length="20"
                      lineageId="Package\Getcontracts\get Scripe contracts from web (rest).Outputs[Contracts].Columns[status]"
                      name="status" />
                    <outputColumn
                      refId="Package\Getcontracts\get Scripe contracts from web (rest).Outputs[Contracts].Columns[consent_special_offer_question]"
                      codePage="1252"
                      dataType="str"
                      length="100"
                      lineageId="Package\Getcontracts\get Scripe contracts from web (rest).Outputs[Contracts].Columns[consent_special_offer_question]"
                      name="consent_special_offer_question" />
                    <outputColumn
                      refId="Package\Getcontracts\get Scripe contracts from web (rest).Outputs[Contracts].Columns[consent_special_offer_reply]"
                      codePage="1252"
                      dataType="str"
                      length="20"
                      lineageId="Package\Getcontracts\get Scripe contracts from web (rest).Outputs[Contracts].Columns[consent_special_offer_reply]"
                      name="consent_special_offer_reply" />
                    <outputColumn
                      refId="Package\Getcontracts\get Scripe contracts from web (rest).Outputs[Contracts].Columns[consent_other_reply]"
                      codePage="1252"
                      dataType="str"
                      length="20"
                      lineageId="Package\Getcontracts\get Scripe contracts from web (rest).Outputs[Contracts].Columns[consent_other_reply]"
                      name="consent_other_reply" />
                    <outputColumn
                      refId="Package\Getcontracts\get Scripe contracts from web (rest).Outputs[Contracts].Columns[conseent_other_question]"
                      codePage="1252"
                      dataType="str"
                      length="100"
                      lineageId="Package\Getcontracts\get Scripe contracts from web (rest).Outputs[Contracts].Columns[conseent_other_question]"
                      name="conseent_other_question" />
                    <outputColumn
                      refId="Package\Getcontracts\get Scripe contracts from web (rest).Outputs[Contracts].Columns[document_xml]"
                      codePage="1252"
                      dataType="text"
                      lineageId="Package\Getcontracts\get Scripe contracts from web (rest).Outputs[Contracts].Columns[document_xml]"
                      name="document_xml" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Getcontracts\wrk_Srive_data"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="wrk_Srive_data"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[wrk].[RentalContracts_scrive]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">3</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Getcontracts\wrk_Srive_data.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[LocalHost.flotaskjal]"
                  connectionManagerRefId="Package.ConnectionManagers[LocalHost.flotaskjal]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Getcontracts\wrk_Srive_data.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Getcontracts\wrk_Srive_data.Inputs[OLE DB Destination Input].Columns[Title]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="100"
                      cachedName="Title"
                      externalMetadataColumnId="Package\Getcontracts\wrk_Srive_data.Inputs[OLE DB Destination Input].ExternalColumns[Title]"
                      lineageId="Package\Getcontracts\get Scripe contracts from web (rest).Outputs[Contracts].Columns[Title]" />
                    <inputColumn
                      refId="Package\Getcontracts\wrk_Srive_data.Inputs[OLE DB Destination Input].Columns[FirstName]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="FirstName"
                      externalMetadataColumnId="Package\Getcontracts\wrk_Srive_data.Inputs[OLE DB Destination Input].ExternalColumns[FirstName]"
                      lineageId="Package\Getcontracts\get Scripe contracts from web (rest).Outputs[Contracts].Columns[FirstName]" />
                    <inputColumn
                      refId="Package\Getcontracts\wrk_Srive_data.Inputs[OLE DB Destination Input].Columns[LastName]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="LastName"
                      externalMetadataColumnId="Package\Getcontracts\wrk_Srive_data.Inputs[OLE DB Destination Input].ExternalColumns[LastName]"
                      lineageId="Package\Getcontracts\get Scripe contracts from web (rest).Outputs[Contracts].Columns[LastName]" />
                    <inputColumn
                      refId="Package\Getcontracts\wrk_Srive_data.Inputs[OLE DB Destination Input].Columns[email]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="email"
                      externalMetadataColumnId="Package\Getcontracts\wrk_Srive_data.Inputs[OLE DB Destination Input].ExternalColumns[email]"
                      lineageId="Package\Getcontracts\get Scripe contracts from web (rest).Outputs[Contracts].Columns[email]" />
                    <inputColumn
                      refId="Package\Getcontracts\wrk_Srive_data.Inputs[OLE DB Destination Input].Columns[FullName]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="FullName"
                      externalMetadataColumnId="Package\Getcontracts\wrk_Srive_data.Inputs[OLE DB Destination Input].ExternalColumns[FullName]"
                      lineageId="Package\Getcontracts\get Scripe contracts from web (rest).Outputs[Contracts].Columns[FullName]" />
                    <inputColumn
                      refId="Package\Getcontracts\wrk_Srive_data.Inputs[OLE DB Destination Input].Columns[startlocation]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="startlocation"
                      externalMetadataColumnId="Package\Getcontracts\wrk_Srive_data.Inputs[OLE DB Destination Input].ExternalColumns[startlocation]"
                      lineageId="Package\Getcontracts\get Scripe contracts from web (rest).Outputs[Contracts].Columns[startlocation]" />
                    <inputColumn
                      refId="Package\Getcontracts\wrk_Srive_data.Inputs[OLE DB Destination Input].Columns[drivinglicense]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="100"
                      cachedName="drivinglicense"
                      externalMetadataColumnId="Package\Getcontracts\wrk_Srive_data.Inputs[OLE DB Destination Input].ExternalColumns[drivinglicense]"
                      lineageId="Package\Getcontracts\get Scripe contracts from web (rest).Outputs[Contracts].Columns[drivinglicense]" />
                    <inputColumn
                      refId="Package\Getcontracts\wrk_Srive_data.Inputs[OLE DB Destination Input].Columns[registration]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="100"
                      cachedName="registration"
                      externalMetadataColumnId="Package\Getcontracts\wrk_Srive_data.Inputs[OLE DB Destination Input].ExternalColumns[registration]"
                      lineageId="Package\Getcontracts\get Scripe contracts from web (rest).Outputs[Contracts].Columns[registration]" />
                    <inputColumn
                      refId="Package\Getcontracts\wrk_Srive_data.Inputs[OLE DB Destination Input].Columns[ctime]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="ctime"
                      externalMetadataColumnId="Package\Getcontracts\wrk_Srive_data.Inputs[OLE DB Destination Input].ExternalColumns[ctime]"
                      lineageId="Package\Getcontracts\get Scripe contracts from web (rest).Outputs[Contracts].Columns[ctime]" />
                    <inputColumn
                      refId="Package\Getcontracts\wrk_Srive_data.Inputs[OLE DB Destination Input].Columns[mtime]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="mtime"
                      externalMetadataColumnId="Package\Getcontracts\wrk_Srive_data.Inputs[OLE DB Destination Input].ExternalColumns[mtime]"
                      lineageId="Package\Getcontracts\get Scripe contracts from web (rest).Outputs[Contracts].Columns[mtime]" />
                    <inputColumn
                      refId="Package\Getcontracts\wrk_Srive_data.Inputs[OLE DB Destination Input].Columns[ReservationNumber]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="ReservationNumber"
                      externalMetadataColumnId="Package\Getcontracts\wrk_Srive_data.Inputs[OLE DB Destination Input].ExternalColumns[ReservationNumber]"
                      lineageId="Package\Getcontracts\get Scripe contracts from web (rest).Outputs[Contracts].Columns[ReservationNumber]" />
                    <inputColumn
                      refId="Package\Getcontracts\wrk_Srive_data.Inputs[OLE DB Destination Input].Columns[lt_alm_c1Langtimaleiga]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="lt_alm_c1Langtimaleiga"
                      externalMetadataColumnId="Package\Getcontracts\wrk_Srive_data.Inputs[OLE DB Destination Input].ExternalColumns[lt_alm_c1Langtimaleiga]"
                      lineageId="Package\Getcontracts\get Scripe contracts from web (rest).Outputs[Contracts].Columns[lt_alm_c1Langtimaleiga]" />
                    <inputColumn
                      refId="Package\Getcontracts\wrk_Srive_data.Inputs[OLE DB Destination Input].Columns[lt_alm_c1Framlenging]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="lt_alm_c1Framlenging"
                      externalMetadataColumnId="Package\Getcontracts\wrk_Srive_data.Inputs[OLE DB Destination Input].ExternalColumns[lt_alm_c1Framlenging]"
                      lineageId="Package\Getcontracts\get Scripe contracts from web (rest).Outputs[Contracts].Columns[lt_alm_c1Framlenging]" />
                    <inputColumn
                      refId="Package\Getcontracts\wrk_Srive_data.Inputs[OLE DB Destination Input].Columns[lt_alm_c1Skipti]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="lt_alm_c1Skipti"
                      externalMetadataColumnId="Package\Getcontracts\wrk_Srive_data.Inputs[OLE DB Destination Input].ExternalColumns[lt_alm_c1Skipti]"
                      lineageId="Package\Getcontracts\get Scripe contracts from web (rest).Outputs[Contracts].Columns[lt_alm_c1Skipti]" />
                    <inputColumn
                      refId="Package\Getcontracts\wrk_Srive_data.Inputs[OLE DB Destination Input].Columns[lt_bill_argerd]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="4"
                      cachedName="lt_bill_argerd"
                      externalMetadataColumnId="Package\Getcontracts\wrk_Srive_data.Inputs[OLE DB Destination Input].ExternalColumns[lt_bill_argerd]"
                      lineageId="Package\Getcontracts\get Scripe contracts from web (rest).Outputs[Contracts].Columns[lt_bill_argerd]" />
                    <inputColumn
                      refId="Package\Getcontracts\wrk_Srive_data.Inputs[OLE DB Destination Input].Columns[lt_bill_leiguflokkur]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="lt_bill_leiguflokkur"
                      externalMetadataColumnId="Package\Getcontracts\wrk_Srive_data.Inputs[OLE DB Destination Input].ExternalColumns[lt_bill_leiguflokkur]"
                      lineageId="Package\Getcontracts\get Scripe contracts from web (rest).Outputs[Contracts].Columns[lt_bill_leiguflokkur]" />
                    <inputColumn
                      refId="Package\Getcontracts\wrk_Srive_data.Inputs[OLE DB Destination Input].Columns[returnlocation]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="returnlocation"
                      externalMetadataColumnId="Package\Getcontracts\wrk_Srive_data.Inputs[OLE DB Destination Input].ExternalColumns[returnloaction]"
                      lineageId="Package\Getcontracts\get Scripe contracts from web (rest).Outputs[Contracts].Columns[returnlocation]" />
                    <inputColumn
                      refId="Package\Getcontracts\wrk_Srive_data.Inputs[OLE DB Destination Input].Columns[lt_alm_contract_type]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="100"
                      cachedName="lt_alm_contract_type"
                      externalMetadataColumnId="Package\Getcontracts\wrk_Srive_data.Inputs[OLE DB Destination Input].ExternalColumns[lt_alm_ContractType]"
                      lineageId="Package\Getcontracts\get Scripe contracts from web (rest).Outputs[Contracts].Columns[lt_alm_contract_type]" />
                    <inputColumn
                      refId="Package\Getcontracts\wrk_Srive_data.Inputs[OLE DB Destination Input].Columns[lt_alm_c1Vetrarleiga]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="lt_alm_c1Vetrarleiga"
                      externalMetadataColumnId="Package\Getcontracts\wrk_Srive_data.Inputs[OLE DB Destination Input].ExternalColumns[lt_alm_c1Vetrarleig]"
                      lineageId="Package\Getcontracts\get Scripe contracts from web (rest).Outputs[Contracts].Columns[lt_alm_c1Vetrarleiga]" />
                    <inputColumn
                      refId="Package\Getcontracts\wrk_Srive_data.Inputs[OLE DB Destination Input].Columns[lt_bill_tegund]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="lt_bill_tegund"
                      externalMetadataColumnId="Package\Getcontracts\wrk_Srive_data.Inputs[OLE DB Destination Input].ExternalColumns[lt_bill_tegund]"
                      lineageId="Package\Getcontracts\get Scripe contracts from web (rest).Outputs[Contracts].Columns[lt_bill_tegund]" />
                    <inputColumn
                      refId="Package\Getcontracts\wrk_Srive_data.Inputs[OLE DB Destination Input].Columns[lt_langtimasamningsnumer]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="100"
                      cachedName="lt_langtimasamningsnumer"
                      externalMetadataColumnId="Package\Getcontracts\wrk_Srive_data.Inputs[OLE DB Destination Input].ExternalColumns[lt_langtima_samningsnumer]"
                      lineageId="Package\Getcontracts\get Scripe contracts from web (rest).Outputs[Contracts].Columns[lt_langtimasamningsnumer]" />
                    <inputColumn
                      refId="Package\Getcontracts\wrk_Srive_data.Inputs[OLE DB Destination Input].Columns[notes]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="2000"
                      cachedName="notes"
                      externalMetadataColumnId="Package\Getcontracts\wrk_Srive_data.Inputs[OLE DB Destination Input].ExternalColumns[notes]"
                      lineageId="Package\Getcontracts\get Scripe contracts from web (rest).Outputs[Contracts].Columns[notes]" />
                    <inputColumn
                      refId="Package\Getcontracts\wrk_Srive_data.Inputs[OLE DB Destination Input].Columns[lt_kennitala]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="lt_kennitala"
                      externalMetadataColumnId="Package\Getcontracts\wrk_Srive_data.Inputs[OLE DB Destination Input].ExternalColumns[lt_alm_kennitala]"
                      lineageId="Package\Getcontracts\get Scripe contracts from web (rest).Outputs[Contracts].Columns[lt_kennitala]" />
                    <inputColumn
                      refId="Package\Getcontracts\wrk_Srive_data.Inputs[OLE DB Destination Input].Columns[lt_bill_lok_dags]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="lt_bill_lok_dags"
                      externalMetadataColumnId="Package\Getcontracts\wrk_Srive_data.Inputs[OLE DB Destination Input].ExternalColumns[lt_lokadags]"
                      lineageId="Package\Getcontracts\get Scripe contracts from web (rest).Outputs[Contracts].Columns[lt_bill_lok_dags]" />
                    <inputColumn
                      refId="Package\Getcontracts\wrk_Srive_data.Inputs[OLE DB Destination Input].Columns[lt_bill_opt_nagladekk]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="lt_bill_opt_nagladekk"
                      externalMetadataColumnId="Package\Getcontracts\wrk_Srive_data.Inputs[OLE DB Destination Input].ExternalColumns[lt_opt_nagladekk]"
                      lineageId="Package\Getcontracts\get Scripe contracts from web (rest).Outputs[Contracts].Columns[lt_bill_opt_nagladekk]" />
                    <inputColumn
                      refId="Package\Getcontracts\wrk_Srive_data.Inputs[OLE DB Destination Input].Columns[lt_heimasími]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="lt_heimasími"
                      externalMetadataColumnId="Package\Getcontracts\wrk_Srive_data.Inputs[OLE DB Destination Input].ExternalColumns[lt_alm_heimasími]"
                      lineageId="Package\Getcontracts\get Scripe contracts from web (rest).Outputs[Contracts].Columns[lt_heimasími]" />
                    <inputColumn
                      refId="Package\Getcontracts\wrk_Srive_data.Inputs[OLE DB Destination Input].Columns[lt_farsími]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="lt_farsími"
                      externalMetadataColumnId="Package\Getcontracts\wrk_Srive_data.Inputs[OLE DB Destination Input].ExternalColumns[lt_alm_farsími]"
                      lineageId="Package\Getcontracts\get Scripe contracts from web (rest).Outputs[Contracts].Columns[lt_farsími]" />
                    <inputColumn
                      refId="Package\Getcontracts\wrk_Srive_data.Inputs[OLE DB Destination Input].Columns[lt_heimili]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="lt_heimili"
                      externalMetadataColumnId="Package\Getcontracts\wrk_Srive_data.Inputs[OLE DB Destination Input].ExternalColumns[lt_alm_heimili]"
                      lineageId="Package\Getcontracts\get Scripe contracts from web (rest).Outputs[Contracts].Columns[lt_heimili]" />
                    <inputColumn
                      refId="Package\Getcontracts\wrk_Srive_data.Inputs[OLE DB Destination Input].Columns[lt_staður]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="lt_staður"
                      externalMetadataColumnId="Package\Getcontracts\wrk_Srive_data.Inputs[OLE DB Destination Input].ExternalColumns[lt_alm_staður]"
                      lineageId="Package\Getcontracts\get Scripe contracts from web (rest).Outputs[Contracts].Columns[lt_staður]" />
                    <inputColumn
                      refId="Package\Getcontracts\wrk_Srive_data.Inputs[OLE DB Destination Input].Columns[lt_skilm_tryggingafé]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="lt_skilm_tryggingafé"
                      externalMetadataColumnId="Package\Getcontracts\wrk_Srive_data.Inputs[OLE DB Destination Input].ExternalColumns[lt_tryggingafe]"
                      lineageId="Package\Getcontracts\get Scripe contracts from web (rest).Outputs[Contracts].Columns[lt_skilm_tryggingafé]" />
                    <inputColumn
                      refId="Package\Getcontracts\wrk_Srive_data.Inputs[OLE DB Destination Input].Columns[lt_skilm_verd_pr_km_umfr]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="lt_skilm_verd_pr_km_umfr"
                      externalMetadataColumnId="Package\Getcontracts\wrk_Srive_data.Inputs[OLE DB Destination Input].ExternalColumns[lt_verd_pr_km_umfr]"
                      lineageId="Package\Getcontracts\get Scripe contracts from web (rest).Outputs[Contracts].Columns[lt_skilm_verd_pr_km_umfr]" />
                    <inputColumn
                      refId="Package\Getcontracts\wrk_Srive_data.Inputs[OLE DB Destination Input].Columns[lt_skilm_verd_pr_man]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="lt_skilm_verd_pr_man"
                      externalMetadataColumnId="Package\Getcontracts\wrk_Srive_data.Inputs[OLE DB Destination Input].ExternalColumns[lt_verd_pr_man]"
                      lineageId="Package\Getcontracts\get Scripe contracts from web (rest).Outputs[Contracts].Columns[lt_skilm_verd_pr_man]" />
                    <inputColumn
                      refId="Package\Getcontracts\wrk_Srive_data.Inputs[OLE DB Destination Input].Columns[lt_skilm_trygg_pr_man]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="lt_skilm_trygg_pr_man"
                      externalMetadataColumnId="Package\Getcontracts\wrk_Srive_data.Inputs[OLE DB Destination Input].ExternalColumns[lt_trygging_pr_man]"
                      lineageId="Package\Getcontracts\get Scripe contracts from web (rest).Outputs[Contracts].Columns[lt_skilm_trygg_pr_man]" />
                    <inputColumn
                      refId="Package\Getcontracts\wrk_Srive_data.Inputs[OLE DB Destination Input].Columns[lt_skilm_innif_km_tb]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="lt_skilm_innif_km_tb"
                      externalMetadataColumnId="Package\Getcontracts\wrk_Srive_data.Inputs[OLE DB Destination Input].ExternalColumns[lt_innifalinn_akstur_timabil]"
                      lineageId="Package\Getcontracts\get Scripe contracts from web (rest).Outputs[Contracts].Columns[lt_skilm_innif_km_tb]" />
                    <inputColumn
                      refId="Package\Getcontracts\wrk_Srive_data.Inputs[OLE DB Destination Input].Columns[lt_skilm_innif_km]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="lt_skilm_innif_km"
                      externalMetadataColumnId="Package\Getcontracts\wrk_Srive_data.Inputs[OLE DB Destination Input].ExternalColumns[lt_innifalinn_akstur]"
                      lineageId="Package\Getcontracts\get Scripe contracts from web (rest).Outputs[Contracts].Columns[lt_skilm_innif_km]" />
                    <inputColumn
                      refId="Package\Getcontracts\wrk_Srive_data.Inputs[OLE DB Destination Input].Columns[lt_bill_afh_dags]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="lt_bill_afh_dags"
                      externalMetadataColumnId="Package\Getcontracts\wrk_Srive_data.Inputs[OLE DB Destination Input].ExternalColumns[lt_afh_dags]"
                      lineageId="Package\Getcontracts\get Scripe contracts from web (rest).Outputs[Contracts].Columns[lt_bill_afh_dags]" />
                    <inputColumn
                      refId="Package\Getcontracts\wrk_Srive_data.Inputs[OLE DB Destination Input].Columns[ID]"
                      cachedDataType="ui8"
                      cachedName="ID"
                      externalMetadataColumnId="Package\Getcontracts\wrk_Srive_data.Inputs[OLE DB Destination Input].ExternalColumns[SignedContractID]"
                      lineageId="Package\Getcontracts\get Scripe contracts from web (rest).Outputs[Contracts].Columns[ID]" />
                    <inputColumn
                      refId="Package\Getcontracts\wrk_Srive_data.Inputs[OLE DB Destination Input].Columns[RentalAgreement]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="RentalAgreement"
                      externalMetadataColumnId="Package\Getcontracts\wrk_Srive_data.Inputs[OLE DB Destination Input].ExternalColumns[RentalAgreementNumber]"
                      lineageId="Package\Getcontracts\get Scripe contracts from web (rest).Outputs[Contracts].Columns[RentalAgreement]" />
                    <inputColumn
                      refId="Package\Getcontracts\wrk_Srive_data.Inputs[OLE DB Destination Input].Columns[lt_undirbúningursamnings]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="lt_undirbúningursamnings"
                      externalMetadataColumnId="Package\Getcontracts\wrk_Srive_data.Inputs[OLE DB Destination Input].ExternalColumns[lt_alm_undirb_samnings]"
                      lineageId="Package\Getcontracts\get Scripe contracts from web (rest).Outputs[Contracts].Columns[lt_undirbúningursamnings]" />
                    <inputColumn
                      refId="Package\Getcontracts\wrk_Srive_data.Inputs[OLE DB Destination Input].Columns[lt_bilaskiptija]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="lt_bilaskiptija"
                      externalMetadataColumnId="Package\Getcontracts\wrk_Srive_data.Inputs[OLE DB Destination Input].ExternalColumns[lt_bila_skipti_ja]"
                      lineageId="Package\Getcontracts\get Scripe contracts from web (rest).Outputs[Contracts].Columns[lt_bilaskiptija]" />
                    <inputColumn
                      refId="Package\Getcontracts\wrk_Srive_data.Inputs[OLE DB Destination Input].Columns[lt_bilaskiptinei]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="lt_bilaskiptinei"
                      externalMetadataColumnId="Package\Getcontracts\wrk_Srive_data.Inputs[OLE DB Destination Input].ExternalColumns[lt_bila_skipti_nei]"
                      lineageId="Package\Getcontracts\get Scripe contracts from web (rest).Outputs[Contracts].Columns[lt_bilaskiptinei]" />
                    <inputColumn
                      refId="Package\Getcontracts\wrk_Srive_data.Inputs[OLE DB Destination Input].Columns[lt_bill_next_service_km]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="lt_bill_next_service_km"
                      externalMetadataColumnId="Package\Getcontracts\wrk_Srive_data.Inputs[OLE DB Destination Input].ExternalColumns[lt_bill_next_service_km]"
                      lineageId="Package\Getcontracts\get Scripe contracts from web (rest).Outputs[Contracts].Columns[lt_bill_next_service_km]" />
                    <inputColumn
                      refId="Package\Getcontracts\wrk_Srive_data.Inputs[OLE DB Destination Input].Columns[lt_eldra_samningsnr]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="lt_eldra_samningsnr"
                      externalMetadataColumnId="Package\Getcontracts\wrk_Srive_data.Inputs[OLE DB Destination Input].ExternalColumns[lt_eldra_samningsnumer]"
                      lineageId="Package\Getcontracts\get Scripe contracts from web (rest).Outputs[Contracts].Columns[lt_eldra_samningsnr]" />
                    <inputColumn
                      refId="Package\Getcontracts\wrk_Srive_data.Inputs[OLE DB Destination Input].Columns[lt_fyrirframgeidd_leiga]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="lt_fyrirframgeidd_leiga"
                      externalMetadataColumnId="Package\Getcontracts\wrk_Srive_data.Inputs[OLE DB Destination Input].ExternalColumns[lt_fyrirfram_greidd_leiga]"
                      lineageId="Package\Getcontracts\get Scripe contracts from web (rest).Outputs[Contracts].Columns[lt_fyrirframgeidd_leiga]" />
                    <inputColumn
                      refId="Package\Getcontracts\wrk_Srive_data.Inputs[OLE DB Destination Input].Columns[lt_nagladekkja]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="lt_nagladekkja"
                      externalMetadataColumnId="Package\Getcontracts\wrk_Srive_data.Inputs[OLE DB Destination Input].ExternalColumns[lt_nagladekk_ja]"
                      lineageId="Package\Getcontracts\get Scripe contracts from web (rest).Outputs[Contracts].Columns[lt_nagladekkja]" />
                    <inputColumn
                      refId="Package\Getcontracts\wrk_Srive_data.Inputs[OLE DB Destination Input].Columns[lt_nagladekknei]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="lt_nagladekknei"
                      externalMetadataColumnId="Package\Getcontracts\wrk_Srive_data.Inputs[OLE DB Destination Input].ExternalColumns[lt_nagladekk_nei]"
                      lineageId="Package\Getcontracts\get Scripe contracts from web (rest).Outputs[Contracts].Columns[lt_nagladekknei]" />
                    <inputColumn
                      refId="Package\Getcontracts\wrk_Srive_data.Inputs[OLE DB Destination Input].Columns[lt_tengiliður]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="lt_tengiliður"
                      externalMetadataColumnId="Package\Getcontracts\wrk_Srive_data.Inputs[OLE DB Destination Input].ExternalColumns[lt_tengiliður]"
                      lineageId="Package\Getcontracts\get Scripe contracts from web (rest).Outputs[Contracts].Columns[lt_tengiliður]" />
                    <inputColumn
                      refId="Package\Getcontracts\wrk_Srive_data.Inputs[OLE DB Destination Input].Columns[vehicleType]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="vehicleType"
                      externalMetadataColumnId="Package\Getcontracts\wrk_Srive_data.Inputs[OLE DB Destination Input].ExternalColumns[vehicleType]"
                      lineageId="Package\Getcontracts\get Scripe contracts from web (rest).Outputs[Contracts].Columns[vehicleType]" />
                    <inputColumn
                      refId="Package\Getcontracts\wrk_Srive_data.Inputs[OLE DB Destination Input].Columns[overflow]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="6000"
                      cachedName="overflow"
                      externalMetadataColumnId="Package\Getcontracts\wrk_Srive_data.Inputs[OLE DB Destination Input].ExternalColumns[overflow]"
                      lineageId="Package\Getcontracts\get Scripe contracts from web (rest).Outputs[Contracts].Columns[overflow]" />
                    <inputColumn
                      refId="Package\Getcontracts\wrk_Srive_data.Inputs[OLE DB Destination Input].Columns[inKm]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="inKm"
                      externalMetadataColumnId="Package\Getcontracts\wrk_Srive_data.Inputs[OLE DB Destination Input].ExternalColumns[in_km]"
                      lineageId="Package\Getcontracts\get Scripe contracts from web (rest).Outputs[Contracts].Columns[inKm]" />
                    <inputColumn
                      refId="Package\Getcontracts\wrk_Srive_data.Inputs[OLE DB Destination Input].Columns[lt_optionalservicenotes]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="2000"
                      cachedName="lt_optionalservicenotes"
                      externalMetadataColumnId="Package\Getcontracts\wrk_Srive_data.Inputs[OLE DB Destination Input].ExternalColumns[optionalServicesNotes]"
                      lineageId="Package\Getcontracts\get Scripe contracts from web (rest).Outputs[Contracts].Columns[lt_optionalservicenotes]" />
                    <inputColumn
                      refId="Package\Getcontracts\wrk_Srive_data.Inputs[OLE DB Destination Input].Columns[lt_vinnusimi]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="lt_vinnusimi"
                      externalMetadataColumnId="Package\Getcontracts\wrk_Srive_data.Inputs[OLE DB Destination Input].ExternalColumns[lt_vinnusimi]"
                      lineageId="Package\Getcontracts\get Scripe contracts from web (rest).Outputs[Contracts].Columns[lt_vinnusimi]" />
                    <inputColumn
                      refId="Package\Getcontracts\wrk_Srive_data.Inputs[OLE DB Destination Input].Columns[address]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="2000"
                      cachedName="address"
                      externalMetadataColumnId="Package\Getcontracts\wrk_Srive_data.Inputs[OLE DB Destination Input].ExternalColumns[cust_address]"
                      lineageId="Package\Getcontracts\get Scripe contracts from web (rest).Outputs[Contracts].Columns[address]" />
                    <inputColumn
                      refId="Package\Getcontracts\wrk_Srive_data.Inputs[OLE DB Destination Input].Columns[status]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="20"
                      cachedName="status"
                      externalMetadataColumnId="Package\Getcontracts\wrk_Srive_data.Inputs[OLE DB Destination Input].ExternalColumns[status]"
                      lineageId="Package\Getcontracts\get Scripe contracts from web (rest).Outputs[Contracts].Columns[status]" />
                    <inputColumn
                      refId="Package\Getcontracts\wrk_Srive_data.Inputs[OLE DB Destination Input].Columns[consent_special_offer_question]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="100"
                      cachedName="consent_special_offer_question"
                      externalMetadataColumnId="Package\Getcontracts\wrk_Srive_data.Inputs[OLE DB Destination Input].ExternalColumns[consent_special_offer_question]"
                      lineageId="Package\Getcontracts\get Scripe contracts from web (rest).Outputs[Contracts].Columns[consent_special_offer_question]" />
                    <inputColumn
                      refId="Package\Getcontracts\wrk_Srive_data.Inputs[OLE DB Destination Input].Columns[consent_special_offer_reply]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="20"
                      cachedName="consent_special_offer_reply"
                      externalMetadataColumnId="Package\Getcontracts\wrk_Srive_data.Inputs[OLE DB Destination Input].ExternalColumns[consent_special_offer_reply]"
                      lineageId="Package\Getcontracts\get Scripe contracts from web (rest).Outputs[Contracts].Columns[consent_special_offer_reply]" />
                    <inputColumn
                      refId="Package\Getcontracts\wrk_Srive_data.Inputs[OLE DB Destination Input].Columns[consent_other_reply]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="20"
                      cachedName="consent_other_reply"
                      externalMetadataColumnId="Package\Getcontracts\wrk_Srive_data.Inputs[OLE DB Destination Input].ExternalColumns[consent_other_offer_reply]"
                      lineageId="Package\Getcontracts\get Scripe contracts from web (rest).Outputs[Contracts].Columns[consent_other_reply]" />
                    <inputColumn
                      refId="Package\Getcontracts\wrk_Srive_data.Inputs[OLE DB Destination Input].Columns[conseent_other_question]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="100"
                      cachedName="conseent_other_question"
                      externalMetadataColumnId="Package\Getcontracts\wrk_Srive_data.Inputs[OLE DB Destination Input].ExternalColumns[consent_other_offer_question]"
                      lineageId="Package\Getcontracts\get Scripe contracts from web (rest).Outputs[Contracts].Columns[conseent_other_question]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Getcontracts\wrk_Srive_data.Inputs[OLE DB Destination Input].ExternalColumns[SignedContractID]"
                      dataType="i8"
                      name="SignedContractID" />
                    <externalMetadataColumn
                      refId="Package\Getcontracts\wrk_Srive_data.Inputs[OLE DB Destination Input].ExternalColumns[Title]"
                      codePage="1252"
                      dataType="str"
                      length="100"
                      name="Title" />
                    <externalMetadataColumn
                      refId="Package\Getcontracts\wrk_Srive_data.Inputs[OLE DB Destination Input].ExternalColumns[FirstName]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="FirstName" />
                    <externalMetadataColumn
                      refId="Package\Getcontracts\wrk_Srive_data.Inputs[OLE DB Destination Input].ExternalColumns[LastName]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="LastName" />
                    <externalMetadataColumn
                      refId="Package\Getcontracts\wrk_Srive_data.Inputs[OLE DB Destination Input].ExternalColumns[email]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="email" />
                    <externalMetadataColumn
                      refId="Package\Getcontracts\wrk_Srive_data.Inputs[OLE DB Destination Input].ExternalColumns[FullName]"
                      codePage="1252"
                      dataType="str"
                      length="100"
                      name="FullName" />
                    <externalMetadataColumn
                      refId="Package\Getcontracts\wrk_Srive_data.Inputs[OLE DB Destination Input].ExternalColumns[ReservationNumber]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="ReservationNumber" />
                    <externalMetadataColumn
                      refId="Package\Getcontracts\wrk_Srive_data.Inputs[OLE DB Destination Input].ExternalColumns[startlocation]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="startlocation" />
                    <externalMetadataColumn
                      refId="Package\Getcontracts\wrk_Srive_data.Inputs[OLE DB Destination Input].ExternalColumns[returnloaction]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="returnloaction" />
                    <externalMetadataColumn
                      refId="Package\Getcontracts\wrk_Srive_data.Inputs[OLE DB Destination Input].ExternalColumns[drivinglicense]"
                      codePage="1252"
                      dataType="str"
                      length="100"
                      name="drivinglicense" />
                    <externalMetadataColumn
                      refId="Package\Getcontracts\wrk_Srive_data.Inputs[OLE DB Destination Input].ExternalColumns[registration]"
                      codePage="1252"
                      dataType="str"
                      length="100"
                      name="registration" />
                    <externalMetadataColumn
                      refId="Package\Getcontracts\wrk_Srive_data.Inputs[OLE DB Destination Input].ExternalColumns[ctime]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="ctime" />
                    <externalMetadataColumn
                      refId="Package\Getcontracts\wrk_Srive_data.Inputs[OLE DB Destination Input].ExternalColumns[mtime]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="mtime" />
                    <externalMetadataColumn
                      refId="Package\Getcontracts\wrk_Srive_data.Inputs[OLE DB Destination Input].ExternalColumns[RentalAgreementNumber]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="RentalAgreementNumber" />
                    <externalMetadataColumn
                      refId="Package\Getcontracts\wrk_Srive_data.Inputs[OLE DB Destination Input].ExternalColumns[c4]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="c4" />
                    <externalMetadataColumn
                      refId="Package\Getcontracts\wrk_Srive_data.Inputs[OLE DB Destination Input].ExternalColumns[RowRecordedDateTime]"
                      dataType="dbTimeStamp2"
                      name="RowRecordedDateTime"
                      scale="7" />
                    <externalMetadataColumn
                      refId="Package\Getcontracts\wrk_Srive_data.Inputs[OLE DB Destination Input].ExternalColumns[lt_alm_ContractType]"
                      codePage="1252"
                      dataType="str"
                      length="100"
                      name="lt_alm_ContractType" />
                    <externalMetadataColumn
                      refId="Package\Getcontracts\wrk_Srive_data.Inputs[OLE DB Destination Input].ExternalColumns[lt_alm_c1Langtimaleiga]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="lt_alm_c1Langtimaleiga" />
                    <externalMetadataColumn
                      refId="Package\Getcontracts\wrk_Srive_data.Inputs[OLE DB Destination Input].ExternalColumns[lt_alm_c1Vetrarleig]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="lt_alm_c1Vetrarleig" />
                    <externalMetadataColumn
                      refId="Package\Getcontracts\wrk_Srive_data.Inputs[OLE DB Destination Input].ExternalColumns[lt_alm_c1Framlenging]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="lt_alm_c1Framlenging" />
                    <externalMetadataColumn
                      refId="Package\Getcontracts\wrk_Srive_data.Inputs[OLE DB Destination Input].ExternalColumns[lt_alm_c1Skipti]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="lt_alm_c1Skipti" />
                    <externalMetadataColumn
                      refId="Package\Getcontracts\wrk_Srive_data.Inputs[OLE DB Destination Input].ExternalColumns[lt_bill_argerd]"
                      codePage="1252"
                      dataType="str"
                      length="4"
                      name="lt_bill_argerd" />
                    <externalMetadataColumn
                      refId="Package\Getcontracts\wrk_Srive_data.Inputs[OLE DB Destination Input].ExternalColumns[lt_bill_tegund]"
                      codePage="1252"
                      dataType="str"
                      length="100"
                      name="lt_bill_tegund" />
                    <externalMetadataColumn
                      refId="Package\Getcontracts\wrk_Srive_data.Inputs[OLE DB Destination Input].ExternalColumns[lt_bill_leiguflokkur]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="lt_bill_leiguflokkur" />
                    <externalMetadataColumn
                      refId="Package\Getcontracts\wrk_Srive_data.Inputs[OLE DB Destination Input].ExternalColumns[lt_langtima_samningsnumer]"
                      codePage="1252"
                      dataType="str"
                      length="100"
                      name="lt_langtima_samningsnumer" />
                    <externalMetadataColumn
                      refId="Package\Getcontracts\wrk_Srive_data.Inputs[OLE DB Destination Input].ExternalColumns[optionalServicesNotes]"
                      codePage="1252"
                      dataType="text"
                      name="optionalServicesNotes" />
                    <externalMetadataColumn
                      refId="Package\Getcontracts\wrk_Srive_data.Inputs[OLE DB Destination Input].ExternalColumns[notes]"
                      codePage="1252"
                      dataType="text"
                      name="notes" />
                    <externalMetadataColumn
                      refId="Package\Getcontracts\wrk_Srive_data.Inputs[OLE DB Destination Input].ExternalColumns[lt_alm_undirb_samnings]"
                      codePage="1252"
                      dataType="str"
                      length="100"
                      name="lt_alm_undirb_samnings" />
                    <externalMetadataColumn
                      refId="Package\Getcontracts\wrk_Srive_data.Inputs[OLE DB Destination Input].ExternalColumns[lt_alm_heimili]"
                      codePage="1252"
                      dataType="str"
                      length="100"
                      name="lt_alm_heimili" />
                    <externalMetadataColumn
                      refId="Package\Getcontracts\wrk_Srive_data.Inputs[OLE DB Destination Input].ExternalColumns[lt_alm_staður]"
                      codePage="1252"
                      dataType="str"
                      length="100"
                      name="lt_alm_staður" />
                    <externalMetadataColumn
                      refId="Package\Getcontracts\wrk_Srive_data.Inputs[OLE DB Destination Input].ExternalColumns[lt_alm_heimasími]"
                      codePage="1252"
                      dataType="str"
                      length="100"
                      name="lt_alm_heimasími" />
                    <externalMetadataColumn
                      refId="Package\Getcontracts\wrk_Srive_data.Inputs[OLE DB Destination Input].ExternalColumns[lt_alm_farsími]"
                      codePage="1252"
                      dataType="str"
                      length="100"
                      name="lt_alm_farsími" />
                    <externalMetadataColumn
                      refId="Package\Getcontracts\wrk_Srive_data.Inputs[OLE DB Destination Input].ExternalColumns[lt_alm_kennitala]"
                      codePage="1252"
                      dataType="str"
                      length="100"
                      name="lt_alm_kennitala" />
                    <externalMetadataColumn
                      refId="Package\Getcontracts\wrk_Srive_data.Inputs[OLE DB Destination Input].ExternalColumns[lt_lokadags]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="lt_lokadags" />
                    <externalMetadataColumn
                      refId="Package\Getcontracts\wrk_Srive_data.Inputs[OLE DB Destination Input].ExternalColumns[lt_afh_dags]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="lt_afh_dags" />
                    <externalMetadataColumn
                      refId="Package\Getcontracts\wrk_Srive_data.Inputs[OLE DB Destination Input].ExternalColumns[lt_opt_nagladekk]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="lt_opt_nagladekk" />
                    <externalMetadataColumn
                      refId="Package\Getcontracts\wrk_Srive_data.Inputs[OLE DB Destination Input].ExternalColumns[lt_eldra_samningsnumer]"
                      codePage="1252"
                      dataType="str"
                      length="100"
                      name="lt_eldra_samningsnumer" />
                    <externalMetadataColumn
                      refId="Package\Getcontracts\wrk_Srive_data.Inputs[OLE DB Destination Input].ExternalColumns[lt_verd_pr_man]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="lt_verd_pr_man" />
                    <externalMetadataColumn
                      refId="Package\Getcontracts\wrk_Srive_data.Inputs[OLE DB Destination Input].ExternalColumns[lt_trygging_pr_man]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="lt_trygging_pr_man" />
                    <externalMetadataColumn
                      refId="Package\Getcontracts\wrk_Srive_data.Inputs[OLE DB Destination Input].ExternalColumns[lt_verd_pr_km_umfr]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="lt_verd_pr_km_umfr" />
                    <externalMetadataColumn
                      refId="Package\Getcontracts\wrk_Srive_data.Inputs[OLE DB Destination Input].ExternalColumns[lt_tryggingafe]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="lt_tryggingafe" />
                    <externalMetadataColumn
                      refId="Package\Getcontracts\wrk_Srive_data.Inputs[OLE DB Destination Input].ExternalColumns[lt_innifalinn_akstur]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="lt_innifalinn_akstur" />
                    <externalMetadataColumn
                      refId="Package\Getcontracts\wrk_Srive_data.Inputs[OLE DB Destination Input].ExternalColumns[lt_innifalinn_akstur_timabil]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="lt_innifalinn_akstur_timabil" />
                    <externalMetadataColumn
                      refId="Package\Getcontracts\wrk_Srive_data.Inputs[OLE DB Destination Input].ExternalColumns[lt_fyrirfram_greidd_leiga]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="lt_fyrirfram_greidd_leiga" />
                    <externalMetadataColumn
                      refId="Package\Getcontracts\wrk_Srive_data.Inputs[OLE DB Destination Input].ExternalColumns[lt_bill_next_service_km]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="lt_bill_next_service_km" />
                    <externalMetadataColumn
                      refId="Package\Getcontracts\wrk_Srive_data.Inputs[OLE DB Destination Input].ExternalColumns[lt_bila_skipti_ja]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="lt_bila_skipti_ja" />
                    <externalMetadataColumn
                      refId="Package\Getcontracts\wrk_Srive_data.Inputs[OLE DB Destination Input].ExternalColumns[lt_bila_skipti_nei]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="lt_bila_skipti_nei" />
                    <externalMetadataColumn
                      refId="Package\Getcontracts\wrk_Srive_data.Inputs[OLE DB Destination Input].ExternalColumns[lt_nagladekk_ja]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="lt_nagladekk_ja" />
                    <externalMetadataColumn
                      refId="Package\Getcontracts\wrk_Srive_data.Inputs[OLE DB Destination Input].ExternalColumns[lt_nagladekk_nei]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="lt_nagladekk_nei" />
                    <externalMetadataColumn
                      refId="Package\Getcontracts\wrk_Srive_data.Inputs[OLE DB Destination Input].ExternalColumns[lt_tengiliður]"
                      codePage="1252"
                      dataType="str"
                      length="100"
                      name="lt_tengiliður" />
                    <externalMetadataColumn
                      refId="Package\Getcontracts\wrk_Srive_data.Inputs[OLE DB Destination Input].ExternalColumns[in_km]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="in_km" />
                    <externalMetadataColumn
                      refId="Package\Getcontracts\wrk_Srive_data.Inputs[OLE DB Destination Input].ExternalColumns[vehicleType]"
                      codePage="1252"
                      dataType="str"
                      length="100"
                      name="vehicleType" />
                    <externalMetadataColumn
                      refId="Package\Getcontracts\wrk_Srive_data.Inputs[OLE DB Destination Input].ExternalColumns[overflow]"
                      codePage="1252"
                      dataType="text"
                      name="overflow" />
                    <externalMetadataColumn
                      refId="Package\Getcontracts\wrk_Srive_data.Inputs[OLE DB Destination Input].ExternalColumns[lt_vinnusimi]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="lt_vinnusimi" />
                    <externalMetadataColumn
                      refId="Package\Getcontracts\wrk_Srive_data.Inputs[OLE DB Destination Input].ExternalColumns[cust_address]"
                      codePage="1252"
                      dataType="str"
                      length="2000"
                      name="cust_address" />
                    <externalMetadataColumn
                      refId="Package\Getcontracts\wrk_Srive_data.Inputs[OLE DB Destination Input].ExternalColumns[status]"
                      codePage="1252"
                      dataType="str"
                      length="20"
                      name="status" />
                    <externalMetadataColumn
                      refId="Package\Getcontracts\wrk_Srive_data.Inputs[OLE DB Destination Input].ExternalColumns[consent_special_offer_question]"
                      codePage="1252"
                      dataType="str"
                      length="200"
                      name="consent_special_offer_question" />
                    <externalMetadataColumn
                      refId="Package\Getcontracts\wrk_Srive_data.Inputs[OLE DB Destination Input].ExternalColumns[consent_special_offer_reply]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="consent_special_offer_reply" />
                    <externalMetadataColumn
                      refId="Package\Getcontracts\wrk_Srive_data.Inputs[OLE DB Destination Input].ExternalColumns[consent_other_offer_question]"
                      codePage="1252"
                      dataType="str"
                      length="200"
                      name="consent_other_offer_question" />
                    <externalMetadataColumn
                      refId="Package\Getcontracts\wrk_Srive_data.Inputs[OLE DB Destination Input].ExternalColumns[consent_other_offer_reply]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="consent_other_offer_reply" />
                    <externalMetadataColumn
                      refId="Package\Getcontracts\wrk_Srive_data.Inputs[OLE DB Destination Input].ExternalColumns[document]"
                      dataType="nText"
                      name="document" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Getcontracts\wrk_Srive_data.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\Getcontracts\wrk_Srive_data.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Getcontracts\wrk_Srive_data.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Getcontracts\wrk_Srive_data.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Getcontracts\wrk_Srive_data.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Getcontracts\wrk_Srive_data.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\Getcontracts.Paths[Contracts]"
              endId="Package\Getcontracts\wrk_Srive_data.Inputs[OLE DB Destination Input]"
              name="Contracts"
              startId="Package\Getcontracts\get Scripe contracts from web (rest).Outputs[Contracts]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Getcontracts full"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:Disabled="True"
      DTS:DTSID="{1A6ADEAF-11A2-461E-9316-B356B8B0CC07}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:MaxErrorCount="1000"
      DTS:ObjectName="Getcontracts full"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server v10; (C) 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables>
        <DTS:Variable
          DTS:CreationName=""
          DTS:DTSID="{B6806C7E-D82A-43DC-A44A-6B80DE69DD07}"
          DTS:IncludeInDebugDump="6789"
          DTS:Namespace="User"
          DTS:ObjectName="rows">
          <DTS:VariableValue
            DTS:DataType="3">100</DTS:VariableValue>
        </DTS:Variable>
      </DTS:Variables>
      <DTS:ObjectData>
        <pipeline
          BLOBTempStoragePath=""
          bufferTempStoragePath=""
          version="1">
          <components>
            <component
              refId="Package\Getcontracts full\get Scripe contracts from web (rest)"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="Executes a custom script.;Microsoft Corporation; Microsoft SqlServer v10; © 2007 Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="Executes a custom script."
              name="get Scripe contracts from web (rest)"
              version="11">
              <properties>
                <property
                  dataType="System.String"
                  description="Stores the source code of the component"
                  isArray="true"
                  name="SourceCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="30">
                    <arrayElement
                      dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public ContractsBuffer ContractsBuffer;

    public virtual void FinishOutputs()
    {
    }

    private void MarkOutputsFinished()
    {

        if (null != ContractsBuffer)
        {
            ContractsBuffer.SetEndOfRowset();
            ContractsBuffer = null;
        }

    }

    public override void PrimeOutput(int Outputs, int[] OutputIDs, PipelineBuffer[] Buffers, OutputNameMap OutputMap)
    {
       for(int Idx = 0; Idx < Outputs; Idx++)
       {
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"Contracts"))
            {
                ContractsBuffer = new ContractsBuffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
        }

        CreateNewOutputRows();

        FinishOutputs();
        MarkOutputsFinished();

    }

    public virtual void CreateNewOutputRows()
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public Int32 fullLoad
    {
        get
        {
            return (Int32)(ParentComponent.ReadOnlyVariables["fullLoad"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public Int32 getMaxNorows
    {
        get
        {
            return (Int32)(ParentComponent.ReadOnlyVariables["getMaxNorows"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public Int32 getNoRows
    {
        get
        {
            return (Int32)(ParentComponent.ReadOnlyVariables["getNoRows"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String MaxDocID
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["MaxDocID"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//Dim myMetadata as IDTSComponentMetaData100
//myMetaData = Me.ComponentMetaData
//myMetaData.FireError(...)
//this.ComponentMetaData.FireError(0, "myScriptComponent", "An error occurred: " + e.Message, "", 0, out pbCancel);
//ComponentMetaData.FireInformation(0, "<SubComponentName>", "<Message>", "", 0, true)


/* Microsoft SQL Server Integration Services Script Component
*  Write scripts using Microsoft Visual C# 2008.
*  ScriptMain is the entry point class of the script.*/

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;  
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
using System.Net;
using System.IO;
using System.Windows.Forms;
using System.Web;
using System.Web.Script.Serialization;
using System.Collections.Generic;
//using Newtonsoft.Json;

[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{

     // Some examples:
 
            
    public int GetNumberOfRows =10 ;
    IDTSComponentMetaData100 compMetadataGobal ;
        //compMetadata.FireError(1, "Error Getting Data From Webservice!", errorMsg, "", 0, out fail);        
    public override void PreExecute()
    {
        base.PreExecute();
                
        /*
          Add your code here for preprocessing or remove if not needed
        */
    }

    public override void PostExecute()
    {
        base.PostExecute();
        /*
          Add your code here for postprocessing or remove if not needed
          You can set read/write variables here, for example:
          Variables.MyIntVar = 100
        */
    }

    // --
public override void CreateNewOutputRows()
    {
        try
        {
            Contract ctrct;
            ScriveDocuments outPutDocs ;
            int iDocsOffset = 0;
            int iMaxDocs = 100;
            int iDocsRead =100;
            int iDocNo = 0;
            int iDocNoLoop = 0;

            int iFullLoad = 1;
            int iGetTotalMax =100;

            iMaxDocs = Variables.getNoRows; // ("User::FileName").Value.ToString();

            iGetTotalMax = Variables.getMaxNorows;
            //iFullLoad = Variables.fullLoad;
            //iDocsRead  =  Variable.
            compMetadataGobal = this.ComponentMetaData;
            iFullLoad = Variables.fullLoad;
            // Read an SSIS package parameter and sets its value in an SSIS variable            
            //--
            iDocNo = iDocsOffset; // 
            while (((iDocNo != iDocsRead) && iFullLoad == 1) || ((iFullLoad == 0) && iGetTotalMax > iDocNoLoop))
            {               

                outPutDocs = getWebServiceResult(iDocsOffset, iMaxDocs, out iDocsRead);
                // private ScriveDocuments  getWebServiceResult(int ipOffset , int ipMaxDocs ,out int ipDocsRead)
                // Read an SSIS package parameter and sets its value in an SSIS variable

                //var restResults = Newtonsoft.Json.JsonConvert.DeserializeObject<ScriveDocuments[]>(outPutDocs);
      
                foreach (var d in outPutDocs.documents)
                {

                    iDocNo++; // add 1
                    iDocNoLoop++;
                    ContractsBuffer.AddRow();
                    //Console.WriteLine("Document  ID = {0}, Name={1}", d.id, d.title);
                    ctrct = new Contract();
                    ctrct.id = d.id;
                    ContractsBuffer.ID = (ulong)Convert.ToInt64(d.id);
                    ctrct.title = d.title;
                    ContractsBuffer.Title = d.title;
                    ContractsBuffer.ctime = Trunc(Convert.ToString(d.ctime),50);
                    ContractsBuffer.mtime = Trunc(Convert.ToString(d.mtime),50);
                                        
                    foreach (var par in d.parties)
                    {
                        if (par.is_signatory == true)
                        {
                            foreach (var sig in par.fields)
                            {
                                if (sig.type == "name" && sig.order == 1)
                                {
                                    ContractsBuffer.FirstName = sig.value;
                                    //myStr.Substring(0, THRESHOLD) 
                                }
                                if ((sig.type == "name") && sig.order == 2)
                                {
                                    ContractsBuffer.LastName = sig.value;
                                }
                                if (sig.type == "email") { ContractsBuffer.email = Trunc(sig.value, 50); }
                                if (sig.name == "Name") { ContractsBuffer.FullName = Trunc(sig.value, 50); }
                                if (sig.name == "RA") { ContractsBuffer.RentalAgreement = Trunc(sig.value, 50); }
                                if (sig.name == "reservationnumber") { ContractsBuffer.ReservationNumber = Trunc(sig.value, 50); }
                                if (sig.name == "startlocation") { ContractsBuffer.startlocation = Trunc(sig.value, 50); }
                                if (sig.name == "returnlocation") { ContractsBuffer.returnloaction = Trunc(sig.value, 50); }
                                if (sig.name == "drivinglicense") { ContractsBuffer.drivinglicense = Trunc(sig.value, 50); }
                                if (sig.name == "registration") { ContractsBuffer.registration = Trunc(sig.value, 50); }
                                // type=name as FirstName 
                                // type=name as LastName 
                                // type=email as email                                                                
                                // sig.name = Name -> sig.Value > FullName 
                                // sig.name = RA -> sig.value  -> ReservationNumber 
                                // sig.name = startlocation -> FullName 
                                // sig.name = returnlocation -> FullName 
                                // sig.name = drivinglicense -> FullName 
                                // sig.name = registration -> FullName 
                                // Console.WriteLine("------- FieldName = {0}, FieldValue={1}, type = {2}, oblig ={3}", sig.name, sig.value,sig.type,sig.is_obligatory);
                            }
                        }
                    }                    
                    Console.WriteLine(ctrct.ToString());
                }
                // iDocsOffset = iDocsRead;                
                iDocsOffset = iDocNo;                
            }            
        }
        catch (Exception e)
        {
            failComponent(e.ToString());
        }

    }
    


public string Trunc(string myStr, int THRESHOLD)
{
    if (myStr.Length > THRESHOLD)
        return myStr.Substring(0, THRESHOLD);
    return myStr;
}
    private ScriveDocuments  getWebServiceResult(int ipOffset , int ipMaxDocs ,out int ipDocsRead)
    { 
    //    int iLoop =0;
        bool fail = false;
        String st = @"oauth_signature_method = ""PLAINTEXT"",oauth_consumer_key = ""2978cd5ce798603d_3019"",oauth_token = ""3ac7a5c5b050501d_6475"",oauth_signature = ""b0bcb0133bc3f689&84d0789982116174""";
    
        //GET                    /api/v2/documents/list?offset=3000&max=2000&sorting=%5B%5D&_=1484866229639 HTTP/1.1
        //GET https://scrive.com/api/v2/documents/list?offset=0&max=2&sorting=%5B%5D&filter=%5B%5D&_=1485166864837 HTTP/1.1

        //GET https://scrive.com/api/v2/documents/list?offset=3000&max=2000
//        GET /api/v2/documents/list?offset=3000&max=2000&sorting=%5B%5D&_=1484866229639 HTTP/1.1
        //String stt = @"""PLAINTEXT"",oauth_consumer_key = ""2978cd5ce798603d_3019"",oauth_token = ""3ac7a5c5b050501d_6475"",oauth_signature = ""b0bcb0133bc3f689&84d0789982116174""";
        //""authorization: oauth_signature_method = "PLAINTEXT",oauth_consumer_key = "2978cd5ce798603d_3019",oauth_token = "3ac7a5c5b050501d_6475",oauth_signature = "b0bcb0133bc3f689&84d0789982116174"
        
        Uri wUriAdress = null;
        //GET https://scrive.com/api/v2/documents/list?offset=3000&max=2000
        //wUriAdress = new Uri("https://scrive.com/api/v2/documents/list?max=" + Convert.ToString(ipMaxDocs));
        //wUriAdress = new Uri("https://scrive.com/api/v2/documents/list?offset=" + Convert.ToString(ipOffset) + "&max=" + Convert.ToString(ipMaxDocs) + "&sorting=%5B%5D&filter=%5B%5D");
        wUriAdress = new Uri("https://scrive.com/api/v2/documents/list?offset=" + Convert.ToString(ipOffset) + "&max=" + Convert.ToString(ipMaxDocs) + "&sorting=%5B%5D&filter=%5B%5D");
        //
        compMetadataGobal.FireError(1, "Web string : " + wUriAdress, "", "", 0, out fail);                

        // Create the web request
        HttpWebRequest request = WebRequest.Create(wUriAdress ) as HttpWebRequest;
        // request.ContentType = "";
        // Accept: "application/json, application/xml, text/json, text/x-json, text/javascript, text/xml"
        
        request.Method = "GET"; 
        //request.Headers.Add("authorization", st);

        request.Headers.Add("Authorization", st);
        request.PreAuthenticate = true;
        request.AllowWriteStreamBuffering = true;
        request.Timeout = 190000;                
//        MessageBox.Show("Komst hingad 2"); 
        
        HttpWebResponse httpWResp = request.GetResponse() as HttpWebResponse;
        ScriveDocuments restResults = null;
        try
        {
            if (httpWResp.StatusCode == HttpStatusCode.OK)
            {
                Stream responseStream = httpWResp.GetResponseStream();
                string jsonString =null;

                using (StreamReader reader = new StreamReader(responseStream))
                { //   reader.
                    
                    jsonString = reader.ReadToEnd();
                    reader.Close();
                    reader.Dispose();
                }
                
    //            MessageBox.Show("Eftir reader: ", jsonString.ToString());
                JavaScriptSerializer sr = new JavaScriptSerializer();
                sr.MaxJsonLength = 500000000; 
                restResults = sr.Deserialize < ScriveDocuments > (jsonString);                
                compMetadataGobal = this.ComponentMetaData;                
                ipDocsRead = restResults.total_matching;
                // compMetadataGobal.FireError(1, "Number of documents!" + Convert.ToInt32(restResults.total_matching), "", "", 0, out fail);        
                // var content = response.Content;
                // restResults = Newtonsoft.Json.JsonConvert.DeserializeObject<ScriveDocuments>(jsonString);
                //var restResults = Newtonsoft.Json.JsonConvert.DeserializeObject<ListResults>(content);                                                
            }

            else
            {
                failComponent(httpWResp.StatusCode.ToString());

            }
        }
        catch (Exception e)
        {
            failComponent(e.ToString());
        }
        ipDocsRead = restResults.total_matching;
        return restResults;
    }

    private void failComponent(string errorMsg)
    {
        bool fail = false;
        IDTSComponentMetaData100 compMetadata = this.ComponentMetaData;
        //compMetadata.FireError(1, "Error Getting Data From Webservice!", errorMsg, "", 0, out fail);        
    }
}

public class Field
{
    public string type { get; set; }
    public int order { get; set; }
    public string value { get; set; }
    public string name { get; set; }
}

public class Party
{
    public string id { get; set; }
    public string user_id { get; set; }
    public bool is_author { get; set; }
    public bool is_signatory { get; set; }
    public IList<Field> fields { get; set; }
    public object csv { get; set; }
}

public class Document
{
    public string id { get; set; }
    public string title { get; set; }
    public IList<Party> parties { get; set; }
    public DateTime ctime { get; set; }
    public DateTime mtime { get; set; }
    public string status { get; set; }
    public string lang { get; set; }
    public string timezone { get; set; }
}

public class ScriveDocuments
{
    public int total_matching { get; set; }
    public List<Document> documents { get; set; }
}

    public class    Contract 
    {
        public string id { get; set; }
        public string title { get; set; }
        public DateTime ctime { get; set; }
        public DateTime mtime { get; set; }                
        public string status { get; set; }
        public string firstName { get; set; }
        public string lastName{ get; set; }
        public string email{ get; set; }
        public string fullName{ get; set; }
        public string reservationNumber { get; set; }
        public string RA { get; set; }
        public string startLocation { get; set; }
        public string returnLocation { get; set; }
        public string drivinglicense { get; set; }
        public string registration { get; set; }
        // type=name as FirstName 
        // type=name as LastName 
        // type=email as email                                                                
        // sig.name = Name -> sig.Value > FullName 
        // sig.name = RA -> sig.value  -> reservationNumber 
        // sig.name = startlocation -> Startlocation 
        // sig.name = returnlocation -> Returnlocation 
        // sig.name = drivinglicense -> FullName 
        // sig.name = registration -> FullName 

    }

    
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class ContractsBuffer: ScriptBuffer

{
    public ContractsBuffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public UInt64 ID
    {
        set
        {
            this[0] = value;
        }
    }
    public bool ID_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Title
    {
        set
        {
            this[1] = value;
        }
    }
    public bool Title_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String FirstName
    {
        set
        {
            this[2] = value;
        }
    }
    public bool FirstName_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String LastName
    {
        set
        {
            this[3] = value;
        }
    }
    public bool LastName_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String email
    {
        set
        {
            this[4] = value;
        }
    }
    public bool email_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(4);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String FullName
    {
        set
        {
            this[5] = value;
        }
    }
    public bool FullName_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(5);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String RentalAgreement
    {
        set
        {
            this[6] = value;
        }
    }
    public bool RentalAgreement_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(6);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String startlocation
    {
        set
        {
            this[7] = value;
        }
    }
    public bool startlocation_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(7);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String returnloaction
    {
        set
        {
            this[8] = value;
        }
    }
    public bool returnloaction_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(8);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String drivinglicense
    {
        set
        {
            this[9] = value;
        }
    }
    public bool drivinglicense_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(9);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String registration
    {
        set
        {
            this[10] = value;
        }
    }
    public bool registration_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(10);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String ctime
    {
        set
        {
            this[11] = value;
        }
    }
    public bool ctime_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(11);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String mtime
    {
        set
        {
            this[12] = value;
        }
    }
    public bool mtime_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(12);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String ReservationNumber
    {
        set
        {
            this[13] = value;
        }
    }
    public bool ReservationNumber_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(13);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String c4
    {
        set
        {
            this[14] = value;
        }
    }
    public bool c4_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(14);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[sc_000660d9410c417a856faecd4fe023af.csproj]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-16"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <!-- This section defines project-level properties.

       Configuration - Specifies whether the default configuration is Release or Debug.
       Platform - Specifies what CPU the output of this project can run on.
       OutputType - Must be "Library" for VSTA.
       NoStandardLibraries - Set to "false" for VSTA.
       RootNamespace - In C#, this specifies the namespace given to new files.
                       In Visual Basic, all objects are wrapped in this namespace at runtime.
       AssemblyName - Name of the output assembly.
  -->
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <OutputType>Library</OutputType>
    <NoStandardLibraries>false</NoStandardLibraries>
    <RootNamespace>SC_000660d9410c417a856faecd4fe023af.csproj</RootNamespace>
    <AssemblyName>SC_C7FF7785FC64486092B121FA6A80C4D7</AssemblyName>
    <ProjectGuid>{12EFDF6A-DCFD-43AD-8C54-135E7B4EADD5}</ProjectGuid>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <TargetFrameworkSubset>Full</TargetFrameworkSubset>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <!-- This section defines properties that are set when the "Debug" configuration is
       selected.

       DebugSymbols - If true, create symbols (.pdb). If false, do not create symbols.
       Optimize - If true, optimize the build output. If false, do not optimize.
       OutputPath - Output path of the project relative to the project file.
       EnableUnmanagedDebugging - If true, starting the debugger will attach both managed and unmanaged debuggers.
       DefineConstants - Constants defined for the preprocessor.
       Warning Level - Warning level for the compiler.
  -->
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <!-- This section defines properties that are set when the "Release" configuration is
       selected.

       DebugSymbols - If true, create symbols (.pdb). If false, do not create symbols.
       Optimize - If true, optimize the build output. If false, do not optimize.
       OutputPath - Output path of the project relative to the project file.
       EnableUnmanagedDebugging - If true, starting the debugger will attach both managed and unmanaged debuggers.
       DefineConstants - Constants defined for the preprocessor.
       Warning Level - Warning level for the compiler.
  -->
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <!-- This section enables pre- and post-build steps. However,
       it is recommended that MSBuild tasks be used instead of these properties.
  -->
  <PropertyGroup>
    <PreBuildEvent></PreBuildEvent>
    <PostBuildEvent></PostBuildEvent>
  </PropertyGroup>
  <!-- This sections specifies references for the project. -->
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Core">
      <RequiredTargetFramework>3.5</RequiredTargetFramework>
    </Reference>
    <Reference Include="System.Data" />
    <Reference Include="System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>E:\Vinna\Alp\Scrive-docs\rest\Extensions\System.Web.Extensions.dll</HintPath>
      <RequiredTargetFramework>3.5</RequiredTargetFramework>
    </Reference>
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=14.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91">
      <Private>False</Private>
    </Reference>
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=14.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91">
      <Private>False</Private>
    </Reference>
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=14.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91">
      <Private>False</Private>
    </Reference>
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=14.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91">
      <Private>False</Private>
    </Reference>
  </ItemGroup>
  <!-- This section defines the user source files that are part of the
       project.

       Compile - Specifies a source file to compile.
       EmbeddedResource - Specifies a .resx file for embedded resources.
       None - Specifies a file that is not to be passed to the compiler (for instance,
              a text file or XML file).
       AppDesigner - Specifies the directory where the application properties files can
                     be found.
  -->
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
    <Compile Include="main.cs" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <!-- Include the default configuration information and metadata files for the add-in.
         These files are copied to the build output directory when the project is
         built, and the path to the configuration file is passed to the add-in on the command
         line when debugging.
    -->
  </ItemGroup>
  <ItemGroup>
    <WCFMetadata Include="Service References\" />
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="SSIS_ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC140</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_000660d9410c417a856faecd4fe023af.csproj")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_000660d9410c417a856faecd4fe023af.csproj")]
[assembly: AssemblyCopyright("Copyright @  2017")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Project]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>sc_000660d9410c417a856faecd4fe023af</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>sc_000660d9410c417a856faecd4fe023af</msb:DisplayName>
    <msb:ProjectId>{1B2E2C29-0B3A-4CF3-BCC3-F6B5879A4B38}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="sc_000660d9410c417a856faecd4fe023af.csproj" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="BufferWrapper.cs" />
    <msb:File Include="main.cs" />
    <msb:File Include="ComponentWrapper.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.Designer.cs" />
  </msb:ItemGroup>
</c:Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "SC_000660d9410c417a856faecd4fe023af.csproj.Properties.Settings.get_Default():SC_000660d9410c417a856faecd4fe023af.csproj.Properties.Sett" +
    "ings")]

namespace SC_000660d9410c417a856faecd4fe023af.csproj.Properties
{


    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase
    {

        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();

        public static Settings Default
        {
            get
            {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.8745
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SC_000660d9410c417a856faecd4fe023af.csproj.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "2.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_000660d9410c417a856faecd4fe023af.csproj.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Stores the binary representation of the component"
                  isArray="true"
                  name="BinaryCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="0" />
                </property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                  name="VSTAProjectName"
                  typeConverter="NOTBROWSABLE">SC_c7ff7785fc64486092b121fa6a80c4d7</property>
                <property
                  dataType="System.String"
                  description="Specifies the programming language used by the script."
                  name="ScriptLanguage"
                  typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read-only variables."
                  name="ReadOnlyVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg">User::fullLoad,User::getMaxNorows,User::getNoRows,User::MaxDocID</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read/write variables."
                  name="ReadWriteVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="List of breakpoints present on the script."
                  isArray="true"
                  name="BreakpointCollection"
                  typeConverter="NOTBROWSABLE">
                  <arrayElements
                    arrayElementCount="0" />
                </property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataChecksum140"
                  typeConverter="NOTBROWSABLE">C2</property>
              </properties>
              <outputs>
                <output
                  refId="Package\Getcontracts full\get Scripe contracts from web (rest).Outputs[Contracts]"
                  description="Contract documents from scrive"
                  hasSideEffects="true"
                  name="Contracts">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Getcontracts full\get Scripe contracts from web (rest).Outputs[Contracts].Columns[ID]"
                      dataType="ui8"
                      lineageId="Package\Getcontracts full\get Scripe contracts from web (rest).Outputs[Contracts].Columns[ID]"
                      name="ID" />
                    <outputColumn
                      refId="Package\Getcontracts full\get Scripe contracts from web (rest).Outputs[Contracts].Columns[Title]"
                      codePage="1252"
                      dataType="str"
                      length="100"
                      lineageId="Package\Getcontracts full\get Scripe contracts from web (rest).Outputs[Contracts].Columns[Title]"
                      name="Title" />
                    <outputColumn
                      refId="Package\Getcontracts full\get Scripe contracts from web (rest).Outputs[Contracts].Columns[FirstName]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Getcontracts full\get Scripe contracts from web (rest).Outputs[Contracts].Columns[FirstName]"
                      name="FirstName" />
                    <outputColumn
                      refId="Package\Getcontracts full\get Scripe contracts from web (rest).Outputs[Contracts].Columns[LastName]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Getcontracts full\get Scripe contracts from web (rest).Outputs[Contracts].Columns[LastName]"
                      name="LastName" />
                    <outputColumn
                      refId="Package\Getcontracts full\get Scripe contracts from web (rest).Outputs[Contracts].Columns[email]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Getcontracts full\get Scripe contracts from web (rest).Outputs[Contracts].Columns[email]"
                      name="email" />
                    <outputColumn
                      refId="Package\Getcontracts full\get Scripe contracts from web (rest).Outputs[Contracts].Columns[FullName]"
                      codePage="1252"
                      dataType="str"
                      length="100"
                      lineageId="Package\Getcontracts full\get Scripe contracts from web (rest).Outputs[Contracts].Columns[FullName]"
                      name="FullName" />
                    <outputColumn
                      refId="Package\Getcontracts full\get Scripe contracts from web (rest).Outputs[Contracts].Columns[RentalAgreement]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Getcontracts full\get Scripe contracts from web (rest).Outputs[Contracts].Columns[RentalAgreement]"
                      name="RentalAgreement" />
                    <outputColumn
                      refId="Package\Getcontracts full\get Scripe contracts from web (rest).Outputs[Contracts].Columns[startlocation]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Getcontracts full\get Scripe contracts from web (rest).Outputs[Contracts].Columns[startlocation]"
                      name="startlocation" />
                    <outputColumn
                      refId="Package\Getcontracts full\get Scripe contracts from web (rest).Outputs[Contracts].Columns[returnloaction]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Getcontracts full\get Scripe contracts from web (rest).Outputs[Contracts].Columns[returnloaction]"
                      name="returnloaction" />
                    <outputColumn
                      refId="Package\Getcontracts full\get Scripe contracts from web (rest).Outputs[Contracts].Columns[drivinglicense]"
                      codePage="1252"
                      dataType="str"
                      length="100"
                      lineageId="Package\Getcontracts full\get Scripe contracts from web (rest).Outputs[Contracts].Columns[drivinglicense]"
                      name="drivinglicense" />
                    <outputColumn
                      refId="Package\Getcontracts full\get Scripe contracts from web (rest).Outputs[Contracts].Columns[registration]"
                      codePage="1252"
                      dataType="str"
                      length="100"
                      lineageId="Package\Getcontracts full\get Scripe contracts from web (rest).Outputs[Contracts].Columns[registration]"
                      name="registration" />
                    <outputColumn
                      refId="Package\Getcontracts full\get Scripe contracts from web (rest).Outputs[Contracts].Columns[ctime]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Getcontracts full\get Scripe contracts from web (rest).Outputs[Contracts].Columns[ctime]"
                      name="ctime" />
                    <outputColumn
                      refId="Package\Getcontracts full\get Scripe contracts from web (rest).Outputs[Contracts].Columns[mtime]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Getcontracts full\get Scripe contracts from web (rest).Outputs[Contracts].Columns[mtime]"
                      name="mtime" />
                    <outputColumn
                      refId="Package\Getcontracts full\get Scripe contracts from web (rest).Outputs[Contracts].Columns[ReservationNumber]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Getcontracts full\get Scripe contracts from web (rest).Outputs[Contracts].Columns[ReservationNumber]"
                      name="ReservationNumber" />
                    <outputColumn
                      refId="Package\Getcontracts full\get Scripe contracts from web (rest).Outputs[Contracts].Columns[c4]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Getcontracts full\get Scripe contracts from web (rest).Outputs[Contracts].Columns[c4]"
                      name="c4" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Getcontracts full\wrk RentalAgreements"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SqlServer v10; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="wrk RentalAgreements"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[wrk].[RentalContracts]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">3</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Getcontracts full\wrk RentalAgreements.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[LocalHost.flotaskjal]"
                  connectionManagerRefId="Package.ConnectionManagers[LocalHost.flotaskjal]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Getcontracts full\wrk RentalAgreements.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Getcontracts full\wrk RentalAgreements.Inputs[OLE DB Destination Input].Columns[Title]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="100"
                      cachedName="Title"
                      externalMetadataColumnId="Package\Getcontracts full\wrk RentalAgreements.Inputs[OLE DB Destination Input].ExternalColumns[Title]"
                      lineageId="Package\Getcontracts full\get Scripe contracts from web (rest).Outputs[Contracts].Columns[Title]" />
                    <inputColumn
                      refId="Package\Getcontracts full\wrk RentalAgreements.Inputs[OLE DB Destination Input].Columns[FirstName]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="FirstName"
                      externalMetadataColumnId="Package\Getcontracts full\wrk RentalAgreements.Inputs[OLE DB Destination Input].ExternalColumns[FirstName]"
                      lineageId="Package\Getcontracts full\get Scripe contracts from web (rest).Outputs[Contracts].Columns[FirstName]" />
                    <inputColumn
                      refId="Package\Getcontracts full\wrk RentalAgreements.Inputs[OLE DB Destination Input].Columns[LastName]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="LastName"
                      externalMetadataColumnId="Package\Getcontracts full\wrk RentalAgreements.Inputs[OLE DB Destination Input].ExternalColumns[LastName]"
                      lineageId="Package\Getcontracts full\get Scripe contracts from web (rest).Outputs[Contracts].Columns[LastName]" />
                    <inputColumn
                      refId="Package\Getcontracts full\wrk RentalAgreements.Inputs[OLE DB Destination Input].Columns[email]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="email"
                      externalMetadataColumnId="Package\Getcontracts full\wrk RentalAgreements.Inputs[OLE DB Destination Input].ExternalColumns[email]"
                      lineageId="Package\Getcontracts full\get Scripe contracts from web (rest).Outputs[Contracts].Columns[email]" />
                    <inputColumn
                      refId="Package\Getcontracts full\wrk RentalAgreements.Inputs[OLE DB Destination Input].Columns[FullName]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="100"
                      cachedName="FullName"
                      externalMetadataColumnId="Package\Getcontracts full\wrk RentalAgreements.Inputs[OLE DB Destination Input].ExternalColumns[FullName]"
                      lineageId="Package\Getcontracts full\get Scripe contracts from web (rest).Outputs[Contracts].Columns[FullName]" />
                    <inputColumn
                      refId="Package\Getcontracts full\wrk RentalAgreements.Inputs[OLE DB Destination Input].Columns[startlocation]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="startlocation"
                      externalMetadataColumnId="Package\Getcontracts full\wrk RentalAgreements.Inputs[OLE DB Destination Input].ExternalColumns[startlocation]"
                      lineageId="Package\Getcontracts full\get Scripe contracts from web (rest).Outputs[Contracts].Columns[startlocation]" />
                    <inputColumn
                      refId="Package\Getcontracts full\wrk RentalAgreements.Inputs[OLE DB Destination Input].Columns[returnloaction]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="returnloaction"
                      externalMetadataColumnId="Package\Getcontracts full\wrk RentalAgreements.Inputs[OLE DB Destination Input].ExternalColumns[returnloaction]"
                      lineageId="Package\Getcontracts full\get Scripe contracts from web (rest).Outputs[Contracts].Columns[returnloaction]" />
                    <inputColumn
                      refId="Package\Getcontracts full\wrk RentalAgreements.Inputs[OLE DB Destination Input].Columns[drivinglicense]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="100"
                      cachedName="drivinglicense"
                      externalMetadataColumnId="Package\Getcontracts full\wrk RentalAgreements.Inputs[OLE DB Destination Input].ExternalColumns[drivinglicense]"
                      lineageId="Package\Getcontracts full\get Scripe contracts from web (rest).Outputs[Contracts].Columns[drivinglicense]" />
                    <inputColumn
                      refId="Package\Getcontracts full\wrk RentalAgreements.Inputs[OLE DB Destination Input].Columns[registration]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="100"
                      cachedName="registration"
                      externalMetadataColumnId="Package\Getcontracts full\wrk RentalAgreements.Inputs[OLE DB Destination Input].ExternalColumns[registration]"
                      lineageId="Package\Getcontracts full\get Scripe contracts from web (rest).Outputs[Contracts].Columns[registration]" />
                    <inputColumn
                      refId="Package\Getcontracts full\wrk RentalAgreements.Inputs[OLE DB Destination Input].Columns[ctime]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="ctime"
                      externalMetadataColumnId="Package\Getcontracts full\wrk RentalAgreements.Inputs[OLE DB Destination Input].ExternalColumns[ctime]"
                      lineageId="Package\Getcontracts full\get Scripe contracts from web (rest).Outputs[Contracts].Columns[ctime]" />
                    <inputColumn
                      refId="Package\Getcontracts full\wrk RentalAgreements.Inputs[OLE DB Destination Input].Columns[mtime]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="mtime"
                      externalMetadataColumnId="Package\Getcontracts full\wrk RentalAgreements.Inputs[OLE DB Destination Input].ExternalColumns[mtime]"
                      lineageId="Package\Getcontracts full\get Scripe contracts from web (rest).Outputs[Contracts].Columns[mtime]" />
                    <inputColumn
                      refId="Package\Getcontracts full\wrk RentalAgreements.Inputs[OLE DB Destination Input].Columns[ReservationNumber]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="ReservationNumber"
                      externalMetadataColumnId="Package\Getcontracts full\wrk RentalAgreements.Inputs[OLE DB Destination Input].ExternalColumns[ReservationNumber]"
                      lineageId="Package\Getcontracts full\get Scripe contracts from web (rest).Outputs[Contracts].Columns[ReservationNumber]" />
                    <inputColumn
                      refId="Package\Getcontracts full\wrk RentalAgreements.Inputs[OLE DB Destination Input].Columns[c4]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="c4"
                      externalMetadataColumnId="Package\Getcontracts full\wrk RentalAgreements.Inputs[OLE DB Destination Input].ExternalColumns[c4]"
                      lineageId="Package\Getcontracts full\get Scripe contracts from web (rest).Outputs[Contracts].Columns[c4]" />
                    <inputColumn
                      refId="Package\Getcontracts full\wrk RentalAgreements.Inputs[OLE DB Destination Input].Columns[ID]"
                      cachedDataType="ui8"
                      cachedName="ID"
                      externalMetadataColumnId="Package\Getcontracts full\wrk RentalAgreements.Inputs[OLE DB Destination Input].ExternalColumns[SignedContractID]"
                      lineageId="Package\Getcontracts full\get Scripe contracts from web (rest).Outputs[Contracts].Columns[ID]" />
                    <inputColumn
                      refId="Package\Getcontracts full\wrk RentalAgreements.Inputs[OLE DB Destination Input].Columns[RentalAgreement]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="RentalAgreement"
                      externalMetadataColumnId="Package\Getcontracts full\wrk RentalAgreements.Inputs[OLE DB Destination Input].ExternalColumns[RentalAgreementNumber]"
                      lineageId="Package\Getcontracts full\get Scripe contracts from web (rest).Outputs[Contracts].Columns[RentalAgreement]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Getcontracts full\wrk RentalAgreements.Inputs[OLE DB Destination Input].ExternalColumns[SignedContractID]"
                      dataType="i8"
                      name="SignedContractID" />
                    <externalMetadataColumn
                      refId="Package\Getcontracts full\wrk RentalAgreements.Inputs[OLE DB Destination Input].ExternalColumns[Title]"
                      codePage="1252"
                      dataType="str"
                      length="100"
                      name="Title" />
                    <externalMetadataColumn
                      refId="Package\Getcontracts full\wrk RentalAgreements.Inputs[OLE DB Destination Input].ExternalColumns[FirstName]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="FirstName" />
                    <externalMetadataColumn
                      refId="Package\Getcontracts full\wrk RentalAgreements.Inputs[OLE DB Destination Input].ExternalColumns[LastName]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="LastName" />
                    <externalMetadataColumn
                      refId="Package\Getcontracts full\wrk RentalAgreements.Inputs[OLE DB Destination Input].ExternalColumns[email]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="email" />
                    <externalMetadataColumn
                      refId="Package\Getcontracts full\wrk RentalAgreements.Inputs[OLE DB Destination Input].ExternalColumns[FullName]"
                      codePage="1252"
                      dataType="str"
                      length="100"
                      name="FullName" />
                    <externalMetadataColumn
                      refId="Package\Getcontracts full\wrk RentalAgreements.Inputs[OLE DB Destination Input].ExternalColumns[ReservationNumber]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="ReservationNumber" />
                    <externalMetadataColumn
                      refId="Package\Getcontracts full\wrk RentalAgreements.Inputs[OLE DB Destination Input].ExternalColumns[startlocation]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="startlocation" />
                    <externalMetadataColumn
                      refId="Package\Getcontracts full\wrk RentalAgreements.Inputs[OLE DB Destination Input].ExternalColumns[returnloaction]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="returnloaction" />
                    <externalMetadataColumn
                      refId="Package\Getcontracts full\wrk RentalAgreements.Inputs[OLE DB Destination Input].ExternalColumns[drivinglicense]"
                      codePage="1252"
                      dataType="str"
                      length="100"
                      name="drivinglicense" />
                    <externalMetadataColumn
                      refId="Package\Getcontracts full\wrk RentalAgreements.Inputs[OLE DB Destination Input].ExternalColumns[registration]"
                      codePage="1252"
                      dataType="str"
                      length="100"
                      name="registration" />
                    <externalMetadataColumn
                      refId="Package\Getcontracts full\wrk RentalAgreements.Inputs[OLE DB Destination Input].ExternalColumns[ctime]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="ctime" />
                    <externalMetadataColumn
                      refId="Package\Getcontracts full\wrk RentalAgreements.Inputs[OLE DB Destination Input].ExternalColumns[mtime]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="mtime" />
                    <externalMetadataColumn
                      refId="Package\Getcontracts full\wrk RentalAgreements.Inputs[OLE DB Destination Input].ExternalColumns[c4]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="c4" />
                    <externalMetadataColumn
                      refId="Package\Getcontracts full\wrk RentalAgreements.Inputs[OLE DB Destination Input].ExternalColumns[RowRecordedDateTime]"
                      dataType="dbTimeStamp2"
                      name="RowRecordedDateTime"
                      scale="7" />
                    <externalMetadataColumn
                      refId="Package\Getcontracts full\wrk RentalAgreements.Inputs[OLE DB Destination Input].ExternalColumns[RentalAgreementNumber]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="RentalAgreementNumber" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Getcontracts full\wrk RentalAgreements.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\Getcontracts full\wrk RentalAgreements.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Getcontracts full\wrk RentalAgreements.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Getcontracts full\wrk RentalAgreements.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Getcontracts full\wrk RentalAgreements.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Getcontracts full\wrk RentalAgreements.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\Getcontracts full.Paths[Contracts]"
              endId="Package\Getcontracts full\wrk RentalAgreements.Inputs[OLE DB Destination Input]"
              name="Contracts"
              startId="Package\Getcontracts full\get Scripe contracts from web (rest).Outputs[Contracts]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\getMaxDocID"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{FF121B78-9646-4EE5-8765-01018E8CE21B}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="getMaxDocID"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{EB8067AE-17DE-4C61-BD1C-165EB89382F4}"
          SQLTask:SqlStatementSource="select ?= max(SignedContractID) from stg.[RentalContracts_scrive]" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="0"
            SQLTask:DtsVariableName="User::MaxDocID"
            SQLTask:ParameterDirection="Output"
            SQLTask:DataType="129"
            SQLTask:ParameterSize="-1" />
        </SQLTask:SqlTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Merge new contracts"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{9e11e1be-5409-4e50-87e7-8aefd564a5ab}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Merge new contracts"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="1">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{EB8067AE-17DE-4C61-BD1C-165EB89382F4}"
          SQLTask:SqlStatementSource="etl.pop_RentalContracts_scrive" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\pop srive extra"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:Disabled="True"
      DTS:DTSID="{8E13289D-BCAB-4E8E-8F55-4B499F3C1D19}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="pop srive extra"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="3">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{EB8067AE-17DE-4C61-BD1C-165EB89382F4}"
          SQLTask:SqlStatementSource="exec popScriveData_other" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\popDimSignedContract"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:Disabled="True"
      DTS:DTSID="{EE058F28-BD3D-400E-A60D-1D6FB8853D4A}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="popDimSignedContract"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="2">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{EB8067AE-17DE-4C61-BD1C-165EB89382F4}"
          SQLTask:SqlStatementSource="ETL.popDimSignedContract&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\popStgRentalContracts"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:Disabled="True"
      DTS:DTSID="{F75BAFC7-7C22-4E0A-A5FA-7FFDB8104E2B}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="popStgRentalContracts"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="2">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{EB8067AE-17DE-4C61-BD1C-165EB89382F4}"
          SQLTask:SqlStatementSource="etl.pop_RentalContracts_scrive" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\TruncStaging"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{AF95F149-78A6-45FE-9595-71C416E900DD}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="TruncStaging"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{EB8067AE-17DE-4C61-BD1C-165EB89382F4}"
          SQLTask:SqlStatementSource="truncate table wrk.RentalContracts_scrive" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{AB5200CB-BBEE-49EB-9965-4AF55755CD67}"
      DTS:From="Package\TruncStaging"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\Getcontracts" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 1]"
      DTS:CreationName=""
      DTS:DTSID="{B04AE18E-5748-457F-A3CD-397E54A1E5C9}"
      DTS:From="Package\Getcontracts"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 1"
      DTS:To="Package\popStgRentalContracts" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 2]"
      DTS:CreationName=""
      DTS:DTSID="{30F969E1-C993-4F1E-817D-41A450CCD644}"
      DTS:From="Package\getMaxDocID"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 2"
      DTS:To="Package\Getcontracts" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 3]"
      DTS:CreationName=""
      DTS:DTSID="{CB5942D7-4A5E-44DB-BD87-17877DDD17E3}"
      DTS:From="Package\popStgRentalContracts"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 3"
      DTS:To="Package\popDimSignedContract" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 4]"
      DTS:CreationName=""
      DTS:DTSID="{0B5A44AA-DF3E-447E-9CAC-39D6F6CE3985}"
      DTS:From="Package\getMaxDocID"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 4"
      DTS:To="Package\Getcontracts full" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 5]"
      DTS:CreationName=""
      DTS:DTSID="{0C2EBE4A-5DFB-4142-9587-D21AB8BEC3A1}"
      DTS:From="Package\popDimSignedContract"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 5"
      DTS:To="Package\exec ET popDimRentalAgreement" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 6]"
      DTS:CreationName=""
      DTS:DTSID="{44746928-FBAD-4C86-870A-01C7A51EA9B7}"
      DTS:From="Package\Getcontracts"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 6"
      DTS:To="Package\pop srive extra" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 7]"
      DTS:CreationName=""
      DTS:DTSID="{CCCF2545-1B62-4E30-AF3A-73395726ED90}"
      DTS:From="Package\Getcontracts"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 7"
      DTS:To="Package\Merge new contracts" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 8]"
      DTS:CreationName=""
      DTS:DTSID="{A04035E7-FE4B-4BF0-9625-6D9298A7026F}"
      DTS:From="Package\getMaxDocID"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 8"
      DTS:To="Package\TruncStaging" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="32" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssge="clr-namespace:Microsoft.SqlServer.Graph.Extended;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
        <NodeLayout
          Size="287,44"
          Id="Package\exec ET popDimRentalAgreement"
          TopLeft="421.311320754717,522.858490566038" />
        <NodeLayout
          Size="138,42"
          Id="Package\Getcontracts"
          TopLeft="121.764150943396,152.764150943396" />
        <NodeLayout
          Size="152,44"
          Id="Package\Getcontracts full"
          TopLeft="662.556603773585,63.5188679245283" />
        <NodeLayout
          Size="142,42"
          Id="Package\getMaxDocID"
          TopLeft="231.198113207547,8.82075471698113" />
        <NodeLayout
          Size="177,42"
          Id="Package\Merge new contracts"
          TopLeft="14,304" />
        <NodeLayout
          Size="211,44"
          Id="Package\pop srive extra"
          TopLeft="420.216981132076,332.537735849057" />
        <NodeLayout
          Size="196,44"
          Id="Package\popDimSignedContract"
          TopLeft="86.6320754716982,469.990566037736" />
        <NodeLayout
          Size="197,44"
          Id="Package\popStgRentalContracts"
          TopLeft="157.367924528302,386.594339622642" />
        <NodeLayout
          Size="141,42"
          Id="Package\TruncStaging"
          TopLeft="5.5,5.5" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="76,47.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="93.0974842767293,105.264150943396"
              Start="0,0"
              End="93.0974842767293,97.764150943396">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,58.4346110180028" />
                  <mssgle:CubicBezierSegment
                    Point1="0,58.4346110180028"
                    Point2="0,62.4346110180028"
                    Point3="4,62.4346110180028" />
                  <mssgle:LineSegment
                    End="89.0974842767293,62.4346110180028" />
                  <mssgle:CubicBezierSegment
                    Point1="89.0974842767293,62.4346110180028"
                    Point2="93.0974842767293,62.4346110180028"
                    Point3="93.0974842767293,66.4346110180028" />
                  <mssgle:LineSegment
                    End="93.0974842767293,97.764150943396" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 1]"
          TopLeft="190.764150943396,194.764150943396">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="65.103773584906,191.830188679246"
              Start="0,0"
              End="65.103773584906,184.330188679246">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,91.915094339623" />
                  <mssgle:CubicBezierSegment
                    Point1="0,91.915094339623"
                    Point2="0,95.915094339623"
                    Point3="4,95.915094339623" />
                  <mssgle:LineSegment
                    End="61.103773584906,95.915094339623" />
                  <mssgle:CubicBezierSegment
                    Point1="61.103773584906,95.915094339623"
                    Point2="65.103773584906,95.915094339623"
                    Point3="65.103773584906,99.915094339623" />
                  <mssgle:LineSegment
                    End="65.103773584906,184.330188679246" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 2]"
          TopLeft="302.198113207547,50.8207547169811">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="-89.7672955974843,101.943396226415"
              Start="0,0"
              End="-89.7672955974843,94.4433962264149">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,56.4649943234037" />
                  <mssgle:CubicBezierSegment
                    Point1="0,56.4649943234037"
                    Point2="0,60.4649943234037"
                    Point3="-4,60.4649943234037" />
                  <mssgle:LineSegment
                    End="-85.7672955974843,60.4649943234037" />
                  <mssgle:CubicBezierSegment
                    Point1="-85.7672955974843,60.4649943234037"
                    Point2="-89.7672955974843,60.4649943234037"
                    Point3="-89.7672955974843,64.4649943234037" />
                  <mssgle:LineSegment
                    End="-89.7672955974843,94.4433962264149" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 3]"
          TopLeft="255.867924528302,430.594339622642">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="-71.2358490566038,39.396226415094"
              Start="0,0"
              End="-71.2358490566038,31.896226415094">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,15.698113207547" />
                  <mssgle:CubicBezierSegment
                    Point1="0,15.698113207547"
                    Point2="0,19.698113207547"
                    Point3="-4,19.698113207547" />
                  <mssgle:LineSegment
                    End="-67.2358490566038,19.698113207547" />
                  <mssgle:CubicBezierSegment
                    Point1="-67.2358490566038,19.698113207547"
                    Point2="-71.2358490566038,19.698113207547"
                    Point3="-71.2358490566038,23.698113207547" />
                  <mssgle:LineSegment
                    End="-71.2358490566038,31.896226415094" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 4]"
          TopLeft="373.198113207547,29.8207547169811">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="289.358490566038,55.6981132075472"
              Start="0,0"
              End="281.858490566038,55.6981132075472">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="140.679245283019,0" />
                  <mssgle:CubicBezierSegment
                    Point1="140.679245283019,0"
                    Point2="144.679245283019,0"
                    Point3="144.679245283019,4" />
                  <mssgle:LineSegment
                    End="144.679245283019,51.6981132075472" />
                  <mssgle:CubicBezierSegment
                    Point1="144.679245283019,51.6981132075472"
                    Point2="144.679245283019,55.6981132075472"
                    Point3="148.679245283019,55.6981132075472" />
                  <mssgle:LineSegment
                    End="281.858490566038,55.6981132075472" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 5]"
          TopLeft="282.632075471698,491.990566037736">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="138.679245283019,52.867924528302"
              Start="0,0"
              End="131.179245283019,52.867924528302">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="65.3396226415094,0" />
                  <mssgle:CubicBezierSegment
                    Point1="65.3396226415094,0"
                    Point2="69.3396226415094,0"
                    Point3="69.3396226415094,4" />
                  <mssgle:LineSegment
                    End="69.3396226415094,48.867924528302" />
                  <mssgle:CubicBezierSegment
                    Point1="69.3396226415094,48.867924528302"
                    Point2="69.3396226415094,52.867924528302"
                    Point3="73.3396226415094,52.867924528302" />
                  <mssgle:LineSegment
                    End="131.179245283019,52.867924528302" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 6]"
          TopLeft="212.430817610063,194.764150943396">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="313.286163522013,137.773584905661"
              Start="0,0"
              End="313.286163522013,130.273584905661">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.0568740876902" />
                  <mssgle:CubicBezierSegment
                    Point1="0,52.0568740876902"
                    Point2="0,56.0568740876902"
                    Point3="4,56.0568740876902" />
                  <mssgle:LineSegment
                    End="309.286163522013,56.0568740876902" />
                  <mssgle:CubicBezierSegment
                    Point1="309.286163522013,56.0568740876902"
                    Point2="313.286163522013,56.0568740876902"
                    Point3="313.286163522013,60.0568740876902" />
                  <mssgle:LineSegment
                    End="313.286163522013,130.273584905661" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 7]"
          TopLeft="158.264150943396,194.764150943396">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="-55.764150943396,109.235849056604"
              Start="0,0"
              End="-55.764150943396,101.735849056604">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,33.7924975409104" />
                  <mssgle:CubicBezierSegment
                    Point1="0,33.7924975409104"
                    Point2="0,37.7924975409104"
                    Point3="-4,37.7924975409104" />
                  <mssgle:LineSegment
                    End="-51.764150943396,37.7924975409104" />
                  <mssgle:CubicBezierSegment
                    Point1="-51.764150943396,37.7924975409104"
                    Point2="-55.764150943396,37.7924975409104"
                    Point3="-55.764150943396,41.7924975409104" />
                  <mssgle:LineSegment
                    End="-55.764150943396,101.735849056604" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 8]"
          TopLeft="231.198113207547,28.1603773584906">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="-84.698113207547,0"
              Start="0,0"
              End="-77.198113207547,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-77.198113207547,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <AnnotationLayout
          Text="GEts contracts after the first 120.000, set in script"
          ParentId="Package"
          Size="277,38"
          Id="941d4954-87e6-41c2-ba53-e80bcf52694c"
          TopLeft="255.405660377359,184.839622641509">
          <AnnotationLayout.FontInfo>
            <mssge:FontInfo
              Family="Tahoma"
              Size="11.25"
              Color="#FF080000">
              <mssge:FontInfo.TextDecorations>
                <av:TextDecorationCollection />
              </mssge:FontInfo.TextDecorations>
            </mssge:FontInfo>
          </AnnotationLayout.FontInfo>
        </AnnotationLayout>
        <AnnotationLayout
          Text="ETL.popDimSignedContract"
          ParentId="Package"
          Size="164,38"
          Id="7f12df10-941f-4513-a2d1-f7b5d4b508b7"
          TopLeft="71.4811320754717,520.933962264151">
          <AnnotationLayout.FontInfo>
            <mssge:FontInfo
              Family="Tahoma"
              Size="11.25"
              Color="#FF080000">
              <mssge:FontInfo.TextDecorations>
                <av:TextDecorationCollection />
              </mssge:FontInfo.TextDecorations>
            </mssge:FontInfo>
          </AnnotationLayout.FontInfo>
        </AnnotationLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\Getcontracts">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssge="clr-namespace:Microsoft.SqlServer.Graph.Extended;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
        <NodeLayout
          Size="152,42"
          Id="Package\Getcontracts\wrk_Srive_data"
          TopLeft="551,250" />
        <NodeLayout
          Size="250,42"
          Id="Package\Getcontracts\get Scripe contracts from web (rest)"
          TopLeft="500,66" />
        <EdgeLayout
          Id="Package\Getcontracts.Paths[Contracts]"
          TopLeft="626,108">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="0,142"
              Start="0,0"
              End="0,134.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,134.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <AnnotationLayout
          Text="User::fullLoad,&#xA;User::getMaxNorows,&#xA;User::getNoRows,&#xA;User::MaxDocID"
          ParentId="Package\Getcontracts"
          Size="352,78"
          Id="0614f20b-156d-4106-ab50-243ceec040ce"
          TopLeft="272.38679245283,129.632075471698">
          <AnnotationLayout.FontInfo>
            <mssge:FontInfo
              Family="Tahoma"
              Size="11.25"
              Color="#FFFFFF00">
              <mssge:FontInfo.TextDecorations>
                <av:TextDecorationCollection />
              </mssge:FontInfo.TextDecorations>
            </mssge:FontInfo>
          </AnnotationLayout.FontInfo>
        </AnnotationLayout>
        <AnnotationLayout
          Text="9222115557403762556"
          ParentId="Package\Getcontracts"
          Size="143,37"
          Id="999d0ce0-0b34-4be6-8dde-56620a052d01"
          TopLeft="277,205.272727272727">
          <AnnotationLayout.FontInfo>
            <mssge:FontInfo
              Color="#FFF1F1F1">
              <mssge:FontInfo.TextDecorations>
                <av:TextDecorationCollection />
              </mssge:FontInfo.TextDecorations>
            </mssge:FontInfo>
          </AnnotationLayout.FontInfo>
        </AnnotationLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Getcontracts\wrk_Srive_data">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Getcontracts full">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="NaN,NaN"
          Id="Package\Getcontracts full\get Scripe contracts from web (rest)"
          TopLeft="NaN,NaN" />
        <NodeLayout
          Size="NaN,NaN"
          Id="Package\Getcontracts full\wrk RentalAgreements"
          TopLeft="NaN,NaN" />
        <EdgeLayout
          Id="Package\Getcontracts full.Paths[Contracts]"
          TopLeft="NaN,NaN">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="{x:Null}"
              Start="0,0"
              End="0,0">
              <mssgle:Curve.Segments>
                <x:Null />
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>